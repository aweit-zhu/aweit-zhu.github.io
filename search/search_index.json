{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> <li><code>mkdocs gh-deploy --force</code> - \u90e8\u7f72\u81f3 GITHUB PAGE</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"completableFuture/","title":"Java 8 CompletableFuture","text":""},{"location":"completableFuture/#java-8-completablefuture","title":"Java 8 CompletableFuture","text":"<p>\u53c3\u8003\u8cc7\u6599\uff1ahttps://medium.com/javarevisited/java-completablefuture-c47ca8c885af</p>"},{"location":"completableFuture/#_1","title":"\u5efa\u69cb\u65b9\u6cd5","text":"\u65b9\u6cd5     runAsync(Runnable runnable)   runAsync(Runnable runnable, Executor executor)   supplyAsync(Supplier supplier)   supplyAsync(Supplier supplier, Executor executor)    <p><code>runAsync()</code>: \u57f7\u884c\u975e\u540c\u6b65\u5de5\u4f5c\uff0c\u6c92\u6709\u56de\u50b3\u503c\u3002 <code>supplyAsync()</code> \u57f7\u884c\u975e\u540c\u6b65\u5de5\u4f5c\uff0c\u6709\u4e00\u56de\u50b3\u503c\u3002 <code>executor</code>: \u81ea\u5b9a\u7fa9Thread Pool\u3002</p> <pre><code>// Example using runAsync()\nCompletableFuture&lt;Void&gt; future1 = CompletableFuture.runAsync(() -&gt; {\n    // Perform some asynchronous task\n    System.out.println(\"Task executed asynchronously\");\n});\n\n// Example using supplyAsync()\nCompletableFuture&lt;Integer&gt; future2 = CompletableFuture.supplyAsync(() -&gt; {\n    // Perform some asynchronous computation\n    return 42;\n});\n</code></pre>"},{"location":"completableFuture/#blocking-and-non-blocking","title":"Blocking (\u963b\u65b7) and Non-blocking (\u975e\u963b\u585e)","text":"<p>\u963b\u65b7</p> <pre><code>CompletableFuture&lt;Integer&gt; future1 = CompletableFuture.supplyAsync(() -&gt; \"hello!\")\n        .thenApplyAsync(s -&gt; s.length());\ntry {\n    Integer length = future1.get(); // \u6703\u7b49\u5230 Fucure \u7269\u4ef6\u8655\u7406\u5b8c\u7562\u4e86\uff0c\u4e26\u4e14\u53d6\u5230\u7d50\u679c\u503c\u4e86\uff0c\u624d\u6703\u5f80\u4e0b\u57f7\u884c\u3002\u6545\uff0c\u4e3b\u57f7\u884c\u7dd2\u88ab\u963b\u65b7\u5728\u9019\u88e1\u4e86\u3002\n    System.out.println(\"length:\" + length);\n} catch (InterruptedException | ExecutionException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n} \nSystem.out.println(\"end\");\n</code></pre> <p>\u975e\u963b\u65b7</p> <pre><code>CompletableFuture future2 = CompletableFuture.supplyAsync(() -&gt; \"hello!\")\n        .thenApplyAsync(s -&gt; s.length())\n        .thenAccept(length -&gt; System.out.println(\"length: \" + length));\n\n// Non Blocking Code \n\nfuture2.join(); // Wait for the future to complete\n\n// \u7b49\u5230 future2 \u57f7\u884c\u5b8c\u7562\u5f8c\uff0c\u624d\u6703\u7e7c\u7e8c\u57f7\u884c\u4ee5\u4e0b\u3002\nSystem.out.println(\"end\");\n</code></pre>"},{"location":"completableFuture/#exception-handling","title":"Exception Handling","text":"<pre><code>CompletableFuture&lt;Integer&gt; future = CompletableFuture.supplyAsync(() -&gt; {\n    int result = 10 / 0; // Causes an ArithmeticException\n    return result;\n});\n\nfuture.exceptionally(ex -&gt; {\n    System.out.println(\"Exception occurred: \" + ex.getMessage());\n    return 0; // Default value to return if there's an exception\n}).thenAccept(result -&gt; {\n    System.out.println(\"Result: \" + result);\n});\n\n---\nException occurred: java.lang.ArithmeticException: / by zero\nResult: 0\n</code></pre>"},{"location":"completableFuture/#composible","title":"Composible","text":"<pre><code>CompletableFuture&lt;String&gt; future = CompletableFuture.supplyAsync(() -&gt; \"Hello\");\n\nCompletableFuture&lt;Integer&gt; transformedFuture = future.thenApplyAsync(s -&gt; {\n    System.out.println(\"Thread: \" + Thread.currentThread().getName());\n    return s.length();\n});\n\ntransformedFuture.thenAccept(length -&gt; {\n    System.out.println(\"Thread: \" + Thread.currentThread().getName());\n    System.out.println(\"Length of Hello: \" + length);\n});\n</code></pre> <ul> <li>xxxx(function): function\u6703\u7528\u524d\u500b\u57f7\u884c\u7684thread\u53bb\u547c\u53eb\u3002</li> <li>xxxxAsync(function): function\u6703\u7528\u975e\u540c\u6b65\u7684\u65b9\u5f0f\u547c\u53eb\uff0c\u4e26\u7528\u9810\u8a2d\u7684thread pool\u3002</li> <li>xxxxAsync(function, executor): function\u6703\u7528\u975e\u540c\u6b65\u7684\u65b9\u5f0f\u547c\u53eb\uff0c\u4e26\u7528\u6307\u5b9a\u7684thread pool\u3002</li> </ul>    \u65b9\u6cd5 \u63cf\u8ff0     thenRun() \u540c\u4e00\u57f7\u884c\u7dd2\uff0c\u57f7\u884c\u56de\u50b3 void \u7684\u4efb\u52d9   thenRunAsync() \u4e0d\u540c\u57f7\u884c\u7dd2\uff0c\u57f7\u884c\u56de\u50b3 void \u7684\u4efb\u52d9   thenApply() \u540c\u4e00\u57f7\u884c\u7dd2\uff0c\u57f7\u884c\u56de\u50b3\u7269\u4ef6\u7684\u4efb\u52d9   thenApplyAsync() \u4e0d\u540c\u57f7\u884c\u7dd2\uff0c\u57f7\u884c\u56de\u50b3\u7269\u4ef6\u7684\u4efb\u52d9    <pre><code>CompletableFuture.supplyAsync(() -&gt; \"hello\").thenApplyAsync(s -&gt; s.toUpperCase())\n        .thenApplyAsync(s -&gt; s + \", world!\").thenApplyAsync(s -&gt; s.toUpperCase())\n        .whenComplete((r, ex) -&gt; System.out.println(r)).join();\n\nCompletableFuture.runAsync(() -&gt; sleep(1000)).thenRunAsync(() -&gt; sleep(100)).thenRunAsync(() -&gt; sleep(100))\n        .whenComplete((r, ex) -&gt; System.out.println(r)).join();\n</code></pre> <p>Compose \u5169\u7a2e\u6bd4\u8f03\uff1athenApplyAsync()\u3001thenCompose()</p> <pre><code>CompletableFuture&lt;Integer&gt; future = CompletableFuture.supplyAsync(() -&gt; 5).thenApplyAsync(r -&gt; r * 2);\nfuture.thenAccept(s -&gt; System.out.println(\"Final result: \" + s));\n\n\nCompletableFuture&lt;Integer&gt; future1 = CompletableFuture.supplyAsync(() -&gt; 5);\nCompletableFuture&lt;Integer&gt; future2 = future1.thenCompose(result -&gt; {\n    int doubledResult = result * 2;\n    return CompletableFuture.supplyAsync(() -&gt; doubledResult);\n});\nfuture2.thenAccept(result -&gt; System.out.println(\"Final result: \" + result));\n</code></pre>"},{"location":"completableFuture/#demo","title":"Demo","text":""},{"location":"completableFuture/#_2","title":"\u9700\u6c42\uff1a","text":"<p>\u6709\u4e00\u500b\u8a08\u6578\u5668\u6703\u7d71\u8a08\u76ee\u524d\u7684\u6578\u5b57\u3002\u7531\u65bc\u6709\u4e0d\u540c\u57f7\u884c\u7dd2\u6703\u6309\u4e0b\u8a08\u6578\u5668\uff0c\u6240\u4ee5\u9700\u8981\u5c07\u8a08\u6578\u5668\u7269\u4ef6\u9032\u884c\u9396\u5b9a\uff0c\u8b93\u8a72\u8a08\u6578\u5668\u589e\u52a0\u4e00\u4e0b\u7684\u52d5\u4f5c\uff0c\u50c5\u80fd\u6709\u4e00\u500b\u57f7\u884c\u7dd2\u9032\u884c\u64cd\u4f5c\uff0c\u4ee5\u907f\u514d\u8a08\u6578\u5668\u6578\u5b57\u4e0d\u6b63\u78ba\u3002</p>"},{"location":"completableFuture/#count","title":"Count\uff1a","text":"<pre><code>public class Count {\n int cnt = 0;\n\n public void addctn() {\n  synchronized (this) {\n   try {\n    Thread.sleep(100);\n   } catch (InterruptedException e) {\n    e.printStackTrace();\n   }\n   cnt++;\n  }\n }\n\n public int getctn() {\n  synchronized (this) {\n   return cnt;\n  }\n }\n}\n</code></pre>"},{"location":"completableFuture/#20-thread-pool","title":"\u6a21\u64ec 20 \u500b\u57f7\u884c\u7dd2\uff0c\u5171\u540c\u5c0d\u8a08\u6578\u5668\u9032\u884c\u64cd\u4f5c\u3002\u4e26\u4e14\u4f7f\u7528\u56fa\u5b9a\u7684Thread Pool\u9032\u884c\u7ba1\u7406\u3002","text":"<pre><code> public static void main(String[] args) throws InterruptedException {\n\n  Count count = new Count();\n\n  ExecutorService executor = Executors.newFixedThreadPool(5);\n\n  for (int i = 0; i &lt; 20; i++) {\n   CompletableFuture&lt;Void&gt; future = CompletableFuture.runAsync(() -&gt; {\n    String threadName = Thread.currentThread().getName();\n    System.out.println(\"run \" + threadName + \" thread\");\n    count.addctn();\n   }, executor);\n   future.join();\n  }\n\n  executor.shutdown();\n\n  System.out.println(\"\u8a08\u6578\u5668:\" + count.getctn());\n }\n---\nrun pool-1-thread-1 thread\nrun pool-1-thread-2 thread\nrun pool-1-thread-3 thread\nrun pool-1-thread-4 thread\nrun pool-1-thread-5 thread\nrun pool-1-thread-1 thread\nrun pool-1-thread-2 thread\nrun pool-1-thread-3 thread\nrun pool-1-thread-4 thread\nrun pool-1-thread-5 thread\nrun pool-1-thread-1 thread\nrun pool-1-thread-2 thread\nrun pool-1-thread-3 thread\nrun pool-1-thread-4 thread\nrun pool-1-thread-5 thread\nrun pool-1-thread-1 thread\nrun pool-1-thread-2 thread\nrun pool-1-thread-3 thread\nrun pool-1-thread-4 thread\nrun pool-1-thread-5 thread\n\u8a08\u6578\u5668:20\n</code></pre>"},{"location":"dapr/","title":"Dapr","text":""},{"location":"dapr/#ubuntu-java-11","title":"\u5982\u4f55\u5728 Ubuntu \u5b89\u88dd Java 11","text":"<pre><code>sudo apt-get update\nsudo apt-get install openjdk-11-jdk\n</code></pre>"},{"location":"dapr/#deploy-dapr-on-k8s","title":"Deploy Dapr on K8S","text":"<p>\u53c3\u8003 https://docs.dapr.io/operations/hosting/kubernetes/kubernetes-deploy/</p> <p>\u9810\u8a2d dapr-dashboard \u6c92\u6709\u5c0d\u5916\u958b\u7aef\u53e3\uff0c\u6240\u4ee5\u8981\u5728\u672c\u6a5f\u57f7\u884c kubectl port-forward </p>"},{"location":"dapr/#kubectl-port-forward-servicemyservice","title":"\u5982\u4f55\u5728\u672c\u6a5f\u4f7f\u7528 kubectl port-forward\uff0c\u4ee5 service/{myservice} \u70ba\u4f8b","text":"<ul> <li>\u78ba\u8a8d C:\\Users\\user.kube \u6a94\u6848\u7684\u8cc7\u8a0a\uff0c\u70ba microk8s config \u7684\u8cc7\u8a0a</li> </ul>    <ul> <li> <p>\u57f7\u884c\u6307\u4ee4\uff1a</p> <pre><code>kubectl port-forward service/dapr-dashboard  8080:8080 -n dapr-system\n</code></pre> </li> <li> <p>\u6253\u958b\u672c\u6a5f\u700f\u89bd\u5668 http://localhost:8080</p> </li> </ul>"},{"location":"docker/","title":"Docker","text":""},{"location":"docker/#docker-volume-war","title":"\u4f7f\u7528 Docker \u7684 Volume \u4f86\u90e8\u7f72 war \u6a94","text":"<ol> <li> <p>Dockerfile</p> <pre><code>FROM openjdk:8\n\nRUN apt-get update &amp;&amp; apt-get install -y wget\n\nRUN cd /\n\nRUN wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.10/bin/apache-tomcat-10.1.10.tar.gz\nRUN tar zxvf apache-tomcat-10.1.10.tar.gz\n\nVOLUME [\"/apache-tomcat-10.1.10/webapps\"]\n\nCMD [\"/apache-tomcat-10.1.10/bin/catalina.sh\", \"run\"]\n</code></pre> </li> <li> <p>\u900f\u904e VSCode \u57f7\u884c docker build</p> </li> <li> <p>\u57f7\u884c</p> <pre><code>docker run -d --name tomcat -p 8080:8080 tomcatserver\n</code></pre> </li> <li> <p>\u5377\u5b97\u6709\u5169\u7a2e\u639b\u8f09\u65b9\u5f0f\uff0c\u4e00\u7a2e\u5377\u5b97\u639b\u8f09\u3001\u4e00\u7a2e\u7e6b\u7d50\u639b\u8f09\u3002</p> <pre><code>docker inspect -f '{{.Mounts}}' tomcat\n\n[{volume 64c8c0866ae8f36f7471359d1d0c564b6fc3088fec5137a5f21b51c0d145cbb2 /var/lib/docker/volumes/64c8c0866ae8f36f7471359d1d0c564b6fc3088fec5137a5f21b51c0d145cbb2/_data /apache-tomcat-10.1.10/webapps local  true }]\n</code></pre> </li> <li> <p>\u5377\u5b97\u639b\u8f09\uff1a(\u9019\u6b21\u4f8b\u5b50\u9069\u7528)</p> </li> </ol>  <ul> <li> <p>\u7e6b\u7d50\u639b\u8f09\uff1a(\u4e00\u822c\u63a8\u85a6\u7528\u9019\u7a2e)</p> </li> <li> <p>\u6bd4\u8f03\u5169\u8005\u4e0d\u540c\uff1a</p> </li> </ul>  <ul> <li>Volume \u5b58\u653e\u5728\u4e3b\u6a5f\u6a94\u6848\u7cfb\u7d71\u4e2d\u7531 Docker \u7ba1\u7406\u7684\u5730\u65b9\uff0c\u5728 Linux \u4f5c\u696d\u7cfb\u7d71\u662f /var/lib/docker/volumes/ \u6b64\u8def\u5f91\u3002\u975e Docker \u7684\u884c\u7a0b\u4e0d\u61c9\u8a72\u4fee\u6539\u6a94\u6848\u7cfb\u7d71\u4e2d\u7684\u9019\u4e00\u90e8\u5206\u3002\u8981\u5728 Docker \u4e2d\u7559\u5b58\u8cc7\u6599\uff0cvolumes \u662f\u6700\u597d\u7684\u65b9\u6cd5\u3002</li> <li>Bind mount \u53ef\u5b58\u653e\u5728\u4e3b\u6a5f\u6a94\u6848\u7cfb\u7d71\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u975e Docker \u884c\u7a0b\u6216 Docker \u5bb9\u5668\u53ef\u96a8\u6642\u4fee\u6539\u3002</li> <li>tmpfs mount \u53ea\u5b58\u653e\u5728\u4e3b\u6a5f\u7684\u8a18\u61b6\u9ad4\u4e2d\uff0c\u4e0d\u6703\u5beb\u5165\u4e3b\u6a5f\u7684\u6a94\u6848\u7cfb\u7d71\u3002</li> </ul> <p>https://ithelp.ithome.com.tw/articles/10207973</p>"},{"location":"drone/","title":"Drone \u7b46\u8a18","text":""},{"location":"drone/#1-ngrokip-localhost8082","title":"1.\u900f\u904e ngrok\uff0c\u5efa\u7acb\u516c\u958bIP\uff0c\u7d81\u5b9a localhost:8082  (\u91cd\u555f\u3001\u91cd\u958b\u6a5f\u5c31\u6c92\u4e86)","text":""},{"location":"drone/#2github","title":"2.\u7d81\u5b9agithub","text":"<ul> <li> <p>\u524d\u5f80 settings -&gt; Developer Settings </p> </li> <li> <p>\u5efa\u7acb\u4e00\u500b OAuth APP Homepage URL\uff1a\u586b\u525b\u525b\u7528 ngrok \u63d0\u5171\u7684 \u516c\u958b IP  https://b5c9-58-115-111-122.ngrok-free.app </p> </li> <li> <p>\u7522\u751f Client ID \u8207 Client Secret</p> </li> </ul>  <p>Client ID\uff1a 3ab12bcea99814fd59df Client Secret\uff1a 2ae999f7e3e8bc29c1c5fec1918d1d1ba13a2067</p>"},{"location":"drone/#3-docker-compose-drone-server","title":"3.\u900f\u904e Docker Compose \u5efa\u7acb drone server","text":"<ul> <li> <p>\u958b\u555f CMD\uff0c\u8f38\u5165 WSL\u3002</p>  </li> <li> <p>\u5207\u5230 home \u8def\u5f91\u3002</p> <pre><code>cd ~\n</code></pre> </li> <li> <p>\u5efa\u7acb drone-server \u8cc7\u6599\u593e</p> <pre><code>mkdir drone-server\ncd drone-server\n</code></pre> </li> <li> <p>\u5efa\u7acb docker-compose.github.yml</p> <pre><code>nano docker-compose.github.yml\n</code></pre> </li> </ul> <p>\u8cbc\u4e0a\u4ee5\u4e0b</p> <pre><code>version: '2'\nservices:\ndrone-server:\n    /assets/image: drone/drone:1\n    ports:\n    - 8082:80\n    volumes:\n    - ./:/data\n    restart: always\n    environment:\n    - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}\n    - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}\n    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}\n    - DRONE_GITHUB_SERVER=&lt;https://github.com&gt;\n    - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}\n    - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}\n    - DRONE_LOGS_PRETTY=true\n    - DRONE_LOGS_COLOR=true\n    - DRONE_USER_CREATE=username:aweit-zhu,admin:true\n</code></pre>"},{"location":"drone/#runner-for-docker-version","title":"runner for docker version","text":"<pre><code>drone-runner:\n    /assets/image: drone/drone-runner-docker:1\n    restart: always\n    depends_on:\n    - drone-server\n    volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n    - DRONE_RPC_HOST=${DRONE_RPC_HOST}\n    - DRONE_RPC_PROTO=${DRONE_RPC_PROTO}\n    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}\n    - DRONE_RUNNER_CAPACITY=3\n</code></pre> <ul> <li>\u5efa\u7acb .env<pre><code>nano .env\n</code></pre> </li> </ul> <p>\u8cbc\u4e0a\u4ee5\u4e0b</p> <pre><code>\u6211\u5011\u76ee\u524d\u6709\u7684\u8cc7\u8a0a\u70ba\uff1a\n\u516c\u958b IP  &lt;https://b5c9-58-115-111-122.ngrok-free.app&gt;\nClient ID\uff1a 3ab12bcea99814fd59df\nClient Secret\uff1a 2ae999f7e3e8bc29c1c5fec1918d1d1ba13a2067\n\nDRONE_SERVER_HOST=&lt;https://b5c9-58-115-111-122.ngrok-free.app&gt;\nDRONE_SERVER_PROTO=https\nDRONE_RPC_SECRET=123\nDRONE_RPC_HOST=drone-server\nDRONE_RPC_PROTO=http\nDRONE_GITHUB_CLIENT_ID=3ab12bcea99814fd59df\nDRONE_GITHUB_CLIENT_SECRET=2ae999f7e3e8bc29c1c5fec1918d1d1ba13a2067\n</code></pre>  <ul> <li> <p>\u555f\u52d5\u5bb9\u5668</p> <p>docker-compose -f docker-compose.github.yml up -d</p> </li> </ul>   <ul> <li>\u6253\u958b https://b5c9-58-115-111-122.ngrok-free.app</li> </ul> <p>\u9ede\u9078 Visit Site</p>  <p>\u9ede\u9078 Authorize aweit-zhu</p>  <ul> <li>Drone Server \u7684\u64cd\u4f5c</li> </ul> <p>\u9078\u64c7 aweit-zhu/docker-demo \u9032\u884c Activate \u9078\u64c7 Trusted \u9ede\u9078 Save </p> <ul> <li>\u56de\u5230 github \u505a\u8a2d\u5b9a</li> </ul> <p>\u5c07 Payload URL \u4fee\u6539\u70ba \u4fee\u6539\u70ba https://b5c9-58-115-111-122.ngrok-free.app /hook</p>"},{"location":"drone/#4-droneyml","title":"4. \u64b0\u5beb .drone.yml \u6a94","text":"<ul> <li>\u5efa\u7acb ssh_password_master secret</li> </ul>  <ul> <li>\u5efa\u7acb ssh_password secret</li> </ul>  <ul> <li> <p>\u89e3\u6790 .drone.yml (\u7565)</p> <pre><code>kind: pipeline\ntype: docker\nname: docker-demo-drone\nsteps:\n\n- name: test\n    /assets/image: maven:3-jdk-8\n    volumes:\n- name: maven-cache\n        path: /root/.m2\n- name: maven-build\n        path: /app/build\n    commands:\n- mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V\n- mvn test -B\n\n- name: package\n    /assets/image: maven:3-jdk-8\n    volumes:\n- name: maven-cache\n        path: /root/.m2\n- name: maven-build\n        path: /app/build\n    commands:\n- mvn clean package\n- cp target/docker-demo.jar /app/build/docker-demo.jar\n- cp Dockerfile /app/build/Dockerfile\n- cp docker-k8s-demo-deployment.yaml /app/build/docker-k8s-demo-deployment.yaml\n- cp deploymentservice.yaml /app/build/deploymentservice.yaml\n- cp run.sh /app/build/run.sh\n\n- name: scp files\n    /assets/image: appleboy/drone-scp\n    settings:\n    host: 192.168.0.17\n    username: root\n    password:\n        from_secret: ssh_password_master\n    port: 22\n    command_timeout: 2m\n    target: /mydata/maven/build\n    source: ./*\n\n- name: build-start01\n    /assets/image: appleboy/drone-ssh\n    settings:\n    host: 172.31.93.122\n    username: root\n    password:\n        from_secret: ssh_password\n    port: 2222\n    command_timeout: 5m\n    script:\n        - cd /mydata/maven/build\n        - chmod +x run.sh\n        - ./run.sh\n\n- name: build-start02\n    /assets/image: appleboy/drone-ssh\n    settings:\n    host: 192.168.0.17\n    username: vboxuser\n    password:\n        from_secret: ssh_password_master\n    port: 22\n    command_timeout: 5m\n    script:\n        - cd /mydata/maven/build\n        - microk8s.kubectl delete deploy docker-k8s-demo-deployment\n        - microk8s.kubectl apply -f ./docker-k8s-demo-deployment.yaml\n\nvolumes:\n\n- name: maven-build\n    host:\n    path: /mydata/maven/build\n- name: maven-cache\n    host:\n    path: /mydata/maven/cache\n</code></pre> </li> <li> <p>\u53ea\u8981 push \u5230\u9060\u7aef\uff0c\u5c31\u6703\u89f8\u767c drone \u57f7\u884c\u3002</p> </li> </ul>   <ul> <li>\u9a57\u8b49</li> </ul>  <p>\u6253\u958b\u700f\u89bd\u5668\uff0c\u8f38\u5165URL\uff1ahttp://192.168.0.17:60000/</p>"},{"location":"flutter/","title":"FlutterFire","text":""},{"location":"flutter/#flutterfire","title":"FlutterFire","text":""},{"location":"flutter/#step0-create-a-new-flutter-app","title":"Step0. create a new Flutter app","text":"<pre><code> flutter create example\n</code></pre>"},{"location":"flutter/#step1-install-the-required-command-line-tools","title":"Step1.  Install the required command line tools","text":"<ol> <li>install the Firebase CLI <code>npm install -g firebase-tools</code></li> <li>\u767b\u5165 Firebase. <code>firebase login</code></li> </ol> <p>\u5982\u679c\u5df2\u767b\u5165\uff0c\u6703\u986f\u793a <code>Already logged in as aa4192696@gmail.com</code>    \u5982\u679c\u672a\u767b\u5165\uff0c\u5247\u6703\u8df3\u51fa\u767b\u5165\u8996\u7a97\uff0c\u8b93\u60a8\u900f\u904e Google \u5e33\u865f\u767b\u5165\u3002</p> <p>(https://console.firebase.google.com/) 3. \u5b89\u88dd FlutterFire CLI.(\u5168\u57df)  <code>dart pub global activate flutterfire_cli</code></p>"},{"location":"flutter/#step-2-configure-your-apps-to-use-firebase","title":"Step 2: Configure your apps to use Firebase","text":"<ol> <li> <p>\u9032\u5165\u5230 Flutter \u5c08\u6848\u6839\u76ee\u9304\uff0c\u57f7\u884c\u4ee5\u4e0b\u6307\u4ee4</p> <p><code>flutterfire configure</code></p> <p>(1) \u9019\u908a\u4ee5\u5efa\u7acb\u65b0\u7684 firebase \u5c08\u6848\u70ba\u4f8b\uff0c\u540d\u5b57\u53d6\uff1a<code>aweit-example</code></p>  <p>(2) \u5168\u90e8\u5c31\u5c0d\u4e86\uff0c\u9019\u6a23\u6703\u5728 Firebase \u5c08\u6848\u4e2d\uff0c\u5efa\u7acb\u56db\u500b\u61c9\u7528\u7a0b\u5f0f\u3002</p>  <p>(3) \u90fd\u6210\u529f\u5f8c\uff0c\u6703\u986f\u793a\u4ee5\u4e0b\u8cc7\u8a0a\u3002</p>  </li> </ol>"},{"location":"flutter/#step-3-initialize-firebase-in-your-app","title":"Step 3: Initialize Firebase in your app","text":"<ol> <li> <p>\u5b89\u88dd firebase_core</p> <p><code>flutter pub add firebase_core</code></p> </li> <li> <p>\u518d\u6b21\u57f7\u884c <code>flutterfire configure</code>\uff0c\u4ee5\u78ba\u8a8d Flrebase \u8a2d\u5b9a\u662f\u6700\u65b0\u7684\u3002</p> </li> <li> <p>\u6253\u958b lib/main.dart\uff0c\u63d2\u5165\u4ee5\u4e0b\u4ee3\u78bc</p> <p>\u539f\u672c ``` import 'package:flutter/material.dart';</p> <p>void main() {     runApp(const MyApp()); } ```</p> <p>\u8b8a\u66f4\u70ba ``` import 'package:flutter/material.dart'; import 'package:firebase_core/firebase_core.dart'; import 'firebase_options.dart';</p> <p>Future main() async {     WidgetsFlutterBinding.ensureInitialized();     await Firebase.initializeApp(         options: DefaultFirebaseOptions.currentPlatform,     );     runApp(const MyApp()); } ``` 4. flutter run  <li> <p>\u76f8\u95dc\u932f\u8aa4\u8a0a\u606f\u8655\u7406\u65b9\u5f0f</p> <p>(1) \u82e5\u51fa\u73fe <code>If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter</code></p> <p>\u8981\u65b0\u589e\u4e00\u884c\u7a0b\u5f0f\u78bc\u5728 lib/main.dart \u7684 main \u65b9\u6cd5\u4e2d\u7684\u7b2c\u4e00\u884c\u3002 <code>WidgetsFlutterBinding.ensureInitialized();</code></p> </li>"},{"location":"flutter/#step-4-add-firebase-plugins","title":"Step 4: Add Firebase plugins","text":"<p>You access Firebase in your Flutter app through the various Firebase Flutter plugins, one for each Firebase product (for example: Cloud Firestore, Authentication, Analytics, etc.).</p> <p>Since Flutter is a multi-platform framework, each Firebase plugin is applicable for Apple, Android, and web platforms. So, if you add any Firebase plugin to your Flutter app, it will be used by the Apple, Android, and web versions of your app.</p>  <pre><code>flutter pub add {PLUGIN_NAME}\nflutterfire configure\nflutter run\n</code></pre>"},{"location":"flutter/#get-started-with-firebase-authentication-on-flutter","title":"Get Started with Firebase Authentication on Flutter","text":"<ol> <li>Google Enable</li> </ol>  <ol> <li>Android - SHA Key</li> </ol> <pre><code>keytool -list -v -alias androiddebugkey -keystore .\\.android\\debug.keystore\n\npassword: android\n</code></pre>  <p>SHA1: 29:C4:07:39:3C:33:37:25:06:73:34:D4:DC:11:D2:7B:6C:34:F8:B4 SHA256: &gt;56:F3:29:12:BB:90:C9:D9:95:0F:16:80:F1:19:EE:D2:99:CB:6B:95:4D:30:5D:16:F6:43:FB:72:31:97:54:36</p>    <ol> <li>Flutter Project \u76f8\u95dc\u8a2d\u5b9a</li> </ol> <p>\u5b89\u88dd\u5957\u4ef6\u3001\u8a2d\u5b9a Firebase</p> <pre><code>flutter pub add firebase_auth\nflutter pub add google_sign_in\nflutterfire configure\n</code></pre> <p>\u4fee\u6539\u8a2d\u5b9a\u503c android\\app\\build.gradle</p> <pre><code>defaultConfig {\n    multiDexEnabled true\n    minSdkVersion 19\n}\n</code></pre>  <p>Demo \u7a0b\u5f0f</p> <p>home.dart</p> <pre><code>import 'package:flutter/material.dart';\nimport 'package:google_sign_in/google_sign_in.dart';\n\nclass HomePage extends StatefulWidget {\n  @override\n  _HomePageState createState() =&gt; _HomePageState();\n}\n\nclass _HomePageState extends State&lt;HomePage&gt; {\n  bool _isLoggedIn = false;\n  late GoogleSignInAccount _userObj;\n  final GoogleSignIn _googleSignIn = GoogleSignIn();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text(\"Codesundar\")),\n      body: Container(\n        child: _isLoggedIn\n            ? Column(\n                children: [\n                  Image.network(_userObj.photoUrl!),\n                  Text(_userObj.displayName!),\n                  Text(_userObj.email),\n                  TextButton(\n                      onPressed: () {\n                        _googleSignIn.signOut().then((value) {\n                          setState(() {\n                            _isLoggedIn = false;\n                          });\n                        }).catchError((e) {});\n                      },\n                      child: Text(\"Logout\"))\n                ],\n              )\n            : Center(\n                child: ElevatedButton(\n                  child: Text(\"Login with Google\"),\n                  onPressed: () {\n                    _googleSignIn.signIn().then((userData) {\n                      setState(() {\n                        _isLoggedIn = true;\n                        _userObj = userData!;\n                      });\n                    }).catchError((e) {\n                      print(e);\n                    });\n                  },\n                ),\n              ),\n      ),\n    );\n  }\n}\n\n</code></pre> <p>main.dart</p> <pre><code>import 'package:firebase_auth/firebase_auth.dart';\nimport 'package:firebase_core/firebase_core.dart';\nimport 'package:flutter/material.dart';\nimport 'package:google_sign_in/google_sign_in.dart';\nimport 'firebase_options.dart';\nimport 'home.dart';\n\nFuture&lt;void&gt; main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  await Firebase.initializeApp(\n    options: DefaultFirebaseOptions.currentPlatform,\n  );\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Google Authencation Demo',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: HomePage(),\n    );\n  }\n}\n</code></pre> <ol> <li>\u756b\u9762</li> </ol>    <ol> <li>\u5982\u679c\u7528 Web \u6703\u7121\u6cd5\u505a\u51fa\u6548\u679c\uff0c\u51fa\u73fe\u4ee5\u4e0b\u932f\u8aa4\u8a0a\u606f\uff1a</li> </ol> <p><code>ClientID not set. Either set it on a &lt;meta name=\\\"google-signin-client_id\\\" content=\\\"CLIENT_ID\\\" /&gt; tag, or pass clientId when initializing GoogleSignIn</code></p> <p>(1) \u53bb\u627e Clitne id : 8073574655-9c9sa7onebk99ju1mf2i5e1kfi5m4hk0.apps.googleusercontent.com</p>  <p>(2) \u4fee\u6539\u4ee3\u78bc</p> <p>home.dart</p> <pre><code>\u539f\u672c\nfinal GoogleSignIn _googleSignIn = GoogleSignIn();\n\n\u5f8c\u4f86\nfinal GoogleSignIn _googleSignIn = GoogleSignIn(clientId: '8073574655-saga5315djjgbcgsgag5qfmgusl6tqpu.apps.googleusercontent.com');\n</code></pre> <p>(3) \u51fa\u73fe\u4ee5\u4e0b\u8a0a\u606f\uff0c\u5247\u76f4\u63a5\u9ede\u9078\uff0c\u7167\u8457\u6b65\u9a5f\u505a\u5373\u53ef\u3002</p>  <p>PlatformException(idpiframe_initialization_failed, Not a valid origin for the client: http://localhost:13529 has not been registered for client ID 8073574655-9c9sa7onebk99ju1mf2i5e1kfi5m4hk0.apps.googleusercontent.com. Please go to https://console.developers.google.com/ and register this origin for your project's client ID., https://developers.google.com/identity/sign-in/web/reference#error_codes, null)</p>   <p>\u5df2\u6388\u6b0a\u7684 JavaScript \u4f86\u6e90\uff0c\u8981\u628a\u9019\u500bPort\u52a0\u4e0a\u53bb </p> <p>(4) Flutter run \u6642\uff0c\u6307\u5b9a PORT = 12621 \u53c3\u6578\u3002--web-port=12621</p>  <p>(5) \u518d\u6b21\u6253\u958b\u700f\u89bd\u5668\uff0c\u4e26\u4e14\u6e05\u9664\u5feb\u53d6\u548c\u700f\u89bd\u8cc7\u6599\u3002\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"flutter/#try-out-an-example-app-with-analytics","title":"Try out an example app with Analytics","text":"<ol> <li><code>flutter pub add firebase_analytics</code></li> <li><code>flutterfire configure</code></li> <li>Access the lib directory of the app, then delete the existing main.dart file.</li> <li> <p>\u5c07\u4ee5\u4e0b\u5169\u500b\u6a94\u6848\uff0c\u8907\u88fd\u8cbc\u4e0a\u5230\u5c08\u6848\u4e2d lib/</p> <p>https://github.com/firebase/flutterfire/blob/master/packages/firebase_analytics/firebase_analytics/example/lib/main.dart</p> <p>https://github.com/firebase/flutterfire/blob/master/packages/firebase_analytics/firebase_analytics/example/lib/tabs_page.dart</p> </li> <li> <p>\u57f7\u884c flutter run</p> </li> <li> <p>\u932f\u8aa4\u8a0a\u606f</p> </li> <li> <p>\u932f\u8aa41   </p> </li> </ol>  <ul> <li>\u932f\u8aa42</li> </ul> <p>\u5982\u679c\u51fa\u73fe <code>Missing google_app_id. Firebase Analytics disabled</code> \u932f\u8aa4\u8a0a\u606f</p> <p>\u4ee3\u8868\u6709\u5169\u500b\u5730\u65b9\u9700\u8981\u4fee\u6539\uff1a</p> <pre><code>- android\\build.gradle\n\n```\nclasspath 'com.google.gms:google-services:4.3.15'\n```\n![Alt text](image-61.png)\n\n- android\\app\\build.gradle\n\n```\napply plugin: 'com.google.gms.google-services'\n```\n\n![Alt text](image-62.png)\n</code></pre> <ol> <li>\u6210\u679c</li> </ol>"},{"location":"microk8s/","title":"Microk8s \u7b46\u8a18","text":""},{"location":"microk8s/#1-master-oracle-vm-virtualbox","title":"1.\u5efa\u4e3b\u7bc0\u9ede master (Oracle VM VirtualBox)","text":"<ul> <li> <p>\u4e0b\u8f09 iso \u5370\u8c61\u6a94\uff0c\u9078\u64c7 ubuntu-22.04.2-desktop-amd64.iso</p> </li> <li> <p>\u958b\u555f Oracle VM VirtualBox \u7ba1\u7406\u54e1\uff0c\u9ede\u9078\u65b0\u589e -&gt; ISO\u6620\u50cf\u9078\u64c7 ubuntu-22.04.2-desktop-amd64.iso -&gt; \u4e0b\u4e00\u6b65 \u3002</p> </li> <li> <p>\u5e33\u865f\u5bc6\u78bc\u7528\u9810\u8a2d\u5373\u53ef\u3002\u4f7f\u7528\u8005\u540d\u7a31\u70ba vboxuser\uff1b\u5bc6\u78bc\u70ba changeme   </p> </li> <li> <p>\u786c\u9ad4\u898f\u683c\uff1a\u9810\u8a2d\u5373\u53ef\u3002   </p> </li> <li> <p>\u865b\u64ec\u786c\u9ad4\uff1a\u9810\u8a2d\u5373\u53ef\u3002   </p> </li> <li> <p>\u6458\u8981\uff1a\u76f4\u63a5\u6309\u5b8c\u6210\u3002   </p> </li> <li> <p>\u986f\u793a master\uff0c\u6703\u5b89\u88dd\u4e00\u6bb5\u6642\u9593\uff0c\u7d04 20 \u5206\u9418\u3002   </p> </li> <li> <p>\u900f\u904e CTRL+ALT+F5 \u5207\u63db\u6210 Terminal \u6a21\u5f0f\uff1bCTRL+ALT+F1 \u5207\u56de UI \u6a21\u5f0f\u3002</p> <p>\u8f38\u5165 CTRL+ALT+F5</p>  <p>\u8f38\u5165\u5e33\u865f\u3001\u5bc6\u78bc\u5f8c\u767b\u5165</p>  <p>\u53ef\u8f38\u5165 lsb_release -a \u67e5\u770b Ubuntu \u7248\u672c\uff0c\u6703\u986f\u793a Ubuntu 22.04.2 LTS\u3002</p>  </li> <li> <p>\u8a2d\u5b9a\u56fa\u5b9aIP\uff0c\u4e26\u4e14\u8981\u80fd\u5920\u9023\u81f3\u5916\u7db2\u3002</p> <p>\u5148\u95dc\u9589VM\uff0c\u4e26\u4e14\u5728\u7db2\u8def\u8a2d\u5b9a\uff0c\u586b\u9078\u4ecb\u97622\uff0c\u9078\u64c7\u6a4b\u63a5\u4ecb\u9762\u5361\u3002</p>  <p>\u8acb\u5148\u5efa\u7acb LANBridge \u865b\u64ec\u4ea4\u63db\u5668</p>  <p>\u67e5\u8a62\u76ee\u524dIP</p> <pre><code>hostname -I\n</code></pre>  <p>\u5207\u63db\u76ee\u9304\uff0c\u4e26\u5217\u51fa\u6a94\u6848\uff0c\u5176\u4e2d\u7684 01-network-manager-all.yaml \u70ba\u8981\u4fee\u6539\u7684\u8a2d\u5b9a\u6a94\u3002</p> <pre><code>cd /etc/netplan/\nls\n</code></pre>  <p>\u5207\u56de su root \uff0c\u5bc6\u78bc\u70ba changeme</p>  <p>\u4fee\u6539\u8a2d\u5b9a\u6a94\uff0c\u4fee\u6539\u5b8c\u5f8c\uff0c\u6309\u4e0b CTRL+X\uff0c\u518d\u8f38\u5165 Y\uff0c\u518d\u6309\u4e0b Enter \u5373\u53ef\u3002</p> <pre><code>sudo nano 01-network-manager-all.yaml\n\n\u539f\u672c\uff1a\n\nnetwork:\n  version: 2\n  renderer: NetworkManager\n\n\u66f4\u65b0\uff1a\n\n#network:\n#  version: 2\n#  renderer: NetworkManager\nnetwork:\n  ethernets:\n    enp0s3:\n      dhcp4: true\n    enp0s8:\n      dhcp4: false\n      addresses: [192.168.0.17/24]\n  version: 2\n</code></pre>  <p>\u56e0\u70ba \u4e59\u592a\u7db2\u8def \u7684 IP \u70ba 192.168.0.14\uff0c\u6240\u4ee5\u5728\u5206\u914d\u6642\uff0c\u53ef\u4ee5\u7db2\u5f8c\u65b0\u589e\u5373\u53ef\u3002</p>  <p>\u57f7\u884c\u66f4\u65b0\uff0c\u8f38\u5165\u6307\u4ee4\uff0c\u4e26\u76f4\u63a5\u6309\u4e0b\uff0c\u5373\u6703\u7acb\u5373\u66f4\u65b0\u3002(\u6216\u91cd\u65b0\u555f\u52d5VM)</p> <pre><code>sudo netplan try\n</code></pre>  <p>\u67e5\u8a62IP\uff0c\u5c31\u6703\u770b\u5230 192.168.0.17</p> <pre><code>hostname -I\n</code></pre>  </li> <li> <p>\u958b\u555f SSH \u670d\u52d9</p> <p>\u5148\u5207\u56de su root\uff0c\u4e26\u5b89\u88dd\u8207\u555f\u52d5 SSH</p> <pre><code>apt-get update\napt-get install openssh-server\nsudo service ssh --full-restart\n</code></pre>  <p>\u767b\u5165SSH</p> <pre><code>window cmd -&gt; ssh vboxuser@192.168.0.17\n</code></pre>   <p>\u6e2c\u8a66\u770b\u770b\u662f\u5426\u53ef\u4ee5\u9023\u7d50\u5916\u7db2 ping google.com</p>  <p>\u5982\u4f55\u4fee\u6539 ssh \u7684\u9810\u8a2d port</p> <pre><code>1. \u767b\u5165 ssh console \u5f8c\uff0c\u57f7\u884c\u4e0b\u5217\u6307\u4ee4: nano /etc/ssh/sshd_config\n2 \u5c07: \n    #Port 22\n    \u6539\u70ba:\n    Port 3333\n3 \u5132\u5b58\u9000\u51fa\u5f8c\uff0c console\u5e95\u4e0b\u5728\u57f7\u884cssh \u91cd\u958b\u6307\u4ee4:  \n    service ssh restart\n</code></pre> <ul> <li> <p>\u5982\u4f55\u8b93 root \u4e5f\u80fd\u767b\u5165 SSH</p> <p>nano /etc/ssh/sshd_config</p> <p>\u52a0\u5165 PermitRootLogin yes</p> <p>service ssh restart  </p> </li> </ul> </li> </ul>"},{"location":"microk8s/#2-node-oracle-vm-virtualbox","title":"2.\u5efa\u7bc0\u9ede node (Oracle VM VirtualBox)","text":"<ul> <li>\u6b65\u9a5f\u540c\u4e0a\uff0cIP \u6539\u70ba 192.168.0.18 \u5373\u53ef\u3002</li> </ul>"},{"location":"microk8s/#3-master-node-microk8smetallbip-master-ip","title":"3.\u5728 master \u8207 node \u4e2d\uff0c\u5b89\u88dd microk8s\u3002(\u5176\u4e2dmetallb\u7684IP\u70ba master\u7684 IP)","text":"<pre><code>    master node   sudo snap install microk8s --classic\n    master        microk8s enable metallb:192.168.0.17-192.168.0.100\n    master node   microk8s enable dashboard dns registry istio helm3 storage\n    master        microk8s status --wait-ready\n    master        microk8s dashboard-proxy\n</code></pre>  <p>metallb\uff1a\u8981\u597d\u5e7e\u5206\u9418\uff0c\u76f4\u5230\u770b\u5230 MetaLB is enabled\u3002  </p> <p>microk8s status --wait-ready\uff0c\u770b\u5230 is runnung \u4ee3\u8868\u6210\u529f\u3002 </p> <p>microk8s dashboard-proxy </p> <p>\u6253\u958b\u700f\u89bd\u5668\uff0c\u7db2\u5740\u70ba\uff1ahttps://192.168.0.17:10443\u3002\u9ede\u9078\u9032\u968e\uff0c\u7e7c\u7e8c\u524d\u5f80\u3002\u8f38\u5165 Token\uff0c\u9ede\u9078 Sign in\u3002</p> <p>  </p> <ul> <li>\u5982\u679c \u4e0d\u559c\u6b61\u5148\u5207\u63db su root\uff0c\u6216\u662f\u51fa\u73fe vboxuser is not in the sudoers file. This incident will be reported.<pre><code>Step1. su root\n\nStep2. nano /etc/sudoers\n\nStep3. \u52a0\u5165 vboxuser    ALL=(ALL:ALL) ALL\n</code></pre> </li> </ul>"},{"location":"microk8s/#4","title":"4. \u5efa\u7acb\u53e2\u96c6\u95dc\u4fc2","text":"<p>\u5728 master \u4e2d\u8f38\u5165</p> <pre><code>    microk8s add-node\n</code></pre>  <pre><code>    # \u5982\u679c\u6709\u932f\uff0c\u4ee3\u8868\u6c92\u6709\u6b0a\u9650\uff0c\u8981\u5148\u57f7\u884c\u4ee5\u4e0b\u5169\u884c\n    su root\n    sudo usermod -a -G microk8s vboxuser\n    sudo chown -R vboxuser ~/.kube\n\n    microk8s add-node\n</code></pre>  <pre><code>    \u9078\u64c7 \u975c\u614b\u7684IP\n    microk8s join 192.168.0.17:25000/d3594715ba0d9c6b63b359c7166421de/bc19f9886c4b\n</code></pre> <p>\u5728 node \u4e2d\u8f38\u5165</p> <pre><code>    microk8s join 192.168.0.17:25000/d3594715ba0d9c6b63b359c7166421de/bc19f9886c4b\n</code></pre>  <pre><code>    \u932f\u8aa4\uff1a\n    Contacting cluster at 192.168.0.101\n    Connection failed. The hostname (node1) of the joining node does not resolve to the IP \"192.168.0.18\". Refusing join (400).\n\n    \u89e3\u6c7a\uff1a\n    192.168.0.18 \u70ba node1 \u7684\u56fa\u5b9a IP\uff0c\u8acb\u5728 master\u7684 /etc/hosts \u6a94\u6848\u4e2d\u52a0\u5165 192.168.0.18 node.mshome.net \u4e00\u884c\u3002\n\n    nano /etc/hosts\n\n    add\n    192.168.0.18 node.mshome.net\n    192.168.0.18 node\n</code></pre>  <pre><code>    \u932f\u8aa4\uff1a\n    Contacting cluster at 192.168.0.17\n    Connection failed. Invalid token (500).\n\n    \u89e3\u6c7a\uff1a \u53bb master \u91cd\u65b0\u7522\u751f\u65b0\u7684 token\u3002(microk8s add-node)\n</code></pre> <p>\u770b\u5230 Waiting for this node to finish joining the cluster. .. .. .. \u5c31\u4ee3\u8868\u6210\u529f\u4e86 </p>"},{"location":"microk8s/#5","title":"5. \u6e2c\u8a66\u8a2d\u5b9a\u6a94","text":"<ul> <li>Deployment\uff1a</li> </ul> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: docker-k8s-demo-deployment\n  labels:\n    app: docker-k8s-demo\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: docker-k8s-demo\n  template:\n    metadata:\n      labels:\n        app: docker-k8s-demo\n    spec:\n      containers:\n        - name: docker-k8s-demo\n          /assets/image: aweit/docker-demo\n          env:\n            - name: \"PORT\"\n              value: \"8090\"\n</code></pre>  <p>\u5982\u679c\u51fa\u73feError: Err/assets/imagePull\uff0c\u4ee3\u8868 Docker Hub \u4e2d\u7684\u9019\u500b /assets/image \u662f Private \u7684\u3002</p>   <p>\u89e3\u6c7a\u8fa6\u6cd5\uff1a</p> <p>\u89e3\u6c7a\u65b9\u6848\u4e00\uff1a\u8abf\u6574 containerd \u7684 Docker Hub Registry \u8a2d\u5b9a</p>  <p>[plugins.\"io.containerd.grpc.v1.cri\".registry.configs.\"registry-1.docker.io\".auth]   username = \"aweit\"   password = \"dckr_pat_x2YLeiKrJ94HdPOosyteGOXLk04\"</p> <p>\u6b63\u78ba\u756b\u9762\u5982\u4e0b\uff1a</p>  <ul> <li>Service\uff1a</li> </ul> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: docker-k8s-demo-service\nspec:\n  type: LoadBalancer\n  selector:\n    app: docker-k8s-demo\n  ports:\n  - protocol: TCP\n    port: 60000\n    targetPort: 8090\n</code></pre> <ul> <li>\u6e2c\u8a66\u9023\u7d50</li> </ul> <p>\u9ede\u9078 Service -&gt; Services </p>  <p>\u6253\u958b\u700f\u89bd\u5668\uff0c\u8f38\u5165 http://192.168.0.17:60000/ </p>  <p>\u770b Log </p>"},{"location":"nfs/","title":"NFS","text":""},{"location":"nfs/#use-nfs-for-persistent-volumes","title":"Use NFS for Persistent Volumes","text":"<ul> <li>https://microk8s.io/docs/nfs</li> </ul>"},{"location":"nfs/#1-setup-an-nfs-server","title":"1. Setup an NFS server","text":"<p>\u5047\u8a2d\u5728 192.168.0.16 \u67b6\u8a2d NFS server</p> <pre><code>sudo apt update\nsudo apt-get install nfs-kernel-server\n</code></pre> <p>Create a directory to be used for NFS:</p> <pre><code>sudo mkdir -p /srv/nfs\nsudo chown nobody:nogroup /srv/nfs\nsudo chmod 0777 /srv/nfs\n</code></pre> <p>Edit the /etc/exports file. Make sure that the IP addresses of all your MicroK8s nodes are able to mount this share. For example, to allow all IP addresses in the 10.0.0.0/24 subnet</p> <pre><code>sudo mv /etc/exports /etc/exports.bak\necho '/srv/nfs 192.168.0.0/24(rw,sync,no_subtree_check,no_root_squash)' | sudo tee /etc/exports\n</code></pre> <p>\u91cd\u555f</p> <pre><code>sudo systemctl restart nfs-kernel-server.service\n</code></pre> <p>\u78ba\u8a8d NFS Server\u662f\u5426\u6b63\u5e38\u555f\u52d5</p> <pre><code>sudo systemctl status nfs-kernel-server.service\n</code></pre>  <p>\u6216\u662f\u53ef\u4ee5\u4f7f\u7528 showmount \u547d\u4ee4\u4f86\u6aa2\u67e5 NFS Server \u958b\u51fa\u4f86\u7684\u76ee\u9304 <code>showmount -e 192.168.0.16</code></p>"},{"location":"nfs/#1-1-nfs-client","title":"1-1. NFS Client (\u53ef\u9078\uff0c\u4f5c\u70ba\u6e2c\u8a66\u7528)","text":"<p>\u4f7f\u7528 apt \u547d\u4ee4\u9032\u884c\u5b89\u88dd NFS Client</p> <pre><code>sudo apt update\nsudo apt install nfs-common\n</code></pre> <p>\u4f7f\u7528 showmount \u547d\u4ee4\u6aa2\u67e5 NFS Server \u53ef\u9023\u7dda\u7684\u76ee\u9304</p> <pre><code>showmount -e 192.168.0.16\n---output---\nExport list for 192.168.0.16:\n/srv/nfs 192.168.0.0/24\n</code></pre> <p>\u5982\u679c\u51fa\u73fe\u5835\u585e\u73fe\u8c61(Stuck)\uff0c\u53ef\u80fd\u539f\u56e0\u70ba NFS Server \u7684\u9632\u706b\u7246\u5c0e\u81f4\uff0c\u53ea\u8981\u95dc\u6389\u9632\u706b\u7246\u5373\u53ef(<code>sudo ufw disable</code>)\u3002</p> <p>\u5efa\u7acb\u639b\u8f09\u7528\u76ee\u9304\uff0c\u4e26\u5c07 NFS Server \u7684\u76ee\u9304\u639b\u8f09\u81f3\u672c\u6a5f\u76ee\u9304</p> <pre><code>sudo mkdir /srv/nfs\nsudo mount 192.168.0.16:/srv/nfs /srv/nfs\n</code></pre> <p>\u5982\u679c\u51fa\u73fe <code>mount.nfs: access denied by server while mounting 192.168.0.16:/srv/nfs</code> \u554f\u984c\uff0c\u53ef\u4ee5\u5148\u900f\u904e <code>sudo mount -t nfs -vvvv 192.168.0.16:/srv/nfs /srv/nfs</code>  \u67e5\u770b\u8a73\u7d30\u8cc7\u8a0a\u3002 </p> <p>\u6e2c\u8a66\uff1a</p> <p>\u767b\u5165 ssh vboxuser@192.168.17  # NFS Client \u767b\u5165 ssh vboxuser@192.168.16  # NFS Server \u56e0\u70ba NFS Client \u5c07\u672c\u6a5f\u7684 /srv/nfs \u8cc7\u6599\u593e\uff0c\u7d81\u5b9a\u5728  NFS Server \u7684 /srv/nfs \u8cc7\u6599\u593e \u8cc7\u6599\u593e\u4e2d\uff0c\u6240\u4ee5\u5169\u8005\u8cc7\u6599\u593e\u6703\u540c\u6b65\u3002</p> <p>\u5148\u5728 NFS Client \u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4</p> <pre><code>touch /srv/nfs/123.txt\nls\n</code></pre> <p>\u518d\u53bb NFS Server \u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c31\u6703\u770b\u5230 123.txt \u6a94\u6848\u4e86</p> <pre><code>cd /srv/nfs\nls\n</code></pre>"},{"location":"nfs/#2install-the-csi-driver-for-nfs","title":"2.Install the CSI driver for NFS","text":""},{"location":"nfs/#3create-a-storageclass-for-nfs-create-a-new-pvc","title":"3.Create a StorageClass for NFS &amp; Create a new PVC","text":"<pre><code># sc-nfs.yaml\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: nfs-csi\nprovisioner: nfs.csi.k8s.io\nparameters:\n  server: 192.168.0.16\n  share: /srv/nfs\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\nmountOptions:\n  - hard\n  - nfsvers=4.1\n\nmicrok8s kubectl apply -f - &lt; sc-nfs.yaml\n</code></pre> <pre><code># pvc-nfs.yaml\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  storageClassName: nfs-csi\n  accessModes: [ReadWriteOnce]\n  resources:\n    requests:\n      storage: 5Gi\n\nmicrok8s kubectl apply -f - &lt; pvc-nfs.yaml\n</code></pre> <p>microk8s kubectl describe pvc my-pvc</p>"},{"location":"nfs/#4-pod","title":"4. \u6e2c\u8a66 Pod","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: hwchiu\n  labels:\n    app: hwchiu\nspec:\n  containers:\n  - name: busybox\n    image: hwchiu/netutils:latest\n    volumeMounts:\n      - name: nfs-volume\n        mountPath: /nfs\n  volumes:\n    - name: nfs-volume\n      persistentVolumeClaim:\n        claimName: my-pvc\n</code></pre> <p>\u9032\u5165Pod</p> <pre><code>kubectl exec -it hwchiu -n nfs-demo -- /bin/bash\nls  # \u770b\u770b\u6709\u6c92\u6709\u525b\u525b\u5efa\u7acb\u7684 456.txt\n</code></pre>  <p>\u4ee5\u4e0b\u662f\u9019\u500b Pod \u7684 Volume \u5b8c\u6574\u8cc7\u8a0a</p>  <p>pvc \u8cc7\u8a0a </p> <p>pv \u8cc7\u8a0a </p>"},{"location":"nfs/#5-mysql-nfs","title":"5. MySQL + NFS","text":"<pre><code>kubectl create namespace kube-demo\nkubectl create secret generic mysql-pass --from-literal=password=password321 -n kube-demo\n</code></pre> <p>PV\u3001PVC</p> <pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: mysql-pv\n  labels:\n    pv: mysql-pv\nspec:\n  storageClassName: nfs-csi\n  capacity:\n    storage: 15Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Recycle\n  nfs:\n    path: /srv/nfs/mysql-pv\n    server: 192.168.0.16\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mysql-pvc\nspec:\n  storageClassName: \"nfs-csi\"\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n  selector:\n    matchLabels: \n      pv: mysql-pv\n</code></pre>  <p>Deployment</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: mysql\nspec:\n  selector:\n    app: mysql\n  ports:\n    - protocol: TCP\n      port: 3306\n      targetPort: 3306\n      nodePort: 31306\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mysql\n  labels:\n    app: mysql-test\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mysql\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      nodeName: node\n      containers:\n      - name: mysql-test\n        image: mysql:5.7\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            valueFrom:\n              secretKeyRef:\n               name: mysql-pass\n               key: password\n        ports:\n        - containerPort: 3306\n        volumeMounts:\n        - mountPath: \"/var/lib/mysql\"\n          name: mysql-data\n      volumes:\n      - name: mysql-data\n        persistentVolumeClaim:\n          claimName: mysql-pvc\n</code></pre>  <p>P.S\uff1a \u5982\u679c\u4e00\u76f4 Pending \uff0c\u751a\u81f3\u51fa\u73fe CrashLoopBackOff \u7684\u8a0a\u606f\uff0c\u53ef\u4ee5\u57f7\u884c <code>kubectl logs mysql-848b44f4c5-kgdzc -n kube-demo</code> \u770b\u770b\u54ea\u88e1\u51fa\u932f\u3002</p>  <p>\u53ef\u53c3\u8003 https://blog.csdn.net/m0_46090675/article/details/122276216 \u89e3\u6c7a\u6b64\u554f\u984c\u3002</p> <p>\u6700\u5f8c\u5c31\u6703\u6210\u529f\u4e86~~~</p> <p>\u9996\u5148\u6aa2\u67e5 NFS Server \u7684\u6a94\u6848\u4e2d\u662f\u5426\u6709 mysql \u7684\u76f8\u95dc\u8cc7\u6599</p>  <p>\u9032\u5165 Pod \u7684\u547d\u4ee4\u5217\u4e2d\uff0c\u67e5\u770b Mysql \u76f8\u95dc\u8cc7\u8a0a</p> <pre><code>kubectl exec -it mysql-5b46fb64b4-t2m4c -n kube-demo -- /bin/bash\n</code></pre>"},{"location":"practicek8s/","title":"Kubernetes","text":""},{"location":"practicek8s/#kubernetes","title":"Kubernetes \u88dc\u5145","text":""},{"location":"practicek8s/#_1","title":"\u932f\u8aa4","text":"<ul> <li>Failed to allocate IP: No available IPs</li> </ul> <p>\u56e0\u70ba\u7576\u521d\u5728\u958b\u555f microk8s enable metallb:192.168.0.17-192.168.0.17   \u592a\u5c11\u4e86\u3002\u50cf\u662f\u4f8b\u5b50\u70ba\u53ea\u6709\u958b\u4e00\u500b\u3002   \u6b64\u6642\uff0c\u53ef\u4ee5\u5148\u95dc\u6389 metallb\uff0c\u518d\u91cd\u65b0\u958b\u555f\uff0c\u4e26\u4e14\u5c07IP\u6578\u5b57\u8b8a\u591a\u3002</p> <pre><code>    microk8s disable metallb\n\n    microk8s enable metallb:192.168.0.17-192.168.0.100\n</code></pre> <p>\u53c3\u8003\u7db2\u5740\uff1ahttps://discuss.kubernetes.io/t/addon-metallb/11790</p>"},{"location":"practicek8s/#_2","title":"\u77e5\u8b58","text":"<ul> <li>\u900f\u904e MicroK8s \u8a8d\u8b58 Kubernetes \u7684 Service Account (\u670d\u52d9\u5e33\u6236)</li> </ul> <p>\u53c3\u8003\u7db2\u5740\uff1ahttps://blog.miniasp.com/post/2022/08/24/Understanding-Service-Account-in-Kubernetes-through-MicroK8s</p> <ul> <li> <p>\u5efa\u7acb\u5225\u540d\uff1a\u8b93 microk8s.kubectl = kubectl</p> <pre><code>sudo snap alias microk8s.kubectl kubectl\n</code></pre>  </li> <li> <p>\u5982\u4f55\u53d6\u5f97 Pod \u7684\u8cc7\u8a0a\uff0c\u4e26\u4ee5 yaml \u5448\u73fe\u3002</p> <pre><code>kubectl get pod microbot -n dev -o yaml\n</code></pre>  </li> <li> <p>\u9032\u5165Pod\u7684console</p> <pre><code>kubectl exec microbot -it -n dev -- sh\n</code></pre> </li> <li> <p>RBAC</p> <p>k8s \u5728 1.8 \u7248\u4e4b\u5f8c\uff0c\u5f15\u7528\u4e86 Role-Base Access Control (RBAC\uff0c\u57fa\u65bc\u89d2\u8272\u7684\u8a2a\u554f\u63a7\u5236\uff0c\u597d\u50cf\u6709\u9ede\u7e5e\u820c) \u505a\u70ba\u6388\u6b0a (Authorization) \u7684\u57fa\u790e\uff0c\u4e5f\u5c31\u662f\u4e00\u7a2e\u7ba1\u5236\u8a2a\u554f k8s API \u7684\u6a5f\u5236\u3002\u7ba1\u7406\u8005\u53ef\u4ee5\u900f\u904e rbac.authorization.k8s.io \u9019\u500b API \u7fa4\u7d44\u4f86\u9032\u884c\u52d5\u614b\u7684\u7ba1\u7406\u914d\u7f6e\u3002\u5f15\u7528 https://ithelp.ithome.com.tw/articles/10195944</p> <p>kubectl create namespace dev   kubectl label namespace dev name=dev   kubectl run microbot --/assets/image=dontrebootme/microbot:v1 -n dev</p> <p>kubectl create serviceaccount monitor -n dev   kubectl create clusterrole aweit --verb='' --resource=''   kubectl create clusterrolebinding aweit --clusterrole=aweit --serviceaccount='dev:monitor' </p> <p>microk8s kubectl create token monitor</p> <p>\u7bc4\u4f8bhttps://blog.miniasp.com/post/2022/08/24/Understanding-Service-Account-in-Kubernetes-through-MicroK8s</p> </li> <li> <p>Dashboard \u8207 Kubeconfig</p> </li> <li> <p>\u958b\u555f Dashboard</p> <pre><code>microk8s enable dashboard\n</code></pre> </li> <li> <p>\u767b\u5165\u9801\u9762</p>  </li> <li> <p>\u5982\u4f55\u7522\u751f .kueconfig</p> <pre><code>mircok8s config\n</code></pre>  <pre><code>\u5728\u672c\u6a5f\u5efa\u7acb .kubeconfig \u6a94\u6848\uff0c\u5c07\u4e0a\u5716\u7684\u6587\u5b57\u8cbc\u4e0a\u53bb\u3002\n</code></pre> </li> <li> <p>\u91cd\u65b0\u4e0a\u50b3 .kubeconfig \u6a94\u6848\u5373\u53ef\u3002</p> </li> <li> <p>Token</p> <pre><code>microk8s kubectl create token [service account]\nmicrok8s kubectl create token default\n</code></pre> </li> </ul>"},{"location":"practicek8s/#volume","title":"Volume","text":"<ul> <li>Type\uff1a emptyDir\u3001hostPath\u3001local\u3001nfs\u3001persistentVolumeClaim</li> </ul> <p><code>apiVersion: v1   kind: Pod   metadata:     name: test-pd   spec:     containers:     - image: registry.k8s.io/test-webserver       name: test-container       volumeMounts:       - mountPath: /test-pd         name: test-volume     volumes:     - name: test-volume       hostPath:         # \u5bbf\u4e3b\u4e0a\u76ee\u5f55\u4f4d\u7f6e         path: /data         # \u6b64\u5b57\u6bb5\u4e3a\u53ef\u9009         type: DirectoryOrCreate</code></p> <ul> <li> <p>nfs</p> </li> <li> <p>[Ubuntu NFS \u5b89\u88dd\u6559\u5b78] https://blog.devcloud.com.tw/ubuntu-nfs-install/</p> </li> <li> <p>\u4f7f\u7528\u8aaa\u660e https://www.hwchiu.com/kubernetes-storage-ii.html</p> </li> </ul> <p>NFS Server   IP\uff1a 192.168.0.17</p> <pre><code>  showmount -e 192.168.0.17\n</code></pre>  <p>\u5982\u679c\u8981\u65b0\u589e\u639b\u8f09\u76ee\u9304</p> <pre><code>  # \u5efa\u7acb\u5171\u4eab\u8cc7\u6599\u593e\n  sudo mkdir /opt/nfsshare\n\n  # \u7de8\u8f2f NFS Server \u7684 Expose \u8a2d\u5b9a\n  sudo nano /etc/exports\n  ...\n  /opt/nfsshare  192.168.0.0/24(rw,sync,no_subtree_check,no_root_squash)\n\n  # \u91cd\u555f\n  sudo systemctl restart nfs-kernel-server.service\n\n  # \u986f\u793a Mount \u8cc7\u8a0a\n  showmount -e 192.168.0.17\n</code></pre> <ul> <li>PV/PVC/Pod</li> </ul> <pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: nfs\nspec:\n  capacity:\n    storage: 1Mi\n  accessModes:\n    - ReadWriteMany\n  nfs:\n    server: 192.168.0.17\n    path: \"/opt/nfsshare\"\n\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: nfs\nspec:\n  accessModes:\n    - ReadOnlyMany\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 1Mi\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hwchiu\n  labels:\n    app: hwchiu\nspec:\n  containers:\n  - name: busybox\n    image: hwchiu/netutils:latest\n    volumeMounts:\n      - name: nfs-volume\n        mountPath: /nfs\n  volumes:\n    - name: nfs-volume\n      persistentVolumeClaim:\n        claimName: nfs\n\n</code></pre>"},{"location":"practicek8s/#tomcat-volume","title":"Tomcat &amp; Volume","text":"<pre><code># PV: \u5148\u6709 nfs server\uff0c\u4e26\u4e14\u5efa\u7acb\u597d\u5c0d\u61c9\u7684\u8cc7\u6599\u593e\uff0c\u4f8b\u5982\uff1a/opt/nfsshare/demo/webapps\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: nfs-demo-tomcat\nspec:\n  capacity:\n    storage: 1Mi\n  accessModes:\n    - ReadOnlyMany\n  nfs:\n    server: 192.168.0.17\n    path: \"/opt/nfsshare/demo/webapps\"\n\n---\n# PVC: \u5efa\u7acb PV \u8acb\u6c42\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: nfs-demo-tomcat\nspec:\n  accessModes:\n    - ReadOnlyMany\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 1Mi\n---\n# Deployment: tomcat \u93e1\u50cf\uff0c\u7d81\u5b9a nfs \u5171\u7528\u8cc7\u6599\u593e\u3002\n# \u56e0\u70ba tomcat 8 \u4ee5\u5f8c\uff0c\u6703\u591a\u4e00\u500b webapps.dir \u8cc7\u6599\u593e\uff0c\u6240\u4ee5\u8981\u57f7\u884c cp -r webapps.dist/.  webapps/ \u624d\u80fd\u5c07\u8cc7\u6599\u593e\u8207\u6a94\u6848\u5168\u90e8\u642c\u79fb\u904e\u53bb\u3002\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name:  tomcat-deployment-nautilus\n  labels:\n    name: webdep\n    app: demo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: webpod\n      app: demo\n  template:\n    metadata:\n      name: webpod\n      labels:\n        name: webpod\n        app: demo\n    spec:\n      containers:\n        - name: tomcat-container-nautilus\n          image: tomcat\n          ports:\n            - containerPort: 8080\n          volumeMounts:\n            - name: nfs-volume\n              mountPath: /usr/local/tomcat/webapps\n      volumes:\n        - name: nfs-volume\n          persistentVolumeClaim:\n            claimName: nfs-demo-tomcat\n\n---\n# Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: tomcat-service-nautilus\nspec:\n  selector:\n    name: webpod\n    app: demo\n  ports:\n    - port: 80\n      targetPort: 8080\n\n\n---\n# IngressRoute\napiVersion: traefik.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: tomcat-ingress-route\n  namespace: default\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - kind: Rule\n      match: Host(`localhost.mic.com.tw`) &amp;&amp; PathPrefix(`/tomcat`)\n      middlewares:\n        - name: test-stripprefix\n        - name: test-errors\n      services:\n        - name: tomcat-service-nautilus\n          port: 80\n  tls:\n    secretName: mic-tls\n</code></pre> <p>\u628a webapps.dist \u76ee\u9304\u4e0b\u7684\u6240\u6709\u6a94\u6848\uff0c\u8907\u88fd\u5230 webapps \u5e95\u4e0b</p> <pre><code>cp -r webapps.dist/.  webapps/\n</code></pre> <p>traefik: \u628a /tomcat \u53bb\u6389</p> <pre><code># Middleware\napiVersion: traefik.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-stripprefix\nspec:\n  stripPrefix:\n    prefixes:\n      - /tomcat\n</code></pre> <p>https://localhost.mic.com.tw/tomcat/</p>"},{"location":"practicek8s/#namespace-terminal","title":"Namespace \u72c0\u614b\u70ba Terminal \u6642\uff0c\u5982\u4f55\u522a\u6389\uff1f","text":"<pre><code>\nkubectl delete namespace  longhorn-system\n\nkubectl get ns/longhorn-system -o json &gt; longhorn-system.json\nnano longhorn-system.json -&gt; \u6e05\u9664\n\"spec\": {\n        \"finalizers\": [\n            \"kubernetes\"\n        ]\n    }\n-&gt;\n\"spec\": {\n        \"finalizers\": []\n    }   \nkubectl replace --raw \"/api/v1/namespaces/longhorn-system/finalize\" -f ./longhorn-system.json\n\n</code></pre>"},{"location":"semaphore/","title":"Thread & Semaphore","text":""},{"location":"semaphore/#thread-semaphore","title":"Thread &amp; Semaphore","text":"<p>Semaphore (\u8a0a\u865f)\uff1a \u5b9a\u7fa9\u6709\u5e7e\u500b\u57f7\u884c\u7dd2\uff0c\u5141\u8a31\u57f7\u884c\u4ee5\u4e0b\u4ee3\u78bc (permits)\u3002Acquire a permit\uff0c\u4ee3\u8868\u5148\u53d6\u5f97\u4e00\u500b permit\uff0c\u63a5\u8457\u4ee5\u4e0b\u4ee3\u78bc\u5c31\u53ef\u4ee5\u57f7\u884c\u3002\u5982\u679c\u7121\u6cd5\u53d6\u5f97 permit\uff0c\u5247\u6703 lock\u3002\u9700\u8981\u7b49\u5230\u6709\u5176\u4ed6\u7a0b\u5e8f\u57f7\u884c Release a permit\uff0c\u8a72 lock \u7684\u57f7\u884c\u7dd2\uff0c\u624d\u6703\u63a5\u8457\u7e7c\u7e8c\u9032\u884c (\u89e3lock)\u3002</p>  <p>\u53c3\u8003\uff1aHow to use a Semaphore in Java with code examples https://davidvlijmincx.com/posts/how-to-use-java-semaphore/</p>"},{"location":"semaphore/#_1","title":"\u9700\u6c42","text":"<p>\u5982\u4f55\u7528\u4e0d\u540c\u57f7\u884c\u7dd2\uff0c\u547c\u53eb\u4e0d\u540c\u65b9\u6cd5\uff0c\u8b93\u5176\u6bcf\u6b21\u8f38\u51fa\u80fd\u4f9d\u5e8f\u5217\u5370\u51fa 1\u30012\u30013\u3002</p> <pre><code>class Foo {\n\n    public Foo() {\n    }\n\n    public void first() throws InterruptedException {\n        System.out.println(\"1\");\n    }\n\n    public void second() throws InterruptedException {\n        System.out.println(\"2\");\n    }\n\n    public void third() throws InterruptedException {\n        System.out.println(\"3\");\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        Foo foo = new Foo();\n\n        Runnable printFirst = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    foo.first();\n                } catch (InterruptedException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n            }\n        };\n\n        Runnable printSecond = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    foo.second();\n                } catch (InterruptedException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n\n            }\n\n        };\n\n        Runnable printThird = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    foo.third();\n                } catch (InterruptedException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n            }\n        };\n\n        Thread one = new Thread(printFirst);\n        Thread two = new Thread(printSecond);\n        Thread three = new Thread(printThird);\n\n        three.start();\n        two.start();\n        one.start();\n    }\n}\n</code></pre>"},{"location":"semaphore/#synchronizedwaitnotifyall","title":"\u65b9\u6cd5\u4e00\u3001\u7528 synchronized\u3001wait\u3001notifyAll \u65b9\u6cd5\u5be6\u73fe","text":"<pre><code>public class Foo {\n\n    boolean a;\n\n    boolean b;\n\n    boolean c;\n\n    public synchronized void first() throws InterruptedException {\n        System.out.println(\"1\");\n        a = true;\n        notifyAll();\n    }\n\n    public synchronized void second() throws InterruptedException {\n        while(!a) {\n            wait();\n        }\n        System.out.println(\"2\");\n        b = true;\n        notifyAll();\n    }\n\n    public synchronized void third() throws InterruptedException {\n        while(!b) {\n            wait();\n        }\n        System.out.println(\"3\");\n        c = true;\n        notifyAll();\n    }\n\n    public Foo() {\n        a = false;\n        b = false;\n        c = false;\n    }\n\n    // main \u65b9\u6cd5\u7701\u7565\n}\n</code></pre>"},{"location":"semaphore/#semaphore","title":"\u65b9\u6cd5\u4e8c\u3001\u7528 Semaphore \u65b9\u6cd5\u5be6\u73fe","text":"<pre><code>public class Foo2 {\n\n    private Semaphore a = new Semaphore(1);\n\n    private Semaphore b = new Semaphore(0);\n\n    private Semaphore c = new Semaphore(0);\n\n    public Foo2() {\n    }\n\n    public void first() throws InterruptedException {\n        a.acquire(1);\n        System.out.println(\"1\");\n        b.release(1);\n    }\n\n    public void second() throws InterruptedException {\n        b.acquire(1);\n        System.out.println(\"2\");\n        c.release(1);\n    }\n\n    public void third() throws InterruptedException {\n        c.acquire(1);\n        System.out.println(\"3\");\n    }\n\n    // main \u65b9\u6cd5\u7701\u7565\n}\n</code></pre>"},{"location":"sonarqube/","title":"SonarQube","text":""},{"location":"sonarqube/#sonarqube","title":"SonarQube","text":"<ul> <li> <p>\u5b89\u88dd</p> <pre><code>docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latest\n</code></pre> </li> <li> <p>\u767b\u5165</p> <p>http://localhost:9000/</p> <p>login: admin password: admin</p>  </li> <li> <p>\u9700\u8981\u4fee\u6539\u5bc6\u78bc</p> <p>password: mitacadmin</p>  </li> <li> <p>\u5169\u500b\u53c3\u6578</p> <p>sonar_host: http://127.0.0.1:9000/ sonar_token: sqa_2d932888615a4ca75bf80e889a422a9bde711ec3</p> <p>User &gt; My Account &gt; Security </p> </li> <li> <p>\u8207 Drone \u6574\u5408</p> </li> <li> <p>\u5efa\u7acb\u5169\u500b secret</p> <pre><code>sonar_host: &lt;http://127.0.0.1:9000/&gt;\nsonar_token: sqa_2d932888615a4ca75bf80e889a422a9bde711ec3\n</code></pre> </li> <li> <p>.drone.yml \u7bc4\u4f8b (\u8981\u653e\u5728 Package \u5f8c)</p> </li> <li> <p>name: code-analysis         /assets/image: aosapps/drone-sonar-plugin         settings:         sonar_host:             from_secret: sonar_host         sonar_token:             from_secret: sonar_token         commands:</p> <ul> <li>sonar-scanner -Dsonar.projectKey=docker-demo         -Dsonar.tests=src/test/java         -Dsonar.sources=src/main/java         -Dsonar.java.libraries=./target/classes         -Dsonar.java.binaries=./target/classes         -Dsonar.host.url=http://172.31.93.122:9000/         -Dsonar.login=sqa_2d932888615a4ca75bf80e889a422a9bde711ec3</li> </ul> </li> </ul>"},{"location":"spring-batch/","title":"Spring Boot 3 + Spring Batch 5","text":""},{"location":"spring-batch/#spring-boot-3-spring-batch-5","title":"Spring Boot 3 + Spring Batch 5","text":""},{"location":"spring-batch/#overview","title":"overview","text":"<p>\u5716\u7247\u8907\u88fd\u65bc\uff1ahttps://docs.spring.io/spring-batch/docs/current/reference/html/index-single.html#business-scenarios</p> <ol> <li> <p>Batch: A batch refers to a collection of related tasks or operations that are executed together. It typically involves processing a large amount of data in a systematic and efficient manner.</p> </li> <li> <p>Job: In Spring Batch, a job represents a single batch processing unit. It consists of one or more steps that are executed sequentially. A job encapsulates the entire batch processing logic and provides a way to manage and monitor the execution of the batch.</p> </li> <li> <p>Step: A step is a single unit of work within a job. It represents a specific task or operation that needs to be performed during the batch processing. Each step typically consists of an <code>ItemReader</code>, <code>ItemProcessor</code>, and <code>ItemWriter</code> component, which collectively handle the input, processing, and output of data for that step.</p> </li> <li> <p>ItemReader: An <code>ItemReader</code> is responsible for reading data from a data source. It provides a way to retrieve data in chunks or one item at a time. The <code>ItemReader</code> interface defines the <code>read()</code> method, which returns the next item from the data source or <code>null</code> if there is no more data.</p> </li> <li> <p>ItemWriter: An <code>ItemWriter</code> is responsible for writing the processed data to a desired destination, such as a database, file, or API. It receives data in chunks or one item at a time from the <code>ItemProcessor</code> and performs the necessary actions to persist or transmit the data.</p> </li> <li> <p>ItemProcessor: An <code>ItemProcessor</code> is an optional component that performs any necessary processing on the input data before it is written by the <code>ItemWriter</code>. It allows you to transform or filter the data based on your business logic. The <code>ItemProcessor</code> interface defines the <code>process()</code> method, which takes an input item and returns a processed item or <code>null</code> to indicate that the item should be skipped.</p> </li> <li> <p>JobLauncher: The <code>JobLauncher</code> is responsible for starting the execution of a job. It receives a job instance and launches it, triggering the execution of all the steps within the job. The <code>JobLauncher</code> interface defines the <code>run()</code> method, which takes a job instance and returns a <code>JobExecution</code> object representing the status and result of the job execution.</p> </li> </ol>"},{"location":"spring-batch/#demo","title":"Demo","text":""},{"location":"spring-batch/#_1","title":"\u60c5\u5883\u8aaa\u660e","text":""},{"location":"spring-batch/#csv-mysql-db","title":"<code>\u6709\u4e00\u500b CSV \u6a94\u6848\uff0c\u5167\u5bb9\u8a18\u9304\u8457\u4eba\u54e1\u7684\u59d3\u540d\u8207\u96fb\u5b50\u4fe1\u7bb1\uff0c\u9700\u8981\u5c07\u8cc7\u6599\u540c\u6b65\u5230\u81ea\u5df1\u7684 MySQL DB\u4e2d\u3002</code>","text":""},{"location":"spring-batch/#project-structure","title":"Project Structure","text":"<p>\u5b8c\u6574\u4ee3\u78bc https://github.com/aweit-zhu/SpringBatchDemo</p>"},{"location":"spring-batch/#docker-composeyml","title":"docker-compose.yml","text":"<pre><code>services:\n  mysql:\n    image: mysql:5\n    container_name: mysql\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: password\n      MYSQL_DATABASE: cookbook\n      MYSQL_USER: admin\n      MYSQL_PASSWORD: password\n    ports:\n      - 3306:3306\n    volumes:\n      - ./data:/var/lib/mysql\n\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    container_name: phpmyadmin\n    restart: always\n    environment:\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n      MYSQL_ROOT_PASSWORD: password\n    ports:\n      - 8989:80\n    depends_on:\n      - mysql\n</code></pre>"},{"location":"spring-batch/#pomxml","title":"pom.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;3.1.3&lt;/version&gt;\n        &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-batch-demo&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n    &lt;name&gt;SpringBatchDemo&lt;/name&gt;\n    &lt;description&gt;spring-batch-demo&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;17&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-batch&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.batch&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-batch-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;!-- Other dependencies --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;\n            &lt;artifactId&gt;jackson-datatype-joda&lt;/artifactId&gt;\n            &lt;version&gt;2.9.4&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.jadira.usertype&lt;/groupId&gt;\n            &lt;artifactId&gt;usertype.core&lt;/artifactId&gt;\n            &lt;version&gt;6.0.1.GA&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"spring-batch/#datacsv-srcmainresources","title":"\u5efa\u7acb data.csv \u65bc src/main/resources \u8cc7\u6599\u593e\u4e2d","text":"<pre><code>name,email\nAweit,aweit@example.com\n</code></pre>"},{"location":"spring-batch/#applicationyaml","title":"application.yaml","text":"<pre><code>spring:\n  batch:\n    jdbc:\n      initialize-schema: always\n    job:\n      enabled: false\n  datasource:\n    url: jdbc:mysql://localhost:3306/spring-batch\n    username: admin\n    password: password\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: update\n    show-sql: false\n    properties:\n      hibernate:\n        format_sql: true\n    database-platform: org.hibernate.dialect.MySQL8Dialect\n</code></pre>"},{"location":"spring-batch/#model","title":"\u5efa\u7acb Model","text":"<pre><code>@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ToString\n@Builder\n@Entity\n@Table\npublic class Person {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private long id;\n\n    @Column\n    private String name;\n\n    @Column\n    private String email;\n\n}\n</code></pre>"},{"location":"spring-batch/#reposity","title":"\u5efa\u7acb Reposity","text":"<pre><code>public interface PersonRepository extends JpaRepository&lt;Person, Long&gt;{\n\n}\n</code></pre>"},{"location":"spring-batch/#batch-config","title":"\u5efa\u7acb Batch Config","text":"<pre><code>package com.example.config;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.batch.core.Job;\nimport org.springframework.batch.core.Step;\nimport org.springframework.batch.core.job.builder.JobBuilder;\nimport org.springframework.batch.core.launch.support.RunIdIncrementer;\nimport org.springframework.batch.core.repository.JobRepository;\nimport org.springframework.batch.core.step.builder.StepBuilder;\nimport org.springframework.batch.item.ItemProcessor;\nimport org.springframework.batch.item.ItemReader;\nimport org.springframework.batch.item.ItemWriter;\nimport org.springframework.batch.item.data.RepositoryItemWriter;\nimport org.springframework.batch.item.file.FlatFileItemReader;\nimport org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;\nimport org.springframework.batch.item.file.mapping.DefaultLineMapper;\nimport org.springframework.batch.item.file.transform.DelimitedLineTokenizer;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.transaction.PlatformTransactionManager;\n\nimport com.example.model.Person;\nimport com.example.resposity.PersonRepository;\n\n@Configuration\npublic class BatchConfig {\n\n    @Autowired\n    PersonRepository personRepository;\n\n    @Bean\n    public ItemReader&lt;Person&gt; csvReader() {\n        FlatFileItemReader&lt;Person&gt; reader = new FlatFileItemReader&lt;&gt;();\n        reader.setResource(new ClassPathResource(\"data.csv\"));\n        reader.setLinesToSkip(1);\n        reader.setLineMapper(new DefaultLineMapper&lt;Person&gt;() {\n            {\n                setLineTokenizer(new DelimitedLineTokenizer() {\n                    {\n                        setNames(\"name\", \"email\");\n                    }\n                });\n                setFieldSetMapper(new BeanWrapperFieldSetMapper&lt;Person&gt;() {\n                    {\n                        setTargetType(Person.class);\n                    }\n                });\n            }\n        });\n        return reader;\n    }\n\n    @Bean\n    public ItemProcessor&lt;Person, Person&gt; personProcessor() {\n        return person -&gt; {\n            person.setName(person.getName().toUpperCase());\n            return person;\n        };\n    }\n\n    @Bean\n    public ItemWriter&lt;Person&gt; dbWriter(DataSource dataSource) {\n        RepositoryItemWriter&lt;Person&gt; writer = new RepositoryItemWriter&lt;&gt;();\n        writer.setRepository(personRepository);\n        writer.setMethodName(\"save\");\n        return writer;\n    }\n\n    @Bean\n    public Step step(ItemReader&lt;Person&gt; reader, ItemProcessor&lt;Person, Person&gt; processor, ItemWriter&lt;Person&gt; writer,\n            JobRepository jobRepository, PlatformTransactionManager transactionManager) {\n        return new StepBuilder(\"myStep\", jobRepository)\n                .&lt;Person, Person&gt;chunk(10, transactionManager)\n                .reader(reader)\n                .processor(processor)\n                .writer(writer)\n                .build();\n    }\n\n    @Bean\n    public Job job(Step step, JobRepository jobRepository) {\n        return new JobBuilder(\"myJob\", jobRepository)\n                .incrementer(new RunIdIncrementer())\n                .flow(step)\n                .end()\n                .build();\n    }\n\n}\n</code></pre>"},{"location":"spring-batch/#controller","title":"\u5efa\u7acb Controller","text":"<pre><code>@RestController\n@RequestMapping(\"/jobs\")\npublic class JobController {\n\n    @Autowired\n    private JobLauncher jobLauncher;\n\n    @Autowired\n    private Job job;\n\n    @GetMapping(\"/import\")\n    public void importCsvToDBJob() {\n        JobParameters jobParameters = new JobParametersBuilder()\n                .addLong(\"startAt\", System.currentTimeMillis()).toJobParameters();\n        try {\n            jobLauncher.run(job, jobParameters);\n        } catch (JobExecutionAlreadyRunningException | JobRestartException | JobInstanceAlreadyCompleteException | JobParametersInvalidException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n</code></pre>"},{"location":"spring-batch/#httplocalhost8080jobsimport","title":"\u6e2c\u8a66\uff1ahttp://localhost:8080/jobs/import","text":""},{"location":"spring-batch/#spring-batch-sftp-server","title":"Spring Batch + SFTP Server","text":""},{"location":"spring-batch/#_2","title":"\u60c5\u5883","text":"<ol> <li>\u672c\u4f86\u662f\u8b80\u53d6 ClassPath Resources \u7684\u6a94\u6848\uff0c\u73fe\u5728\u8981\u6539\u70ba\u8b80\u53d6 SFTP Server \u4e0a\u7684 /upload \u8cc7\u6599\u593e\uff0c\u4f5c\u70ba\u6a94\u6848\u4f86\u6e90\u3002</li> </ol>"},{"location":"spring-batch/#docker-composeayml","title":"docker-compose.ayml","text":"<pre><code>services:\n  sftp-server:\n    image: atmoz/sftp\n    volumes:\n      - ./sftp:/home/user/upload\n    ports:\n      - \"172.22.103.117:2222:22\"\n    environment:\n      - SFTP_USERS=user:password:1001\n</code></pre>"},{"location":"spring-batch/#pomxml_1","title":"pom.xml","text":"<pre><code>  &lt;!--SFTP--&gt;\n  &lt;dependency&gt;\n    &lt;groupId&gt;com.jcraft&lt;/groupId&gt;\n    &lt;artifactId&gt;jsch&lt;/artifactId&gt;\n    &lt;version&gt;0.1.55&lt;/version&gt;\n  &lt;/dependency&gt;\n</code></pre>"},{"location":"spring-batch/#appicationyaml","title":"appication.yaml","text":"<pre><code>sftp:\n  host: 172.22.103.117\n  port: 2222\n  username: user\n  password: password\n</code></pre>"},{"location":"spring-batch/#sftputiljava","title":"SftpUtil.java","text":"<pre><code>package com.example.util;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.core.io.InputStreamResource;\nimport org.springframework.core.io.Resource;\n\nimport com.jcraft.jsch.ChannelSftp;\nimport com.jcraft.jsch.JSch;\nimport com.jcraft.jsch.JSchException;\nimport com.jcraft.jsch.Session;\nimport com.jcraft.jsch.SftpException;\n\npublic class SftpUtil {\n\n    public static Resource[] getResources(ChannelSftp channelSftp, String remoteFolderPath) throws IOException {\n        List&lt;Resource&gt; resourceList = new ArrayList&lt;&gt;();\n        try {\n            channelSftp.cd(remoteFolderPath);\n            @SuppressWarnings(\"unchecked\")\n            List&lt;ChannelSftp.LsEntry&gt; lsEntries = channelSftp.ls(\".\");\n            for (ChannelSftp.LsEntry entry : lsEntries) {\n                if (!entry.getAttrs().isDir()) {\n                    InputStream inputStream = channelSftp.get(entry.getFilename());\n                    Resource resource = new InputStreamResource(inputStream);\n                    resourceList.add(resource);\n                }\n            }\n        } catch (SftpException e) {\n            throw new IOException(\"Failed to retrieve resources from the SFTP server\", e);\n        }\n        return resourceList.toArray(new Resource[0]);\n    }\n\n}\n</code></pre>"},{"location":"spring-batch/#sftpconfigjava","title":"SftpCOnfig.java","text":"<pre><code>import org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.jcraft.jsch.ChannelSftp;\nimport com.jcraft.jsch.JSch;\nimport com.jcraft.jsch.JSchException;\nimport com.jcraft.jsch.Session;\n\n@Configuration\npublic class SftpConfig {\n\n    @Value(\"${sftp.host}\")\n    private String sftpHost;\n\n    @Value(\"${sftp.port}\")\n    private int sftpPort;\n\n    @Value(\"${sftp.username}\")\n    private String sftpUsername;\n\n    @Value(\"${sftp.password}\")\n    private String sftpPassword;\n\n\n    @Bean \n    public ChannelSftp channelSftp() throws JSchException {\n        JSch jsch = new JSch();\n        Session session = jsch.getSession(sftpUsername, sftpHost, sftpPort);\n        session.setPassword(sftpPassword);\n        session.setConfig(\"StrictHostKeyChecking\", \"no\");\n        session.connect();\n\n        ChannelSftp channel = (ChannelSftp) session.openChannel(\"sftp\");\n        channel.connect();\n        return channel;\n    }\n\n}\n</code></pre>"},{"location":"spring-batch/#batchconfig","title":"BatchConfig","text":"<pre><code>@Configuration\npublic class BatchConfig {\n\n  ...\n\n  @Autowired\n    ChannelSftp channelSftp;\n\n  @Bean\n  public ItemReader&lt;Person&gt; csvReader() throws JSchException, IOException, SftpException{\n\n      Resource[] resources = SftpUtil.getResources(channelSftp, \"/upload\");\n\n      FlatFileItemReader&lt;Person&gt; fReader = new FlatFileItemReader&lt;&gt;();\n      fReader.setLinesToSkip(1);\n      fReader.setLineMapper(new DefaultLineMapper&lt;Person&gt;() {\n        {\n          setLineTokenizer(new DelimitedLineTokenizer() {\n            {\n              setNames(\"name\", \"email\");\n            }\n          });\n          setFieldSetMapper(new BeanWrapperFieldSetMapper&lt;Person&gt;() {\n            {\n              setTargetType(Person.class);\n            }\n          });\n        }\n      });\n\n      MultiResourceItemReader&lt;Person&gt; reader = new MultiResourceItemReader&lt;&gt;();\n      reader.setResources(resources);\n      reader.setDelegate(fReader);\n\n      return reader;\n    }\n  }\n\n  ...\n</code></pre>"},{"location":"spring-batch/#test","title":"Test","text":"<p>Docker \u555f\u52d5\u7684 SFTP </p> <p>SFTP \u4e0a\u50b3\u7684\u6a94\u6848 </p> <p>DB\u8cc7\u6599 </p>"},{"location":"spring-cloud-config/","title":"Spring Cloud - Config Server","text":""},{"location":"spring-cloud-config/#spring-cloud-config-server","title":"Spring Cloud Config Server","text":"<p>\u7a0b\u5f0f\u78bc\uff1a</p> <ol> <li>Config Server\uff1ahttps://github.com/aweit-zhu/SpringCloudConfigServer</li> <li>Eureka Client\uff1ahttps://github.com/aweit-zhu/SpringCloudEurekaClient</li> </ol>"},{"location":"spring-cloud-config/#config-server","title":"Config Server","text":"<ol> <li>Centralized Configuration: The Config Server acts as a central repository for storing and managing configuration properties for multiple services or applications. Instead of having configuration properties hardcoded in each application, they can be stored in a version-controlled repository (such as Git) and accessed by the Config Server.</li> <li>Dynamic Configuration Refresh: The Config Server supports dynamic configuration updates without requiring a restart of the application. When a configuration property is modified in the repository, the Config Server notifies the subscribed applications, and they can fetch and apply the updated configuration without downtime.</li> <li>Configuration Profiles: The Config Server supports multiple configuration profiles, allowing you to define different sets of configuration properties for different environments (e.g., development, staging, production). Applications can retrieve the configuration specific to their active profile by specifying it in the request to the Config Server.</li> <li>Secure Configuration Access: The Config Server can be configured to enforce security measures to protect sensitive configuration properties. It can integrate with authentication and authorization mechanisms, such as Spring Security or OAuth, to ensure that only authorized applications can access specific configurations.</li> <li>Integration with Spring Cloud: The Config Server seamlessly integrates with other components of the Spring Cloud ecosystem. It can be used in conjunction with service discovery tools like Eureka Server and load balancing tools like Ribbon to provide dynamic and scalable configuration management for microservices.</li> <li>Externalized Configuration: By using the Config Server, you can externalize your application's configuration, separating it from the codebase. This approach promotes the Twelve-Factor App methodology, making your application more portable, configurable, and easier to manage across different environments.</li> </ol>"},{"location":"spring-cloud-config/#config-server-code","title":"Config Server code","text":"<ol> <li>pom.xml</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.7.14&lt;/version&gt;\n        &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;config-server&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n    &lt;name&gt;SpringCloudConfigServer&lt;/name&gt;\n    &lt;description&gt;Config Server using Spring Boot&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;11&lt;/java.version&gt;\n        &lt;spring-cloud.version&gt;2021.0.8&lt;/spring-cloud.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-config-server&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;${spring-cloud.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n\n</code></pre> <ol> <li>application.properties</li> </ol> <pre><code>spring.application.name=config-server\nserver.port=8889\nspring.cloud.config.server.git.uri=https://github.com/aweit-zhu/SpringCloudConfigServer.git\n</code></pre> <ol> <li>Application\uff1a@EnableConfigServer</li> </ol> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n@SpringBootApplication\n@EnableConfigServer\npublic class SpringCloudConfigServerApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringCloudConfigServerApplication.class, args);\n    }\n\n}\n\n</code></pre> <ol> <li>\u5efa\u7acb\u8a2d\u5b9a\u6a94\u6848\uff0c\u56e0\u70ba client \u7684 application name \u70ba eureka-client-demo\uff0c\u6240\u4ee5\u6a94\u540d\u70baeureka-client-demo.yaml / eureka-client-demo.properties\u3002\u8def\u5f91\uff1a\u6839\u76ee\u9304\u3002</li> </ol>"},{"location":"spring-cloud-config/#config-client-code","title":"Config Client Code","text":"<p>\u8981\u5be6\u73fe\u81ea\u52d5\u66f4\u65b0\u6ce8\u5165\u5c6c\u6027</p> <ol> <li>pom.xml\uff1a\u65b0\u589e\u9019\u5169\u500b\u4f9d\u8cf4</li> </ol> <pre><code>        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-config-client&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n</code></pre> <ol> <li>application.properties</li> </ol> <pre><code>server.port=8888\nspring.application.name=eureka-client-demo\neureka.client.service-url.defaultZone=http://localhost:8761/eureka\nmanagement.endpoints.web.exposure.include=*\nspring.config.import=configserver:http://localhost:8889\n</code></pre> <ol> <li>Application</li> </ol> <p>@EnableScheduling\uff1a\u4ee3\u8868\u6703\u6709\u6392\u7a0b\u3002 RefreshEndpoint\uff1a\u4ee3\u8868\u6703\u5f9e GitHub \u7684\u8a2d\u5b9a\u6a94\u4e2d\u53d6\u5f97\u6700\u65b0\u6578\u64da\u3002</p> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;\nimport org.springframework.cloud.endpoint.RefreshEndpoint;\nimport org.springframework.scheduling.annotation.EnableScheduling;\nimport org.springframework.scheduling.annotation.Scheduled;\n\n@SpringBootApplication\n@EnableDiscoveryClient\n@EnableScheduling\npublic class SpringCloudEurekaClientApplication {\n\n    @Autowired\n    private RefreshEndpoint refreshEndpoint;\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringCloudEurekaClientApplication.class, args);\n    }\n\n    @Scheduled(fixedDelay = 5000) // Refresh every 5 seconds\n    public void scheduleConfigRefresh() {\n        refreshEndpoint.refresh();\n    }\n\n}\n</code></pre> <ol> <li>Contorller</li> </ol> <p>@RefreshScope\uff1a\u81ea\u52d5\u66f4\u65b0\u7684\u7bc4\u570d</p> <pre><code>import org.springframework.beans.factory.annotation.Value;\nimport org.springframework.cloud.context.config.annotation.RefreshScope;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RefreshScope\n@RestController\npublic class MyController {\n\n    @Value(\"${message:Default Hello}\")\n    private String message; \n\n    @GetMapping(\"/message\")\n    public String message() {\n        return message;\n    }\n}\n</code></pre> <p>5.(\u53ef\u9078) \u5982\u679c\u8981\u66f4\u65b0Config \u5c6c\u6027(\u6a19\u6709@RefreshScope)\uff0c\u53ef\u4ee5\u7528 postmane \u89f8\u767c</p> <p>http://localhost:8888/actuator/refresh</p>"},{"location":"spring-cloud-config/#test","title":"Test","text":"<p>http://localhost:8888/message</p>"},{"location":"spring-cloud-eureka/","title":"Spring Cloud - Eureka Server","text":""},{"location":"spring-cloud-eureka/#spring-cloud-eureka-server","title":"Spring Cloud Eureka Server","text":"<p>\u7a0b\u5f0f\u78bc\uff1a</p> <ol> <li>Eureka Server\uff1ahttps://github.com/aweit-zhu/SpringCloudEurekaServer</li> <li>Eureka Client\uff1ahttps://github.com/aweit-zhu/SpringCloudEurekaClient</li> </ol>"},{"location":"spring-cloud-eureka/#eureka-server","title":"Eureka Server","text":"<ol> <li>Service Registration: Microservices that want to be discovered by other services register themselves with the Eureka Server. Each microservice instance is identified by a unique application name and instance ID.</li> <li>Service Discovery: Services that need to communicate with other services can query the Eureka Server to obtain the network location (host and port) of the desired service instance. Eureka Server maintains a registry of available service instances and provides this information to the clients.</li> <li>Heartbeat Monitoring: Eureka Server continuously checks the health of registered service instances by sending periodic heartbeat requests. If a service instance fails to respond to the heartbeat requests within a certain time period, it is considered offline and removed from the registry.</li> <li>Load Balancing: Eureka Server can also act as a load balancer by providing a list of available service instances for a particular service. Clients can use this information to implement load balancing strategies, such as round-robin or random selection, when making requests to the service.</li> <li>High Availability: Multiple instances of the Eureka Server can be deployed in a cluster to ensure high availability and fault tolerance. Each Eureka Server instance in the cluster keeps its own local registry, and they replicate and synchronize the registration information among themselves.</li> <li>Integration with Spring Cloud: Spring Cloud provides integration with Eureka Server through the <code>spring-cloud-starter-netflix-eureka-server</code> dependency. It simplifies the setup and configuration of Eureka Server in a Spring Boot application.</li> </ol>"},{"location":"spring-cloud-eureka/#eureka-server-code","title":"Eureka Server - Code","text":"<ol> <li>pom.xml</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.7.14&lt;/version&gt;\n        &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;eureka-server&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n    &lt;name&gt;SpringCloudEurekaServer&lt;/name&gt;\n    &lt;description&gt;Eureka Server using Spring Boot&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;11&lt;/java.version&gt;\n        &lt;spring-cloud.version&gt;2021.0.8&lt;/spring-cloud.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;${spring-cloud.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n\n</code></pre> <ol> <li>application.yaml</li> </ol> <pre><code>server:\n  port: 8761\n\neureka:\n  client:\n    register-with-eureka: false\n    fetch-registry: false\n</code></pre> <ol> <li>Application.java\uff1a\u65b0\u589e @EnableEurekaServer</li> </ol> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\n\n@SpringBootApplication\n@EnableEurekaServer\npublic class SpringCloudEurekaServerApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringCloudEurekaServerApplication.class, args);\n    }\n\n}\n\n</code></pre> <ol> <li>\u555f\u52d5\uff0c\u4e26\u958b\u555f\u700f\u89bd\u5668\uff0c\u8f38\u5165\uff1ahttp://localhost:8761/</li> </ol>"},{"location":"spring-cloud-eureka/#eureka-client-code","title":"Eureka Client - Code","text":"<ol> <li>pom.xml</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.7.14&lt;/version&gt;\n        &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;eureka-client&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n    &lt;name&gt;SpringCloudEurekaClient&lt;/name&gt;\n    &lt;description&gt;Eureka Client using Spring Boot&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;11&lt;/java.version&gt;\n        &lt;spring-cloud.version&gt;2021.0.8&lt;/spring-cloud.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;!-- Spring Cloud Config Client --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-config-client&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;${spring-cloud.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n\n</code></pre> <ol> <li>application.properties</li> </ol> <pre><code>server.port=8888\nspring.application.name=eureka-client-demo\neureka.client.service-url.defaultZone=http://localhost:8761/eureka\nmanagement.endpoints.web.exposure.include=*\n</code></pre> <ol> <li>Application</li> </ol> <pre><code>@SpringBootApplication\n@EnableDiscoveryClient\npublic class SpringCloudEurekaClientApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringCloudEurekaClientApplication.class, args);\n    }\n\n}\n</code></pre> <ol> <li>RestTemplateConfig.java</li> </ol> <pre><code>import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.client.RestTemplate;\n\n@Configuration\npublic class RestTemplateConfig {\n\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n}\n</code></pre> <ol> <li>EurekaClientDemoClient.java\uff1aeureka-client-demo \u70ba\u670d\u52d9\u8a3b\u518a\u7684\u540d\u5b57\u3002</li> </ol> <pre><code>import java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.cloud.client.ServiceInstance;\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class EurekaClientDemoClient {\n\n    @Autowired\n    private DiscoveryClient discoveryClient;\n\n    public String getServiceUrl() {\n\n        // Retrieve the instances of the service by application name\n        List&lt;ServiceInstance&gt; instances = discoveryClient.getInstances(\"eureka-client-demo\");\n\n        // Choose one of the instances (e.g., the first one)\n        ServiceInstance instance = instances.get(0);\n\n        // Get the URL of the service instance\n        String serviceUrl = instance.getUri().toString();\n\n        return serviceUrl;\n    }\n}\n</code></pre> <ol> <li>HelloController.java</li> </ol> <p>@GetMapping(\"/hello\")\u3001@GetMapping(\"/hello-from-eureka\") \u7686\u70ba\u8a3b\u518a\u5230 Eureka \u7684\u65b9\u5f0f\uff0c\u548c\u539f\u672c\u7684\u5beb\u6cd5\u4e00\u6a21\u4e00\u6a23\u3002</p> <p>@GetMapping(\"/hello-from-eureka\") \u662f\u70ba\u4e86\u8981\u6e2c\u8a66\u662f\u5426\u53ef\u4ee5\u6210\u529f\u547c\u53eb\u5230Eureka \u4e0a\u7684\u670d\u52d9\u3002serviceUrl\u5c31\u662f Eureka \u7684\u670d\u52d9\u3002</p> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestTemplate;\n\nimport com.example.service.EurekaClientDemoClient;\n\n@RestController\npublic class HelloController {\n\n    @Autowired\n    private RestTemplate restTemplate;\n\n    @Autowired\n    private EurekaClientDemoClient client;\n\n    @GetMapping(\"/hello\")\n    public String hello() {\n        return \"Hello from Eureka Client!\";\n    }\n\n    @GetMapping(\"/hello-from-eureka\")\n    public String hello2() {\n        String serviceUrl = client.getServiceUrl();\n        String helloUrl = serviceUrl + \"/hello\";\n        String response = restTemplate.getForObject(helloUrl, String.class);\n        return response;\n    }\n}\n</code></pre>"},{"location":"spring-cloud-eureka/#test","title":"Test","text":"<p>http://localhost:8888/hello-from-eureka</p>"},{"location":"spring-cloud-feign/","title":"Spring Cloud - OpenFeign Client","text":""},{"location":"spring-cloud-feign/#spring-cloud-with-openfiegn-client","title":"Spring Cloud with OpenFiegn Client","text":""},{"location":"spring-cloud-feign/#_1","title":"\u60c5\u5883","text":"<ol> <li> <p>Eureka Client\uff1a\u5efa\u7acbController\uff0c\u4e26\u5c07 /api/** \u7684 Controller \u900f\u904e Spring Security \u4f86\u4fdd\u8b77\uff0c\u9019\u908a\u4f7f\u7528\u7c21\u55ae\u7684 In memory authencate. \u6240\u4ee5\u8a3b\u518a\u4e0a\u53bb\u7684\u670d\u52d9\u4e5f\u9700\u8981\u900f\u904e http base \u4f86\u767b\u5165\u3002</p> </li> <li> <p>\u900f\u904e OpenFiegn \u7684 Client \u547c\u53eb\u8a3b\u518a\u5728 Eureka Server \u4e0a\u7684\u670d\u52d9\uff0c\u4e5f\u9700\u8981\u5c07\u6bcf\u4e00\u8acb\u6c42\u52a0\u4e0a authorization token\u3002\u4e5f\u9700\u8981\u5be6\u4f5c Spring security\u3002</p> </li> <li> <p>\u96d9\u65b9\u7684 Spring Security \u7684 User \u4f86\u6e90\u7686\u8981\u540c\u6e90\uff0c\u624d\u6709\u8fa6\u6cd5\u76f4\u63a5\u767b \u5165\u3002(user/password \u4f5c\u70ba\u7c21\u55ae\u7684\u5e33\u5bc6\u8a8d\u8b49)</p> </li> </ol>"},{"location":"spring-cloud-feign/#_2","title":"\u7a0b\u5f0f\u78bc\uff1a","text":"<ol> <li> <p>FeignClient\uff1ahttps://github.com/aweit-zhu/SpringCloudFeignClient</p> </li> <li> <p>Eureka Client\uff1ahttps://github.com/aweit-zhu/SpringCloudEurekaClient</p> </li> </ol>"},{"location":"spring-cloud-feign/#openfiegn","title":"OpenFiegn","text":"<p>\u5b83\u5c01\u88dd\u4e86\u547c\u53eb\u9060\u7aef\u670d\u52d9\u7684\u5957\u4ef6\uff0c\u8b93\u60a8\u53ef\u4ee5\u900f\u904e\u5b9a\u7fa9\u670d\u52d9\u63a5\u53e3\uff0c\u514d\u53bb\u4e86\u5be6\u4f5c @RestTemplete (\u4e0d\u7528\u53bb\u7406\u6703 Http Request \u548c Http Response)\u3002</p> <p> \u5716\u7247\u4f86\u6e90\uff1ahttps://www.javaguides.net/2022/10/spring-boot-microservices-communication-using-spring-cloud-open-feign.html</p>  <p>\u6211\u5011\u53ef\u4ee5\u900f\u904e\u4e0a\u8ff0\u4ee3\u78bc\uff0c\u770b\u770b ChatGPT \u5982\u4f55\u89e3\u91cb\uff1f</p> <p>Certainly! Let's go through your code step by step:</p> <pre><code>java\n@FeignClient(name = \"eureka-client-demo\")\npublic interface RemoteServiceClient {\n\n    @GetMapping(\"/api/hello\")\n    String getHelloMessage();\n\n    @PostMapping(\"/api/post\")\n    String getPostMessage();\n}\n</code></pre> <ol> <li> <p><code>@FeignClient(name = \"eureka-client-demo\")</code>: This annotation is used to indicate that this interface is a Feign client and specifies the name of the Eureka client that you want to communicate with. In this case, the Eureka client is named \"eureka-client-demo\".</p> </li> <li> <p><code>@GetMapping(\"/api/hello\")</code>: This annotation is used to map the <code>getHelloMessage()</code> method to the HTTP GET request with the endpoint path \"/api/hello\". It indicates that this method will be used to retrieve a hello message from the specified endpoint.</p> </li> <li> <p><code>String getHelloMessage()</code>: This method signature defines the contract for the Feign client. It specifies that the method will return a String, which represents the hello message retrieved from the endpoint.</p> </li> <li> <p><code>@PostMapping(\"/api/post\")</code>: This annotation is used to map the <code>getPostMessage()</code> method to the HTTP POST request with the endpoint path \"/api/post\". It indicates that this method will be used to send a post message to the specified endpoint.</p> </li> <li> <p><code>String getPostMessage()</code>: This method signature defines the contract for the Feign client. It specifies that the method will return a String, which represents the response message received from the endpoint after sending the post request.</p> </li> </ol> <p>Overall, this code defines a Feign client interface <code>RemoteServiceClient</code> that communicates with the \"eureka-client-demo\" Eureka client. It provides two methods, <code>getHelloMessage()</code> and <code>getPostMessage()</code>, which correspond to GET and POST requests, respectively, and are mapped to specific endpoint paths (\"/api/hello\" and \"/api/post\").</p>"},{"location":"spring-cloud-feign/#openfiegn-with-spring-security","title":"OpenFiegn with spring security","text":"<ol> <li>pom.xml</li> </ol> <pre><code>&lt;dependencies&gt;\n    &lt;!-- Spring Cloud OpenFeign --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- Spring Cloud Starter Netflix Eureka Client (if using service\n    discovery) --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- Spring Boot Starter Web --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- Spring Boot DevTools (optional) --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n        &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;optional&gt;true&lt;/optional&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n        &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;optional&gt;true&lt;/optional&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n        &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <ol> <li>Application\uff1a@EnableDiscoveryClient\u3001@EnableFeignClients</li> </ol> <pre><code>@SpringBootApplication\n@EnableDiscoveryClient\n@EnableFeignClients\npublic class SpringCloudFeignClientApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringCloudFeignClientApplication.class, args);\n    }\n\n}\n</code></pre> <ol> <li>Feign Service </li> </ol> <pre><code>@FeignClient(name = \"eureka-client-demo\")\npublic interface RemoteServiceClient {\n\n    @GetMapping(\"/api/hello\")\n    String getHelloMessage();\n\n    @PostMapping(\"/api/post\")\n    String getPostMessage();\n}\n</code></pre> <ol> <li>Controller</li> </ol> <pre><code>@RestController\npublic class HelloController {\n\n    @Autowired\n    RemoteServiceClient remoteServiceClient;\n\n    @GetMapping(\"/api/hello\")\n    public String getHelloMessageFromRemoteService() {\n        return remoteServiceClient.getHelloMessage();\n    }\n\n    @GetMapping(\"/api/post\")\n    public String getPostMessageFromRemoteService() {\n        return remoteServiceClient.getPostMessage();\n    }\n}\n</code></pre> <ol> <li>Security Config</li> </ol> <pre><code>@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    @Override\n    public void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n            .withUser(\"user\")\n            .password(passwordEncoder().encode(\"password\"))\n            .roles(\"USER\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n            .antMatchers(\"/api/**\").authenticated()\n            .anyRequest().permitAll()\n            .and()\n            .httpBasic()\n            .and()\n            .csrf().disable();\n    }\n}\n</code></pre> <ol> <li>Interceptor </li> </ol> <p>FeignConfiguration</p> <pre><code>@Configuration\npublic class FeignConfiguration {\n\n    @Bean\n    public FeignClientInterceptor feignClientInterceptor() {\n        return new FeignClientInterceptor();\n    }\n\n}\n</code></pre> <p>FeignClientInterceptor</p> <pre><code>public class FeignClientInterceptor implements RequestInterceptor {\n\n    @Autowired\n    private HttpServletRequest request;\n\n    @Override\n    public void apply(RequestTemplate requestTemplate) {\n        String reqAuthInput= request.getHeader(\"authorization\");\n        if (reqAuthInput!= null) {\n            requestTemplate.header(\"authorization\",reqAuthInput);\n        }\n    }\n\n}\n</code></pre> <ol> <li>application.properties</li> </ol> <pre><code>server.port=8890\nspring.application.name=eureka-client-2\neureka.client.service-url.defaultZone=http://localhost:8761/eureka\n</code></pre>"},{"location":"spring-cloud-feign/#eureka-client-with-spring-security","title":"Eureka Client with spring security","text":"<ol> <li>pom.xml</li> </ol> <pre><code>&lt;!-- Spring Security --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre> <ol> <li>Security Config</li> </ol> <pre><code>@Configuration\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    @Override\n    public void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n            .withUser(\"user\")\n            .password(passwordEncoder().encode(\"password\"))\n            .roles(\"USER\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n            .antMatchers(\"/api/**\").authenticated()\n            .anyRequest().permitAll()\n            .and()\n            .httpBasic()\n            .and()\n            .csrf().disable();\n    }\n}\n</code></pre> <ol> <li>Controller</li> </ol> <pre><code>@RestController\npublic class HelloController {\n    @GetMapping(\"/api/hello\")\n    public String hello() {\n        return \"Hello from Eureka Client!\";\n    }\n\n    @PostMapping(\"/api/post\")\n    public String post() {\n        return \"Post Method Successful\";\n    }\n}\n</code></pre>"},{"location":"spring-cloud-feign/#test","title":"Test","text":"<ol> <li> <p>Feign Client Web API (POST)\uff1ahttp://localhost:8890/api/post </p> </li> <li> <p>Feign Client Web API (GET)\uff1ahttp://localhost:8890/api/hello </p> </li> <li> <p>Eureka Server\uff1ahttp://localhost:8761/ \u53ef\u4ee5\u770b\u5230 \u5169\u500b\u670d\u52d9\u88ab\u8a3b\u518a\u3002</p> </li> </ol>"},{"location":"spring-data-jpa/","title":"Spring Data JPA","text":""},{"location":"spring-data-jpa/#jpa","title":"JPA","text":"<p>JPA(Java Persistence API) \u662f SUN \u91dd\u5c0d ORM \u6280\u8853\u63d0\u51fa\u7684\u898f\u7bc4\uff0c\u76ee\u7684\u70ba\u7c21\u5316\u6301\u4e45\u5316\u7684\u958b\u767c\u5de5\u4f5c\u4ee5\u53ca\u6574\u5408\u5404\u5bb6 ORM \u6280\u8853(Hibernate\u3001TopLink\u3001OpenJpa\u2026)\u3002</p>"},{"location":"spring-data-jpa/#spring-data-jpa","title":"Spring Data JPA","text":"<p>Spring Data JPA \u662f Spring \u6839\u64da ORM \u6846\u67b6\u548c JPA \u898f\u7bc4\u800c\u5c01\u88dd\u7684 JPA \u61c9\u7528\u6846\u67b6\uff0c\u76ee\u7684\u662f\u964d\u4f4e\u5b58\u53d6\u8cc7\u6599\u5c64\u7684\u5de5\u4f5c\u91cf\uff0c\u8b93\u958b\u767c\u4eba\u54e1\u53ea\u9700\u5beb\u51fa repository \u7684\u4ecb\u9762\uff0c\u800c Spring \u81ea\u52d5\u5e6b\u4f60\u5be6\u4f5c\u5176\u529f\u80fd\u3002</p>  <ol> <li>\u4f9d\u8cf4</li> </ol> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n&lt;!--\u63a8\u85a6\u7528 lombok--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n    &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n    &lt;optional&gt;true&lt;/optional&gt;\n&lt;/dependency&gt;\n</code></pre> <ol> <li>\u914d\u7f6e Datasource (\u4ee5\u55ae\u500b\u8cc7\u6599\u5eab\u70ba\u4f8b)</li> </ol> <pre><code>spring:\n  datasource:\n    url: jdbc:mysql://172.31.93.122:3306/db\n    username: user\n    password: password\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: update\n    show-sql: false\n    properties:\n      hibernate:\n        format_sql: true\n    database-platform: org.hibernate.dialect.MySQL8Dialect\n</code></pre> <ol> <li>\u5be6\u4f5c User \u8207 Todo\uff0c\u5169\u8005\u70ba\u4e00<code>(User)</code>\u5c0d\u591a<code>(Todo)</code>\u7684\u95dc\u4fc2\u3002</li> </ol> <pre><code>@Data\n@Builder\n@Entity\n@Table\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    Integer id;\n\n    @Column\n    public String name;\n\n    @Column(insertable = false, columnDefinition = \"int default 1\")\n    Integer gender = 1;\n\n    @Column\n    public String password;\n\n    @JsonManagedReference\n    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"user\")\n    @EqualsAndHashCode.Exclude\n    private Set&lt;Todo&gt; todos;\n}\n</code></pre> <p>** \u8a3b\u89e3\u8aaa\u660e</p>  <p>@Data Equivalent to @Getter @Setter @RequiredArgsConstructor @ToString @EqualsAndHashCode. &lt;&gt;</p>  <p>\u53c3\u8003\u8cc7\u6599:https://javabydeveloper.com/lombok-data-annotation/</p>  <p>@EqualsAndHashCode: \u6a19\u8a3b\u5728\u985e\u5225\u4e0a\uff0cLombok \u6703\u81ea\u52d5\u5be6\u4f5c equals(Object other) \u8207 hashCode()\u3002\u5be6\u4f5c\u8005\u5169\u8005\u7684\u65b9\u6cd5\u662f\u70ba\u4e86\u6bd4\u5c0d\u5169\u7269\u4ef6\u662f\u5426\u76f8\u7b49\u6642\uff0c\u4e14\u6bd4\u5c0d\u6642\u6bd4\u8f03\u6709\u6548\u7387\u3002</p> <p>\u8b80\u8005\u53ef\u60f3\u6210\u81ea\u5df1\u5728\u901b\u66f8\u5e97\uff0c\u4e26\u900f\u904e\u66f8\u540d\u4f86\u627e\u66f8\u3002\u4e00\u822c\u4f86\u8aaa\uff0c\u66f8\u6ac3\u4e0a\u6703\u6a19\u793a\u90a3\u4e00\u5340\u7684\u66f8\u7c4d\u5206\u985e\u3002\u90a3\u9ebc\u900f\u904e\u66f8\u540d\u4f86\u6c7a\u5b9a\u8a72\u524d\u5f80\u54ea\u4e00\u5340\u5c0b\u627e\uff0c\u76f8\u7576\u65bc\u8a08\u7b97 hash code\u3001\u627e\u51fa bucket \u7684\u904e\u7a0b\u3002\u63a5\u8457\uff0c\u56e0\u70ba\u4e00\u500b\u5340\u57df\u4ecd\u6709\u8a31\u591a\u66f8\u7c4d\uff0c\u6240\u4ee5\u6211\u5011\u5f97\u4e00\u4e00\u6bd4\u5c0d\u5b83\u5011\u7684\u66f8\u540d\u3002\u5c31\u5982\u540c\u5728 bucket \u4e2d\uff0c\u547c\u53eb equals \u65b9\u6cd5\u6bd4\u5c0d key \u7684\u904e\u7a0b\u3002\u53c3\u8003\u81ea https://chikuwa-tech-study.blogspot.com/2022/01/java-equals-hashcode-hashmap.html</p> <p>@GeneratedValue(strategy = GenerationType.IDENTITY) \u4e3b\u9375\u7531\u8cc7\u6599\u5eab\u63a7\u5236\uff0c\u81ea\u52d5\u589e\u9577\u3002</p> <p>@Column \u5f9e\u5b9a\u7fa9\u53ef\u4ee5\u770b\u51fa\uff0c@Column\u8a3b\u89e3\u4e00\u5171\u670910\u500b\u5c6c\u6027\uff0c\u901910\u500b\u5c6c\u6027\u5747\u70ba\u53ef\u9078\u5c6c\u6027\uff0c\u5404\u5c6c\u6027\u542b\u7fa9\u5206\u5225\u5982\u4e0b\uff1a 1\u3001name  name\u5c6c\u6027\u5b9a\u7fa9\u4e86\u88ab\u6a19\u8a3b\u6b04\u4f4d\u5728\u8cc7\u6599\u5eab\u8868\u4e2d\u6240\u5c0d\u61c9\u6b04\u4f4d\u7684\u540d\u7a31\uff1b 2\u3001unique  unique\u5c6c\u6027\u8868\u793a\u8a72\u6b04\u4f4d\u662f\u5426\u70ba\u552f\u4e00\u6a19\u8b58\uff0c\u9810\u8a2d\u70bafalse\u3002\u5982\u679c\u8868\u4e2d\u6709\u4e00\u500b\u6b04\u4f4d\u9700\u8981\u552f\u4e00\u6a19\u8b58\uff0c\u5247\u65e2\u53ef\u4ee5\u4f7f\u7528\u8a72\u6a19\u8a18\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528@Table\u6a19\u8a18\u4e2d\u7684@UniqueConstraint\u3002 3\u3001nullable  nullable\u5c6c\u6027\u8868\u793a\u8a72\u6b04\u4f4d\u662f\u5426\u53ef\u4ee5\u70banull\u503c\uff0c\u9810\u8a2d\u70batrue\u3002 4\u3001insertable  insertable\u5c6c\u6027\u8868\u793a\u5728\u4f7f\u7528\u201cINSERT\u201d\u6307\u4ee4\u78bc\u63d2\u5165\u8cc7\u6599\u6642\uff0c\u662f\u5426\u9700\u8981\u63d2\u5165\u8a72\u6b04\u4f4d\u7684\u503c\u3002 5\u3001updatable  updatable\u5c6c\u6027\u8868\u793a\u5728\u4f7f\u7528\u201cUPDATE\u201d\u6307\u4ee4\u78bc\u63d2\u5165\u8cc7\u6599\u6642\uff0c\u662f\u5426\u9700\u8981\u66f4\u65b0\u8a72\u6b04\u4f4d\u7684\u503c\u3002insertable\u548cupdatable\u5c6c\u6027\u4e00\u822c\u591a\u7528\u65bc\u53ea\u8b80\u7684\u5c6c\u6027\uff0c\u4f8b\u5982\u4e3b\u9375\u548c\u5916\u4f86\u9375\u7b49\u3002\u9019\u4e9b\u6b04\u4f4d\u7684\u503c\u901a\u5e38\u662f\u81ea\u52d5\u751f\u6210\u7684\u3002 6\u3001columnDefinition  columnDefinition\u5c6c\u6027\u8868\u793a\u5efa\u7acb\u8868\u6642\uff0c\u8a72\u6b04\u4f4d\u5efa\u7acb\u7684SQL\u8a9e\u53e5\uff0c\u4e00\u822c\u7528\u65bc\u901a\u904eEntity\u751f\u6210\u8868\u5b9a\u7fa9\u6642\u4f7f\u7528\u3002\uff08\u4e5f\u5c31\u662f\u8aaa\uff0c\u5982\u679cDB\u4e2d\u8868\u5df2\u7d93\u5efa\u597d\uff0c\u8a72\u5c6c\u6027\u6c92\u6709\u5fc5\u8981\u4f7f\u7528\u3002\uff09 7\u3001table  table\u5c6c\u6027\u5b9a\u7fa9\u4e86\u5305\u542b\u7576\u524d\u6b04\u4f4d\u7684\u8868\u540d\u3002 8\u3001length  length\u5c6c\u6027\u8868\u793a\u6b04\u4f4d\u7684\u9577\u5ea6\uff0c\u7576\u6b04\u4f4d\u7684\u578b\u5225\u70bavarchar\u6642\uff0c\u8a72\u5c6c\u6027\u624d\u6709\u6548\uff0c\u9810\u8a2d\u70ba255\u500b\u5b57\u5143\u3002 9\u3001precision\u548c10\u3001scale precision\u5c6c\u6027\u548cscale\u5c6c\u6027\u8868\u793a\u7cbe\u5ea6\uff0c\u7576\u6b04\u4f4d\u578b\u5225\u70badouble\u6642\uff0cprecision\u8868\u793a\u6578\u503c\u7684\u7e3d\u9577\u5ea6\uff0cscale\u8868\u793a\u5c0f\u6578\u9ede\u6240\u4f54\u7684\u4f4d\u6578\u3002 https://www.796t.com/content/1547656050.html</p> <p>@CreatedDate \u8cc7\u6599\u65b0\u589e\u6642\u6703\u81ea\u52d5\u5b58\u5165\u5275\u5efa\u6642\u9593 @CreatedBy \u5275\u5efa\u8005 @LastModifiedDate \u6700\u5f8c\u4fee\u6539\u6642\u9593 @LastModifiedBy \u6700\u5f8c\u4fee\u6539\u8005 https://hackmd.io/@winnienotes/ry-62tqZ9</p>"},{"location":"spring-keycloak/","title":"Spring Boot 3 and Keycloak","text":""},{"location":"spring-keycloak/#securing-spring-boot-310-applications-with-spring-security-and-keycloak-21","title":"\u5be6\u4f5c Securing Spring Boot 3.1.0 Applications with Spring Security and Keycloak 21","text":"<p>\u53c3\u8003\u8cc7\u6599\uff1ahttps://medium.com/@rickors560/securing-spring-boot-3-1-0-applications-with-spring-security-and-keycloak-21-e694c6f5617d</p> <p>\u53c3\u8003\u8cc7\u6599\uff1ahttps://hennge.com/tw/blog/what-is-openid-connect.html</p>  <p>\u74b0\u5883\u6e96\u5099\uff1a 1. Spring Boot / Spring Security 3.1.2 2. JDK 17 3. Spring Boot Docker Compose 4. Docker (\u9032\u800c\u5b89\u88dd keycloak 22\u3001MySQL)</p>"},{"location":"spring-keycloak/#pomxml","title":"pom.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;3.1.2&lt;/version&gt;\n        &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;HelloSpringBoo2&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;HelloSpringBoo2&lt;/name&gt;\n    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;17&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-oauth2-resource-server&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-oauth2-jose&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-docker-compose&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"spring-keycloak/#composeyaml","title":"compose.yaml","text":"<pre><code>volumes:\n  mysql_data:\n      driver: local\n\nservices:\n  mysql:\n      image: mysql\n      volumes:\n        - mysql_data:/var/lib/mysql\n      environment:\n        MYSQL_ROOT_PASSWORD: root\n        MYSQL_DATABASE: keycloak\n        MYSQL_USER: keycloak\n        MYSQL_PASSWORD: password\n      ports:\n        - 3306:3306\n  keycloak:\n    image: quay.io/keycloak/keycloak:22.0.1\n    container_name: keycloak\n    environment:\n      - KEYCLOAK_ADMIN=admin\n      - KEYCLOAK_ADMIN_PASSWORD=password\n      - KC_DB=mysql\n      - KC_DB_URL_HOST=mysql\n      - KC_DB_URL_DATABASE=keycloak\n      - KC_DB_USERNAME=keycloak\n      - KC_DB_PASSWORD=password\n      - KC_HEALTH_ENABLED=true\n    ports:\n      - \"9090:8080\"\n    command: start-dev\n    depends_on:\n      - mysql\n#    healthcheck:\n#      test: \"curl -f http://localhost:9090/health/ready || exit 1\"\n  adminer:\n    image: adminer\n    restart: always\n    ports:\n      - 8081:8080\n</code></pre>"},{"location":"spring-keycloak/#spring-security-config","title":"Spring Security Config","text":"<pre><code>@Configuration\n@EnableWebSecurity\n@EnableMethodSecurity\npublic class WebSecurityConfig {\n\n    @Bean\n    public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {\n        httpSecurity.authorizeHttpRequests(registry -&gt; registry\n                // .requestMatchers(\"/secured/**\").hasRole(\"SYS_ADMIN\")\n                // .requestMatchers(\"/secured/**\").permitAll()\n                .anyRequest().authenticated())\n                .oauth2ResourceServer(oauth2Configurer -&gt; oauth2Configurer\n                        .jwt(jwtConfigurer -&gt; jwtConfigurer.jwtAuthenticationConverter(jwt -&gt; {\n                            Map&lt;String, Collection&lt;String&gt;&gt; realmAccess = jwt.getClaim(\"realm_access\");\n                            Collection&lt;String&gt; roles = realmAccess.get(\"roles\");\n                            var grantedAuthorities = roles.stream()\n                                    .map(role -&gt; new SimpleGrantedAuthority(\"ROLE_\" + role)).toList();\n                            return new JwtAuthenticationToken(jwt, grantedAuthorities);\n                        })));\n\n        return httpSecurity.build();\n    }\n}\n</code></pre>"},{"location":"spring-keycloak/#controller","title":"Controller","text":"<p>\u53ef\u4ee5\u5728 Controller \u5c64\u4e2d\u52a0\u5165 @PreAuthorize\uff0c\u4ee3\u8868\u9700\u8981\u64c1\u6709 SYS_ADMIN \u89d2\u8272\u7684\u7528\u6236\uff0c\u624d\u80fd\u5920\u5b58\u53d6\u9019\u4e00\u500bController \u7684\u8cc7\u6e90\u3002</p> <p>@PreAuthorize \u4e5f\u53ef\u4ee5\u653e\u5230 Controller \u5c64\u4e2d\u7684\u6bcf\u4e00\u500b Method \u4e2d\u3002\u4ee5\u505a\u66f4\u7d30\u9846\u7c92\u5ea6\u7684\u6388\u6b0a\u3002</p>  <pre><code>@RequestMapping(\"/secured\")\n@RestController\n@PreAuthorize(\"hasRole('SYS_ADMIN')\")\npublic class MySuperSecuredController {\n\n    @GetMapping(\"/get-data\")\n    public String get(){\n        return \"SUPER SECURED DATA\"; \n    }\n\n}\n</code></pre>"},{"location":"spring-keycloak/#applicationyaml","title":"application.yaml","text":"<pre><code>server:\n  port: 8080\n\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: http://localhost:9090/realms/MyAppRealm\n          jwk-set-uri: http://localhost:9090/realms/MyAppRealm/protocol/openid-connect/certs\n</code></pre> <p>MyAppRealm\uff1a\u9700\u8981\u5728Keycloak\u4e2d\u65b0\u589e\u6b64Realm\u3002\u76f8\u95dc\u8a2d\u5b9a\u5982\u4e0b\u3002</p>"},{"location":"spring-keycloak/#keycloak-docker-keycloak","title":"Keycloak \u5728 Docker \u8207 \u8a2d\u5b9a Keycloak","text":"<p>\u6253\u958b\u700f\u89bd\u5668\uff0c\u958b\u555f Keycloak \u767b\u5165\u9801\u9762 (http://localhost:9090) </p> <p>Realm \u8f38\u5165 Realm name\uff1aMyAppRealm </p> <p>Client</p>   <p>Role\uff1aSYS_ADMIN</p>  <p>User\uff1a\u5efa\u7acb\u4e00\u500b User\uff0c\u4e26\u4e14\u5c07\u89d2\u8272\u7d81\u5b9a\u9032\u53bb\u3002</p>"},{"location":"spring-keycloak/#postman","title":"Postman \u6e2c\u8a66","text":"<p>\u900f\u904e OpenID Connect \u53d6\u5f97 Token http://localhost:9090/realms/MyAppRealm/protocol/openid-connect/token </p> <p>\u5229\u7528\u525b\u525b\u53d6\u5f97\u7684Token\uff0c\u5b58\u53d6 Web API \u8cc7\u8a0a http://localhost:8080/secured/get-data </p> <p>\u5982\u679c\u8981\u767b\u51fa\u67d0\u4e00\u7528\u6236\u7684\u6240\u6709 Session</p> <p>http://localhost:9090/realms/master/protocol/openid-connect/token </p> <p>http://localhost:9090/admin/realms/MyAppRealm/users/3a9574f5-01ae-4caf-839c-f6d5ddb9321c/logout </p>"},{"location":"spring-keycloak/#hub","title":"\u53c3\u8003 Hub","text":"<p>https://github.com/aweit-zhu/HelloSpringBoo2</p>"},{"location":"spring-ldap/","title":"Spring Security &amp; LDAP","text":"<p>\u5b8c\u6574\u7a0b\u5f0f\u78bc\uff1ahttps://github.com/aweit-zhu/SpringSecurityLdap</p>"},{"location":"spring-ldap/#ldap","title":"LDAP","text":"<p>LDAP (Lightweight Directory Access Protocol, \u8f15\u578b\u76ee\u9304\u5b58\u53d6\u5354\u5b9a)\uff0c\u9664\u4e86\u6709 Windows \u7684 AD(Active Directory)\u5916\uff0c\u9084\u6709\u958b\u6e90\u7684 OpenLDAP\u3002</p> <p>OpenLDAP \u53ef\u4ee5\u900f\u904e\u700f\u89bd\u5668\u76f4\u63a5\u7ba1\u7406 (phpLDAPadmin )\u3002</p>  <p>1.docker-compose.yaml</p> <pre><code>services:\n  openldap:\n    image: osixia/openldap\n    environment:\n      - LDAP_ORGANISATION=Example Inc.\n      - LDAP_DOMAIN=example.com\n      - LDAP_ADMIN_PASSWORD=admin\n    ports:\n      - 389:389\n    volumes:\n      - ./data/ldap:/var/lib/ldap\n      - ./data/slapd:/etc/ldap/slapd.d\n\n  phpldapadmin:\n    image: osixia/phpldapadmin\n    environment:\n      - PHPLDAPADMIN_LDAP_HOSTS=openldap\n      - PHPLDAPADMIN_HTTPS=false\n    ports:\n      - 8080:80\n    depends_on:\n      - openldap\n</code></pre>  <p>\u7db2\u5740\uff1ahttp://localhost:8080/ \u5e33\u865f\uff1acn=admin,dc=example,dc=com \u5bc6\u78bc\uff1aadmin </p> <ol> <li>\u5efa\u7acb OU (Organisational Unit)\uff1agroups\u3001users\u3002</li> </ol> <p>\u9ede\u9078 Organisational Unit </p> <p>\u8f38\u5165 users </p> <p>\u63a5\u8457\u91cd\u8907\u52d5\u4f5c\uff0c\u5efa\u7acb users\u3002</p> <ol> <li>\u5efa\u7acb Generic: Posix Group\uff1aadmin\u3001user</li> </ol>  <ol> <li>\u5728 ou=groups\u4e0a\uff0c\u5efa\u7acb\u5169\u500b\u89d2\u8272\uff1aadmin\u3001user </li> </ol>  <ol> <li>\u5728 ou-users\u4e0a\uff0c\u5efa\u7acb Generic: User Account\uff1aweizhi</li> </ol>  <p>GID Number = Group ID \u865f\u78bc\uff0c\u5c31\u662f\u525b\u525b\u5efa\u7acb\u7684 admin \u548c user </p> <ol> <li>\u7d81\u5b9a User Account \u81f3 Posix Group \u4e2d\uff0c\u8981\u7528 DN \u65b0\u589e\u3002</li> </ol>"},{"location":"spring-ldap/#spring-security-and-ldap","title":"Spring Security and LDAP","text":"<p>\u5efa\u7acb\u5177\u6709\u8a8d\u8b49\u8207\u6388\u6b0a\u7684Controller\uff0c\u5176\u4e2d /admin \u7684\u8def\u5f91\u9700\u8981\u6709 ADMIN \u6b0a\u9650\u3001/user \u7684\u8def\u5f91\u9700\u8981\u6709 USER \u6b0a\u9650\u3002</p> <p>\u4f7f\u7528 Spring Security \u7684\u6a5f\u5236\uff0c\u4f46 User \u7684\u6574\u5408(\u5e33\u865f\u3001\u5bc6\u78bc\u3001\u6388\u6b0a) \u9700\u8981\u7531 LDAP\u63d0\u4f9b\u3002</p>   <ol> <li>pom.xml</li> </ol> <pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.6.15&lt;/version&gt;\n        &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;SpringSecurityLdap&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;SpringSecurityLdap&lt;/name&gt;\n    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;17&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;!-- Spring Security --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;!-- Spring LDAP --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-ldap&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-ldap&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n\n</code></pre> <ol> <li>application.properties</li> </ol> <pre><code>ldap.url=ldap://localhost:389\nldap.username=cn=admin,dc=example,dc=com\nldap.password=admin\nldap.baseDn=dc=example,dc=com\nserver.port=8091\n</code></pre> <ol> <li>LdapConfig.java</li> </ol> <pre><code>import org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.ldap.core.LdapTemplate;\nimport org.springframework.ldap.core.support.LdapContextSource;\n\n@Configuration\npublic class LdapConfig {\n\n    @Value(\"${ldap.url}\")\n    private String ldapUrl;\n\n    @Value(\"${ldap.username}\")\n    private String ldapUsername;\n\n    @Value(\"${ldap.password}\")\n    private String ldapPassword;\n\n    @Bean\n    public LdapContextSource ldapContextSource() {\n        LdapContextSource ldapContextSource = new LdapContextSource();\n        ldapContextSource.setUrl(ldapUrl);\n        ldapContextSource.setUserDn(ldapUsername);\n        ldapContextSource.setPassword(ldapPassword);\n        return ldapContextSource;\n    }\n\n    @Bean\n    public LdapTemplate ldapTemplate() {\n        return new LdapTemplate(ldapContextSource());\n    }\n}\n\n</code></pre> <ol> <li>SecurityConfig.java</li> </ol> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.ldap.core.LdapTemplate;\nimport org.springframework.ldap.core.support.LdapContextSource;\nimport org.springframework.security.authentication.AuthenticationProvider;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.ldap.authentication.BindAuthenticator;\nimport org.springframework.security.ldap.authentication.LdapAuthenticationProvider;\nimport org.springframework.security.ldap.authentication.LdapAuthenticator;\nimport org.springframework.security.ldap.search.FilterBasedLdapUserSearch;\nimport org.springframework.security.ldap.search.LdapUserSearch;\nimport org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator;\nimport org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator;\nimport org.springframework.security.web.authentication.www.BasicAuthenticationFilter;\n\nimport com.example.filter.LdapAuthoritiesFilter;\nimport com.example.mapper.LdapUserDetailsMapper;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    LdapContextSource ldapContextSource;\n\n    @Autowired\n    LdapTemplate ldapTemplate;\n\n    @Autowired\n    LdapAuthoritiesFilter ldapAuthoriesFilter;\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.authenticationProvider(ldapAuthenticationProvider());\n    }\n\n    @Bean\n    public AuthenticationProvider ldapAuthenticationProvider() {\n        LdapAuthenticationProvider ldapAuthenticationProvider = new LdapAuthenticationProvider(ldapBindAuthenticator(),\n                ldapAuthoritiesPopulator());\n        ldapAuthenticationProvider.setUserDetailsContextMapper(new LdapUserDetailsMapper());\n        return ldapAuthenticationProvider;\n    }\n\n    @Bean\n    public LdapAuthenticator ldapBindAuthenticator() {\n        BindAuthenticator bindAuthenticator = new BindAuthenticator(ldapContextSource);\n        bindAuthenticator.setUserSearch(ldapUserSearch());\n        return bindAuthenticator;\n    }\n\n    @Bean\n    public LdapAuthoritiesPopulator ldapAuthoritiesPopulator() {\n        DefaultLdapAuthoritiesPopulator authoritiesPopulator = new DefaultLdapAuthoritiesPopulator(ldapContextSource,\n                \"ou=groups,dc=example,dc=com\");\n        authoritiesPopulator.setGroupSearchFilter(\"memberUid={0}\");\n        return authoritiesPopulator;\n    }\n\n    @Bean\n    public LdapUserSearch ldapUserSearch() {\n        return new FilterBasedLdapUserSearch(\"ou=users,dc=example,dc=com\", \"(uid={0})\", ldapContextSource);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.\n        addFilterBefore(ldapAuthoriesFilter,BasicAuthenticationFilter.class).authorizeRequests()\n          .antMatchers(\"/admin/**\").hasAnyRole(\"ADMIN\") \n          .antMatchers(\"/user/**\").hasAnyRole(\"ADMIN\", \"USER\")\n          .anyRequest().authenticated()\n        .and()\n          .csrf().ignoringAntMatchers(\"/admin/user\")\n        .and()\n          .formLogin()\n        .and()\n          .logout();\n    }\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n}\n}\n</code></pre> <p>4.LdapUserDetailsMapper.java</p> <pre><code>import java.nio.charset.StandardCharsets;\nimport java.util.Collection;\n\nimport org.springframework.ldap.core.DirContextAdapter;\nimport org.springframework.ldap.core.DirContextOperations;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.ldap.userdetails.UserDetailsContextMapper;\n\npublic class LdapUserDetailsMapper implements UserDetailsContextMapper {\n\n    @Override\n    public UserDetails mapUserFromContext(DirContextOperations ctx, String username, Collection&lt;? extends GrantedAuthority&gt; authorities) {\n        String ldapUsername = ctx.getStringAttribute(\"uid\");\n        byte[] binaryData = (byte[]) ctx.getObjectAttribute(\"userPassword\");\n        String ldapPassword = new String(binaryData, StandardCharsets.UTF_8);        \n        return User.builder()\n                .username(ldapUsername)\n                .password(ldapPassword)\n                .authorities(authorities)\n                .build();\n    }\n\n    @Override\n    public void mapUserToContext(UserDetails user, DirContextAdapter ctx) {\n        // Not implemented as this is not needed for authentication\n    }\n}\n</code></pre> <p>5.LdapAuthoritiesFilter.java </p> <pre><code>import java.io.IOException;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport javax.naming.NamingException;\nimport javax.naming.directory.Attributes;\nimport javax.naming.directory.SearchControls;\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.ldap.core.ContextMapper;\nimport org.springframework.ldap.core.DirContextOperations;\nimport org.springframework.ldap.core.LdapTemplate;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\n@Component\npublic class LdapAuthoritiesFilter extends OncePerRequestFilter {\n\n    @Autowired\n    LdapTemplate ldapTemplate;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n            throws ServletException, IOException {\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n\n        if (authentication != null &amp;&amp; authentication.isAuthenticated()\n                &amp;&amp; authentication instanceof UsernamePasswordAuthenticationToken) {\n            UsernamePasswordAuthenticationToken usernamePasswordAuthenticationToken = (UsernamePasswordAuthenticationToken) authentication;\n            if (usernamePasswordAuthenticationToken.getPrincipal() instanceof User) {\n                User ldapUserDetails = (User) usernamePasswordAuthenticationToken.getPrincipal();\n                UsernamePasswordAuthenticationToken updatedAuthentication = new UsernamePasswordAuthenticationToken(\n                        ldapUserDetails, ldapUserDetails.getPassword(),\n                        retrieveLdapAuthorities(ldapUserDetails.getUsername()));\n                updatedAuthentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n                SecurityContextHolder.getContext().setAuthentication(updatedAuthentication);\n            }\n        }\n\n        // Proceed with the filter chain\n        filterChain.doFilter(request, response);\n    }\n\n    private Collection&lt;? extends GrantedAuthority&gt; retrieveLdapAuthorities(String username) {\n\n        // Define the LDAP search filter to retrieve the authorities for the user\n        String filter = \"(memberUid=cn=\" + username + \",ou=users,dc=example,dc=com)\";\n\n        // Set the search controls to limit the attributes returned\n        SearchControls searchControls = new SearchControls();\n        searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);\n        searchControls.setReturningAttributes(new String[] { \"cn\" });\n\n        // Perform the LDAP search and retrieve the authorities\n        Set&lt;GrantedAuthority&gt; authorities = new HashSet&lt;&gt;();\n        ldapTemplate.search(\"ou=groups,dc=example,dc=com\", filter, searchControls, (ContextMapper&lt;Void&gt;) ctx -&gt; {\n            Attributes attributes = ((DirContextOperations) ctx).getAttributes();\n            try {\n                javax.naming.directory.Attribute memberOfAttribute = attributes.get(\"cn\");\n                if (memberOfAttribute != null) {\n                    for (int i = 0; i &lt; memberOfAttribute.size(); i++) {\n                        String authority = (String) memberOfAttribute.get(i);\n                        authorities.add(new SimpleGrantedAuthority(\"ROLE_\" + authority.toUpperCase()));\n                    }\n                }\n            } catch (NamingException e) {\n                e.printStackTrace();\n            }\n            return null;\n        });\n        return authorities;\n    }\n}\n</code></pre> <ol> <li>\u5efa\u7acb Controller\uff1aAdmin\u3001Controller</li> </ol> <pre><code>import java.security.NoSuchAlgorithmException;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.example.model.LdapUser;\nimport com.example.service.LdapUserService;\n\n@RestController\n@RequestMapping(\"/admin\")\npublic class AdminController {\n\n    @Autowired\n    LdapUserService ldapUserService;\n\n    @GetMapping(\"\")\n    public String admin() {\n        return \"admin is here\";\n    }\n\n    @PostMapping(\"/user\")\n    public void createUser(@RequestBody LdapUser user) throws NoSuchAlgorithmException {\n        ldapUserService.createUser(user);\n    }\n}\n</code></pre> <pre><code>import org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n    @GetMapping(\"\")\n    public String index() {\n        return \"Welcome to the User page!\";\n    }\n\n}\n</code></pre> <ol> <li>\u5efa\u7acb Service</li> </ol> <pre><code>import java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Base64;\n\nimport javax.naming.Name;\nimport javax.naming.directory.Attributes;\nimport javax.naming.directory.Attribute;\nimport javax.naming.directory.BasicAttribute;\nimport javax.naming.directory.BasicAttributes;\nimport javax.naming.directory.DirContext;\nimport javax.naming.directory.ModificationItem;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.ldap.core.LdapTemplate;\nimport org.springframework.ldap.support.LdapUtils;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.stereotype.Service;\n\nimport com.example.model.LdapUser;\n\n@Service\npublic class LdapUserService {\n\n    @Autowired\n    PasswordEncoder passwordEncoder;\n\n    @Autowired\n    LdapTemplate ldapTemplate;\n\n    final Base64.Encoder encoder = Base64.getEncoder();\n\n    public void createUser(LdapUser user) throws NoSuchAlgorithmException {\n\n        // Create user\n        Attribute objectClass = new BasicAttribute(\"objectClass\");\n        objectClass.add(\"top\");\n        objectClass.add(\"person\");\n        objectClass.add(\"organizationalPerson\");\n        objectClass.add(\"inetOrgPerson\");\n\n        Attributes attributes = new BasicAttributes();\n        attributes.put(objectClass);\n        attributes.put(\"cn\", user.getUsername());\n        attributes.put(\"sn\", user.getUsername());\n        attributes.put(\"userid\", user.getUsername());\n        attributes.put(\"userPassword\", \"{md5}\" + encodePassword(user.getPassword()));\n\n        String dnStr = \"cn=\" + user.getUsername() + \",ou=users,dc=example,dc=com\";\n        Name dn = LdapUtils.newLdapName(dnStr);\n        ldapTemplate.bind(dn, null, attributes);\n\n        // Add role list to 'cn=users,ou=groups,dc=example,dc=com'\n        Attribute memberUid = new BasicAttribute(\"memberUid\", dnStr);\n        ModificationItem[] modificationItems = new ModificationItem[1];\n        modificationItems[0] = new ModificationItem(DirContext.ADD_ATTRIBUTE, memberUid);\n\n        Name groupDn = LdapUtils.newLdapName(\"cn=user,ou=groups,dc=example,dc=com\");\n        ldapTemplate.modifyAttributes(groupDn, modificationItems);\n\n    }\n\n    private String encodePassword(String password) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        md.update(password.getBytes());\n        byte[] digest = md.digest();\n        String base64str = encoder.encodeToString(digest);\n        return base64str;\n    }\n\n}\n</code></pre> <ol> <li>\u5efa\u7acb Model\uff1aLdapUser\u3001ErrorResponse</li> </ol> <pre><code>import lombok.Builder;\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n@Getter\n@Setter\n@Builder\n@ToString\npublic class LdapUser {\n    private String username;\n    private String password;\n}\n</code></pre> <pre><code>import lombok.Builder;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\n@Builder\npublic class ErrorResponse {\n    private String message;\n    private int status;\n    private long timestamp;\n}\n</code></pre> <ol> <li>\u5efa\u7acb\u5168\u57df\u6355\u6349\u4f8b\u5916</li> </ol> <pre><code>import org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.ResponseStatus;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\n\nimport com.example.model.ErrorResponse;\n\n@RestControllerAdvice\npublic class GlobalExceptionHandler {\n\n    @ExceptionHandler(Exception.class)\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    public ErrorResponse handleCustomException(Exception ex) {\n        return ErrorResponse.builder()\n                .message(ex.getMessage())\n                .status(HttpStatus.INTERNAL_SERVER_ERROR.value())\n                .timestamp(System.currentTimeMillis())\n                .build();\n    }\n}\n\n</code></pre>"},{"location":"spring-ldap/#_1","title":"\u6e2c\u8a66","text":"<ol> <li>\u5efa\u7acb User (\u8981\u5148\u53d6\u5f97Token\uff0c\u4e26\u4e14\u5c07 Token \u8907\u88fd\u5230 Postman \u4e2d)</li> </ol>   <ol> <li>\u9810\u8a2d\u5e33\u865f\u53ea\u6709 User \u529f\u80fd\uff0c\u6240\u4ee5\u7528 yushu.wu \u6e2c\u8a66\u3002</li> </ol> <p>\u8f38\u5165 http://localhost:8090/user \u6703\u8f49\u5740\u5230\u767b\u5165\u9801\u9762(\u8f38\u5165yushu.wu/123)</p>  <p>\u6210\u529f\u5f8c\u5373\u6703\u770b\u5230\u6b63\u78ba\u8a0a\u606f </p> <p>3.\u82e5\u63a5\u8457\u8f38\u5165 http://localhost:8090/admin\uff0c\u5247\u6703\u56e0\u70ba\u6b0a\u9650\u554f\u984c\u56de\u50b3403\u932f\u8aa4\u3002</p>"},{"location":"spring-ldap/#-403","title":"\u88dc\u5145-\u5ba2\u88fd403\u932f\u8aa4\u9801\u9762","text":"<ol> <li>SecurityConfig.java</li> </ol> <pre><code>import org.springframework.security.web.access.AccessDeniedHandler;\nimport com.example.exception.CustomAccessDeniedHandler;\n...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n        .addFilterBefore(ldapAuthoriesFilter,BasicAuthenticationFilter.class).authorizeRequests()\n          .antMatchers(\"/admin/**\").hasAnyRole(\"ADMIN\") \n          .antMatchers(\"/user/**\").hasAnyRole(\"ADMIN\", \"USER\")\n          .anyRequest().authenticated()\n        .and()\n          .csrf().ignoringAntMatchers(\"/admin/user\")\n        .and()\n          .formLogin()\n        .and()\n          .exceptionHandling().accessDeniedHandler(accessDeniedHandler())\n        .and()\n          .logout();\n    }\n\n    @Bean\n    public AccessDeniedHandler accessDeniedHandler() {\n        return new CustomAccessDeniedHandler();\n    }\n...\n</code></pre> <p>CustomAccessDeniedHandler.java</p> <pre><code>import java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.springframework.security.access.AccessDeniedException;\nimport org.springframework.security.web.access.AccessDeniedHandler;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class CustomAccessDeniedHandler implements AccessDeniedHandler {\n\n    @Override\n    public void handle(HttpServletRequest request, HttpServletResponse response, \n                       AccessDeniedException accessDeniedException) throws IOException, ServletException {\n        response.sendRedirect(\"/error-403\"); // Redirect to the custom error page\n    }\n}\n</code></pre> <p>HomeController.java</p> <pre><code>import org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@Controller\npublic class HomeController {\n\n    @RequestMapping(\"/error-403\")\n    public String accessDenied() {\n        return \"error/error-403\";\n    }\n}\n</code></pre> <p>error-403.html (\u8def\u5f91\uff1a src/main/resources/application.properties )</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;403 Error - Access Denied&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f8f8f8;\n        }\n\n        .container {\n            max-width: 400px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: #fff;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        h1 {\n            font-size: 24px;\n            color: #333;\n            margin-bottom: 20px;\n        }\n\n        p {\n            font-size: 16px;\n            color: #666;\n            margin-bottom: 20px;\n        }\n\n        a {\n            color: #007bff;\n            text-decoration: none;\n        }\n\n        a:hover {\n            text-decoration: underline;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;403 Error - Access Denied&lt;/h1&gt;\n        &lt;p&gt;You are not authorized to access this page.&lt;/p&gt;\n        &lt;p&gt;Please contact the administrator for assistance or go back to the &lt;a href=\"/\"&gt;home page&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"spring-security/","title":"Spring Boot 3 and Spring Security 6 (JWT Authentication and Authorization)","text":""},{"location":"spring-security/#jwt-authentication-and-authorization-with-spring-boot-3-and-spring-security-6-mysql","title":"(\u5be6\u4f5c)JWT Authentication and Authorization with Spring Boot 3 and Spring Security 6 + MySQL","text":"<p>\u53c3\u8003\u8cc7\u6599\uff1a Bezkoder: https://www.bezkoder.com/spring-boot-security-jwt/</p> <p>Truong Bui: https://medium.com/@truongbui95/jwt-authentication-and-authorization-with-spring-boot-3-and-spring-security-6-2f90f9337421</p> <p>Aweit GitHub: https://github.com/aweit-zhu/DemoService</p>"},{"location":"spring-security/#new-project","title":"New Project","text":""},{"location":"spring-security/#docker-composeyaml","title":"docker-compose.yaml \u8a2d\u5b9a","text":"<pre><code>version: '3.1'\n\nservices:\n  mysql:\n    image: mysql:8.0\n    command: --default-authentication-plugin=mysql_native_password\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: password\n      MYSQL_DATABASE: db\n      MYSQL_USER: user\n      MYSQL_PASSWORD: password\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - mysql-db:/var/lib/mysql\n  adminer:\n    image: adminer\n    restart: always\n    ports:\n      - 8080:8080\n\nvolumes:\n  mysql-db:\n</code></pre> <pre><code>docker-compose up -d\n</code></pre>  <p>\u958b\u555f http://localhost:8080/</p>   <p>\u5982\u679c\u4e0d\u559c\u6b61\u9019\u500b\u4ecb\u9762\uff0c\u53ef\u4ee5\u6539\u7528 MySQL Workbench</p>"},{"location":"spring-security/#applicationyaml","title":"application.yaml \u8a2d\u5b9a","text":"<p>\u5148\u628a\u9810\u8a2d\u7684 properties \u6539\u6210 yaml \u6a94\u6848 </p> <p>applicaion.yaml</p> <pre><code>spring:\n  datasource:\n    url: jdbc:mysql://172.31.93.122:3306/db\n    username: user\n    password: password\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: update\n    show-sql: true\n    properties:\n      hibernate:\n        format_sql: true\n    database-platform: org.hibernate.dialect.MySQL8Dialect\n\n# App Properties\nbezkoder:\n  app:\n    jwtCookieName: bezkoder\n    jwtSecret: ======================BezKoder=Spring===========================\n    jwtExpirationMs: 86400000\n</code></pre>"},{"location":"spring-security/#pomxml","title":"pom.xml \u8a2d\u5b9a","text":"<p>\u65b0\u589e JWT \u76f8\u95dc\u5957\u4ef6</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n    &lt;artifactId&gt;jjwt-api&lt;/artifactId&gt;\n    &lt;version&gt;0.11.5&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n    &lt;artifactId&gt;jjwt-impl&lt;/artifactId&gt;\n    &lt;version&gt;0.11.5&lt;/version&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n    &lt;artifactId&gt;jjwt-jackson&lt;/artifactId&gt;\n    &lt;version&gt;0.11.5&lt;/version&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"spring-security/#_1","title":"\u5c08\u6848\u7d50\u69cb","text":""},{"location":"spring-security/#_2","title":"\u53c3\u8003\u7a0b\u5f0f","text":"<p>DemoService https://github.com/aweit-zhu/DemoService</p>"},{"location":"spring-security/#_3","title":"\u89c0\u5ff5","text":"<p> (https://www.bezkoder.com/spring-boot-security-jwt/)  (https://www.bezkoder.com/spring-boot-security-jwt/)</p> <p> (https://www.bezkoder.com/spring-boot-security-jwt/)</p>"},{"location":"spring-security/#postman","title":"Postman \u6e2c\u8a66","text":"<p>\u8acb\u5c07 Spring Security.postman_collection.json \u6a94\u6848\uff0c\u532f\u5165\u81f3 Postman\u3002</p>"},{"location":"ssh/","title":"SSH (Struts2 + Spring5 + Hibernate4)","text":""},{"location":"ssh/#ssh-struts2-spring5-hibernate4","title":"SSH (Struts2 + Spring5 + Hibernate4)","text":""},{"location":"ssh/#ssh","title":"SSH \u8aaa\u660e","text":"<p>\u9019\u4e9b\u662f\u4e00\u7d44\u6846\u67b6\u7684\u7d44\u5408\uff0c\u4e5f\u662f\u76ee\u524d\u6700\u70ba\u6d41\u884c\u7684 Java Web \u958b\u767c\u67b6\u69cb\u3002\u6bcf\u500b\u6846\u67b6\u90fd\u5404\u53f8\u5176\u8077\uff0c\u4e5f\u90fd\u6709\u5176\u4e3b\u8981\u76ee\u7684\u3002\u800c\u8cc7\u901a\u7684 Java \u76f8\u95dc\u6848\u5b50\u4e5f\u90fd\u662f\u63a1\u7528\u9019\u6a23\u7684\u67b6\u69cb\u505a\u958b\u767c\u3002</p> <p>Struts \u4e3b\u8981\u5728\u662f\u4f5c\u70ba MVC\uff08Model-Viewer-Controller\uff09\u7684\u5be6\u73fe\uff0c\u5c07\u9801\u9762\u7684\u5448\u73fe\u53ca\u6d41\u7a0b\u8207\u5546\u696d\u908f\u8f2f\u5207\u5206\u3002\u7136\u800c\uff0c\u8207\u5176\u8aaa\u5207\u5206\u4e0d\u5982\u89e3\u91cb\u70ba\u964d\u4f4e\u6bcf\u500b\u74b0\u7bc0\u7684\u85d5\u5408\u6027\u3002\u540c\u6642\u505a\u4e86\u958b\u767c\u5206\u5de5\uff0c\u7db2\u9801\u8a2d\u8a08\u8457\u91cd\u5728 UI\uff0fUX \u7684\u8a2d\u8a08\uff0c\u5546\u696d\u908f\u8f2f\u4ea4\u7d66\u5f8c\u7aef Business Layer \u53bb\u8ca0\u8cac\uff0c\u5728\u964d\u4f4e\u6bcf\u500b\u74b0\u7bc0\u7684\u85d5\u5408\u6027\u7684\u540c\u6642\uff0c\u4e5f\u5c07\u6bcf\u4e00\u968e\u5c64\u90fd\u505a\u4e86\u5f88\u5b8c\u6574\u7684\u5b9a\u7fa9\u3002\u524d\u7aef\u4f7f\u7528 HTML \u6216 Tag \u8207\u76f8\u5c0d\u4e5f\u6e1b\u4f4e\u7684\u524d\u7aef\u9801\u9762\u66b4\u9732\u5728\u5916\u7684\u8cc7\u5b89\u554f\u984c\u8af8\u5982 SQL injection\u3001Cross-site Script\uff0c\u7531\u5de5\u7a0b\u5e2b\u8a2d\u8a08\u51fa\u4f86\u7684\u9801\u9762\u4e5f\u4e0d\u6703\u6bcf\u6b21\u90fd\u88ab\u4f7f\u7528\u8005\u5acc\u68c4\u7f8e\u611f\u4e0d\u8db3\u4e86\u3002</p> <p>Spring \u5ef6\u7e8c\u4e86 MVC \u67b6\u69cb\u4e2d\u7684 Model \u90e8\u5206\uff0c\u5e7e\u500b\u4e3b\u8981\u7279\u8272\uff0c\u4f9d\u8cf4\u6ce8\u5165\uff08DI\uff09\u3001\u53cd\u8f49\u63a7\u5236\uff08IoC\uff09\u548c AOP\uff08Aspect Oriented Programming\uff09\u3002IoC \u9019\u88e1\u7684\u57fa\u790e\u6982\u5ff5\u662f BeanFactory\uff0c\u5b83\u63d0\u4f9b\u5c0d Factory \u6a21\u5f0f\u7684\u7d93\u5178\u5be6\u73fe\u4f86\u6d88\u9664\u5c0d\u7a0b\u5e8f\u6027\u55ae\u4f8b\u6a21\u5f0f\uff08Singleton\uff09\u7684\u9700\u8981\uff0c\u4e26\u771f\u6b63\u5730\u5141\u8a31\u4f60\u5f9e\u7a0b\u5e8f\u908f\u8f2f\u4e2d\u5206\u96e2\u51fa\u4f9d\u8cf4\u95dc\u4fc2\u548c\u914d\u7f6e\u3002\u7576\u7136\u82e5\u80fd\u914d\u5408\u5176\u4ed6 Design Pattern \u4f7f\u7528\u66f4\u53ef\u770b\u51fa\u67b6\u69cb\u7684\u5b8c\u6574\u6027\uff0cAOP \u4e2d\u61c9\u7528\u5230\u7684\u662f\u8cc7\u6599\u5eab\u7684 Transaction \u63a7\u7ba1\uff0c\u5b83\u8b93\u958b\u767c\u8005\u53ef\u4ee5\u5b8c\u5168\u4e0d\u9700\u8981\u53bb\u5beb\u5230 Transaction \u76f8\u95dc\u7684 code\uff0c\u53ea\u8981\u5b9a\u7fa9\u597d\u54ea\u4e9b code \u9700\u8981\u52a0\u4e0a Transaction \u7684\u63a7\u5236\u5373\u53ef\u3002</p> <p>Hibernate ORM \uff08Oriented-Relational Mapping\uff09\u63d0\u4f9b\u4e86\u5e38\u7528\u7684\u300c\u5c0d\u8c61\uff0f\u95dc\u4fc2\u300d\u6620\u5c04 APIs \u7684\u96c6\u6210\u5c64\u3002 \u5176\u4e2d\u5305\u62ec JPA\u3001JDO\u3001iBatis \u548c Hibernate \u3002\u5229\u7528 ORM package\uff0c\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u6240\u6709 Spring \u63d0\u4f9b\u7684\u7279\u6027\u9032\u884c\u300c\u5c0d\u8c61\uff0f\u95dc\u4fc2\u300d\u6620\u5c04\u3002</p> <p>(\u53c3\u8003\u4f86\u6e90\uff1ahttps://marketing.ares.com.tw/newsletter/2015-08-outsourcing/ssh)</p> <p>\u53cd\u8f49\u63a7\u5236\uff08IoC\uff09</p>  <p>(\u53c3\u8003\u8cc7\u6599\uff1a)</p> <p>AOP\uff08Aspect Oriented Programming\uff09\uff1a\u5256\u9762\u5c0e\u5411\u7a0b\u5f0f\u8a2d\u8a08</p> <p> (\u53c3\u8003\u8cc7\u6599\uff1ahttps://ithelp.ithome.com.tw/articles/10229664)</p>"},{"location":"ssh/#github-httpsgithubcomaweit-zhustruts2beginner","title":"GitHub \u5b8c\u6574\u4ee3\u78bc\uff1ahttps://github.com/aweit-zhu/Struts2Beginner","text":""},{"location":"ssh/#_1","title":"\u4f7f\u7528\u74b0\u5883","text":"<ul> <li>Struts 2.3.8</li> <li>Struts JSON Plugin 2.3.8</li> <li>Struts Convention Plugin 2.3.8</li> <li>Struts Spring Plugin 2.3.8</li> <li>Spring Core 5.3.29</li> <li>Spring Context 5.3.29</li> <li>Spring Web MVC 5.3.29</li> <li>Spring Web 5.3.29</li> <li>Spring Beans 5.3.29</li> <li>Spring Context Support 5.1.5.RELEASE</li> <li>Spring Security Core 5.1.4.RELEASE</li> <li>Spring Security Taglibs 5.1.4.RELEASE</li> <li>Spring Security Web 5.1.4.RELEASE</li> <li>Spring Security Config 5.1.4.RELEASE</li> <li>Hibernate Core 5.4.32.Final</li> <li>MySQL Connector/J 8.0.25</li> </ul>"},{"location":"ssh/#pomxml","title":"pom.xml","text":"<pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;groupId&gt;Struts2Beginner&lt;/groupId&gt;\n    &lt;artifactId&gt;Struts2Beginner&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n    &lt;dependencies&gt;\n\n        &lt;!-- lombok --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;version&gt;1.18.20&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n        &lt;!-- Servlet --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n            &lt;artifactId&gt;jstl&lt;/artifactId&gt;\n            &lt;version&gt;1.2&lt;/version&gt;\n        &lt;/dependency&gt;\n\n        &lt;!-- Struts 2 --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;\n            &lt;artifactId&gt;struts2-core&lt;/artifactId&gt;\n            &lt;version&gt;2.3.8&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;\n            &lt;artifactId&gt;struts2-json-plugin&lt;/artifactId&gt;\n            &lt;version&gt;2.3.8&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;\n            &lt;artifactId&gt;struts2-convention-plugin&lt;/artifactId&gt;\n            &lt;version&gt;2.3.8&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;\n            &lt;artifactId&gt;struts2-convention-plugin&lt;/artifactId&gt;\n            &lt;version&gt;2.3.8&lt;/version&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;\n                    &lt;artifactId&gt;struts2-core&lt;/artifactId&gt;\n                &lt;/exclusion&gt;\n            &lt;/exclusions&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;\n            &lt;artifactId&gt;struts2-spring-plugin&lt;/artifactId&gt;\n            &lt;version&gt;2.3.8&lt;/version&gt;\n        &lt;/dependency&gt;\n\n        &lt;!-- Spring dependencies --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-core&lt;/artifactId&gt;\n            &lt;version&gt;5.3.29&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n            &lt;version&gt;5.3.29&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n            &lt;version&gt;5.3.29&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-web&lt;/artifactId&gt;\n            &lt;version&gt;5.3.29&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;\n            &lt;version&gt;5.3.29&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;\n            &lt;version&gt;5.1.5.RELEASE&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-core&lt;/artifactId&gt;\n            &lt;version&gt;5.1.4.RELEASE&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-taglibs&lt;/artifactId&gt;\n            &lt;version&gt;5.1.4.RELEASE&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-web&lt;/artifactId&gt;\n            &lt;version&gt;5.1.4.RELEASE&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-config&lt;/artifactId&gt;\n            &lt;version&gt;5.1.4.RELEASE&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!-- Hibernate --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;\n            &lt;version&gt;5.4.32.Final&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;8.0.25&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;build&gt;\n        &lt;resources&gt;\n            &lt;resource&gt;\n                &lt;directory&gt;src/main/&lt;/directory&gt;\n                &lt;excludes&gt;\n                    &lt;exclude&gt;**/*.java&lt;/exclude&gt;\n                &lt;/excludes&gt;\n            &lt;/resource&gt;\n        &lt;/resources&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.8.1&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;release&gt;17&lt;/release&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n            &lt;plugin&gt;\n                &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.2.3&lt;/version&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n        &lt;finalName&gt;Struts2Beginner&lt;/finalName&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n\n</code></pre>"},{"location":"ssh/#mysql","title":"\u914d\u7f6e MySQL","text":"<pre><code>version: '3.8'\n\nservices:\n  mysql:\n    image: mysql:5\n    container_name: mysql\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: password\n      MYSQL_DATABASE: cookbook\n      MYSQL_USER: admin\n      MYSQL_PASSWORD: password\n    ports:\n      - 3306:3306\n    volumes:\n      - ./data:/var/lib/mysql\n\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    container_name: phpmyadmin\n    restart: always\n    environment:\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n      MYSQL_ROOT_PASSWORD: password\n    ports:\n      - 8989:80\n    depends_on:\n      - mysql\n</code></pre>"},{"location":"ssh/#_2","title":"\u4e09\u500b\u914d\u7f6e\u6a94","text":"<ol> <li>struts.xml</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"\n    \"http://struts.apache.org/dtds/struts-2.0.dtd\"&gt;\n\n&lt;struts&gt;\n    &lt;constant name=\"struts.action.excludePattern\"\n        value=\"/spring/.*\" /&gt;\n\n    &lt;constant name=\"struts.objectFactory\" value=\"spring\" /&gt;\n\n    &lt;constant name=\"struts.objectFactory.spring.autoWireAlways\"\n        value=\"true\" /&gt;\n\n    &lt;constant name=\"struts.objectFactory.spring.autoWire\"\n        value=\"name\" /&gt;\n\n    &lt;constant name=\"struts.objectFactory.spring.useClassCache\"\n        value=\"true\" /&gt;\n\n    &lt;package name=\"Struts2Beginner\" namespace=\"/admin\"\n        extends=\"struts-default\"&gt;\n        &lt;action name=\"index\"&gt;\n            &lt;result&gt;/WEB-INF/jsp/calculate/input.jsp&lt;/result&gt;\n        &lt;/action&gt;\n    &lt;/package&gt;\n&lt;/struts&gt;\n</code></pre> <p>(1) struts.action.excludePattern\uff1a\u54ea\u4e9b\u8def\u7531\u4e0d\u8981\u900f\u904e Struts\u3002\u5982\u679c\u6709\u4e9b\u8def\u7531\u8981\u8d70 Spring Controller \u5247\u53ef\u4ee5\u5229\u7528\u9019\u500b\u65b9\u5f0f\u8a2d\u5b9a\u3002</p> <p>(2) struts.objectFactory\uff1a\u5982\u679c\u70ba Spirng\uff0c\u4ee3\u8868\u53ef\u4ee5\u4f7f\u7528 Spring \u7684 DI \u548c IoC\u7684\u529f\u80fd\u3002</p> <p>(3) struts.objectFactory.spring.autoWire\uff1a\u5982\u679c Bean \u5b9a\u7fa9\u7684 Name \u70ba abc\uff0c\u5247\u6709\u8981\u6ce8\u5165\u7684\u5176\u4ed6Bean\u7684 property \u7684\u540d\u7a31\u4e5f\u8981\u70ba abc\uff0c\u5247\u6703\u81ea\u52d5\u6ce8\u5165\u3002</p> <ol> <li>applicationContext.xml</li> </ol> <pre><code>&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n\n\n    &lt;bean id=\"springController\" class=\"com.example.spring.controller.SpringController\"&gt;\n       &lt;property name=\"helloService\" ref=\"helloService\" /&gt;\n    &lt;/bean&gt;\n\n\n    &lt;bean id=\"helloService\" class=\"com.example.spring.service.HelloService\"/&gt;\n\n&lt;/beans&gt;\n</code></pre> <p>In the context of the provided XML code, the \"applicationContext.xml\" file is not explicitly mentioned. However, based on the configuration settings in the Struts XML file, it is likely that the Spring object factory is being used to manage objects and dependencies in the Struts application.</p> <p>In a typical setup, the \"applicationContext.xml\" file would be responsible for defining the Spring beans, specifying their dependencies, and configuring other aspects of the Spring application context. It might include components such as data sources, transaction managers, service beans, and more.</p> <ol> <li>hibernate.cfg.xml</li> </ol> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE hibernate-configuration PUBLIC\n        \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n        \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\"&gt;\n&lt;hibernate-configuration&gt;\n    &lt;session-factory&gt;\n        &lt;property name=\"hibernate.dialect\"&gt;org.hibernate.dialect.MySQL8Dialect&lt;/property&gt;\n        &lt;property name=\"hibernate.connection.driver_class\"&gt;com.mysql.cj.jdbc.Driver&lt;/property&gt;\n        &lt;property name=\"hibernate.connection.url\"&gt;jdbc:mysql://localhost:3306/cookbook&lt;/property&gt;\n        &lt;property name=\"hibernate.connection.username\"&gt;admin&lt;/property&gt;\n        &lt;property name=\"hibernate.connection.password\"&gt;password&lt;/property&gt;\n        &lt;property name=\"hibernate.show_sql\"&gt;true&lt;/property&gt;\n        &lt;property name=\"hibernate.hbm2ddl.auto\"&gt;update&lt;/property&gt;\n        &lt;mapping class = \"com.example.hibernate.entity.Post\" /&gt;\n        &lt;mapping class = \"com.example.hibernate.entity.Comment\" /&gt;\n    &lt;/session-factory&gt;\n&lt;/hibernate-configuration&gt;\n</code></pre> <p>(1) property\uff1a\u8a2d\u5b9a\u9023\u7dda\u8cc7\u8a0a</p> <p>(2) mapping\uff1a\u53ea\u8981\u6709\u4e00\u500b\u7269\u4ef6\u9700\u8981\u8207\u8868\u683c\u505a\u95dc\u806f\uff0c\u90fd\u8981\u5728\u9019\u908a\u5b9a\u7fa9\u3002</p>"},{"location":"ssh/#spirng-secutiry","title":"\u914d\u7f6e Spirng Secutiry","text":"<pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.CorsConfigurationSource;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\n\n@Configuration\n@ComponentScan(\"com.example\")\n@EnableTransactionManagement\n@EnableWebSecurity\npublic class AppConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity httpSecurity) throws Exception {\n\n        httpSecurity.cors().and().csrf().disable();\n\n        httpSecurity.authorizeRequests()\n                    .antMatchers(\"/superadmin/**\").access(\"hasRole('ROLE_SUPER_ADMIN')\")\n                    .antMatchers(\"/admin/**\").access(\"hasRole('ROLE_SUPER_ADMIN') or hasRole('ROLE_ADMIN')\")\n                    .antMatchers(\"/employee/**\").access(\"hasRole('ROLE_SUPER_ADMIN') or hasRole('ROLE_ADMIN') or hasRole('ROLE_EMPLOYEE')\")\n                    .antMatchers(\"/spring/**\").access(\"hasRole('ROLE_SUPER_ADMIN') or hasRole('ROLE_ADMIN')\")\n                    .and()\n                    .httpBasic()\n                    .and()\n                    .logout()\n                    .and()\n                    .exceptionHandling();\n    }\n\n    @Bean\n    public CorsConfigurationSource corsConfigurationSource() {\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration(\"/**\", new CorsConfiguration().applyPermitDefaultValues());\n        return source;\n    }\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n            .withUser(\"superadmin\").password(passwordEncoder().encode(\"123456\")).authorities(\"ROLE_SUPER_ADMIN\", \"ROLE_ADMIN\", \"ROLE_EMPLOYEE\")\n            .and()\n            .withUser(\"admin\").password(passwordEncoder().encode(\"123456\")).authorities(\"ROLE_ADMIN\", \"ROLE_EMPLOYEE\")\n            .and()\n            .withUser(\"employee\").password(passwordEncoder().encode(\"123456\")).authorities(\"ROLE_EMPLOYEE\");\n    }\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n}\n</code></pre>"},{"location":"ssh/#action-service","title":"Action + Service","text":"<p>HelloAction</p> <pre><code>import org.apache.struts2.convention.annotation.Action;\nimport org.apache.struts2.convention.annotation.Namespace;\nimport org.apache.struts2.convention.annotation.Result;\nimport org.apache.struts2.convention.annotation.Results;\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport com.example.spring.service.HelloService;\nimport com.opensymphony.xwork2.ActionSupport;\n\n@Namespace(\"/\")\n@Results(value = { \n    @Result(name = \"hello\", location = \"/WEB-INF/jsp/hello.jsp\") ,\n    @Result(name = \"goodbye\", location = \"/WEB-INF/jsp/goodbye.jsp\") \n})\npublic class HelloAction extends ActionSupport {\n\n    @Autowired\n    HelloService helloService;\n\n    @Action(value = \"hello\")\n    public String hello() {\n        System.out.println(helloService.getHello());\n        return \"hello\";\n    }\n\n    @Action(value = \"goodbye\")\n    public String goodbye() {\n        return \"goodbye\";\n    }\n}\n</code></pre> <p>HelloService</p> <pre><code>import org.springframework.stereotype.Service;\n\n@Service\npublic class HelloService {\n\n    public String getHello() {\n        return \"service, hello\";\n    }\n\n}\n</code></pre> <p>hello.jsp</p> <pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%&gt;\n&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\nHello\n</code></pre> <p>goobye.jsp</p> <pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%&gt;\n&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\nGoodBye\n</code></pre>"},{"location":"ssh/#struts-dao","title":"Struts \u6574\u5408 DAO","text":""},{"location":"ssh/#hibernateutil","title":"HibernateUtil","text":"<pre><code>import org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\n\npublic class HibernateUtil {\n\n    private static final SessionFactory sessionFactory;\n\n    static {\n        try {\n            sessionFactory = new Configuration().configure().buildSessionFactory();\n        } catch (Throwable ex) {\n            System.err.println(\"Initial SessionFactory creation failed.\" + ex);\n            throw new ExceptionInInitializerError(ex);\n        }\n    }\n\n    public static SessionFactory getSessionFactory() {\n        return sessionFactory;\n    }\n}\n</code></pre>"},{"location":"ssh/#post","title":"Post","text":"<pre><code>import java.util.ArrayList;\nimport java.util.List;\n\nimport javax.persistence.CascadeType;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n@Entity\n@Table(name = \"posts\")\n@Data\n@ToString(exclude = \"comments\")\npublic class Post {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private int id;\n\n    @Column\n    private String title;\n\n    @Column\n    private String content;\n\n    @OneToMany(mappedBy = \"post\", cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n    private List&lt;Comment&gt; comments = new ArrayList&lt;&gt;();\n\n}\n</code></pre>"},{"location":"ssh/#comment","title":"Comment","text":"<pre><code>import javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.Table;\n\nimport lombok.Data;\nimport lombok.ToString;\n\n@Entity\n@Table(name = \"comments\")\n@Data\n@ToString(exclude = \"post\")\npublic class Comment {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String content;\n\n    @ManyToOne\n    @JoinColumn(name = \"post_id\")\n    private Post post;\n}\n</code></pre>"},{"location":"ssh/#postdao","title":"PostDao","text":"<pre><code>import java.util.List;\n\nimport org.hibernate.Session;\nimport org.hibernate.Transaction;\nimport org.springframework.stereotype.Service;\n\nimport com.example.hibernate.HibernateUtil;\nimport com.example.hibernate.entity.Post;\n\n@Service\npublic class PostDao {\n\n    public void save(Post post) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            Transaction transaction = session.beginTransaction();\n            session.save(post);\n            transaction.commit();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void update(Post post) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            Transaction transaction = session.beginTransaction();\n            session.update(post);\n            transaction.commit();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void delete(Post post) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            Transaction transaction = session.beginTransaction();\n            session.delete(post);\n            transaction.commit();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public Post getById(int id) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            return session.get(Post.class, id);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    public List&lt;Post&gt; getAll() {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            return session.createQuery(\"FROM Post\", Post.class).getResultList();\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n}\n\n</code></pre>"},{"location":"ssh/#commentdao","title":"CommentDao","text":"<pre><code>import java.util.List;\n\nimport org.hibernate.Session;\nimport org.hibernate.Transaction;\nimport org.hibernate.query.Query;\nimport org.springframework.stereotype.Service;\n\nimport com.example.hibernate.HibernateUtil;\nimport com.example.hibernate.entity.Comment;\nimport com.example.hibernate.entity.Post;\n\n@Service\npublic class CommentDao {\n\n    public void saveComment(Comment comment) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            Transaction transaction = session.beginTransaction();\n            session.save(comment);\n            transaction.commit();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public Comment getCommentById(Long commentId) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            return session.get(Comment.class, commentId);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    public List&lt;Comment&gt; getCommentsByPost(Post post) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            Query&lt;Comment&gt; query = session.createQuery(\"FROM Comment WHERE post = :post\", Comment.class);\n            query.setParameter(\"post\", post);\n            return query.list();\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    public void updateComment(Comment comment) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            Transaction transaction = session.beginTransaction();\n            session.update(comment);\n            transaction.commit();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void deleteComment(Comment comment) {\n        try (Session session = HibernateUtil.getSessionFactory().openSession()) {\n            Transaction transaction = session.beginTransaction();\n            session.delete(comment);\n            transaction.commit();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"ssh/#postaction","title":"PostAction","text":"<pre><code>import java.util.List;\n\nimport org.apache.struts2.convention.annotation.Action;\nimport org.apache.struts2.convention.annotation.Namespace;\nimport org.apache.struts2.convention.annotation.Result;\nimport org.apache.struts2.convention.annotation.Results;\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport com.example.hibernate.dao.CommentDao;\nimport com.example.hibernate.dao.PostDao;\nimport com.example.hibernate.entity.Comment;\nimport com.example.hibernate.entity.Post;\nimport com.opensymphony.xwork2.ActionSupport;\n\nimport lombok.Data;\n\n@Namespace(\"/admin\")\n@Results({\n    @Result(name = \"success\", location = \"/list-posts.jsp\"),\n    @Result(name = \"error\", location = \"/error.jsp\")\n})\n@Data\npublic class PostAction extends ActionSupport {\n\n    @Autowired\n    PostDao postDao;\n\n    @Autowired\n    CommentDao commentDao;\n\n    private int id;\n\n    private String title;\n\n    private String content;\n\n    private List&lt;Post&gt; posts;\n\n    @Action(value = \"/create-post\", results = {\n        @Result(name = \"success\", location = \"/list-posts\", type = \"redirect\")\n    })\n    public String create() {\n        Post post = new Post();\n        post.setTitle(title);\n        post.setContent(content);\n        postDao.save(post);\n\n        Comment comment = new Comment();\n        comment.setContent(\"Test Comment\");\n\n        addCommentToPost(post.getId(),comment);\n\n        return SUCCESS;\n    }\n\n    public void addCommentToPost(int postId, Comment comment) {\n        Post post = postDao.getById(postId);\n        if (post != null) {\n            comment.setPost(post);\n            commentDao.saveComment(comment);\n        }\n    }\n\n\n    @Action(value = \"/update-post\", results = {\n        @Result(name = \"success\", location = \"/list-posts\", type = \"redirect\")\n    })\n    public String update() {\n        Post post = postDao.getById(id);\n\n        if (post != null) {\n            post.setTitle(title);\n            post.setContent(content);\n            postDao.update(post);\n        } else {\n            return ERROR;\n        }\n\n        return SUCCESS;\n    }\n\n    @Action(value = \"/delete-post\", results = {\n        @Result(name = \"success\", location = \"/list-posts\", type = \"redirect\")\n    })\n    public String delete() {\n        Post post = postDao.getById(id);\n\n        if (post != null) {\n            postDao.delete(post);\n        } else {\n            return ERROR;\n        }\n\n        return SUCCESS;\n    }\n\n    @Action(value = \"/view-post\", results = {\n        @Result(name = \"success\", location = \"/view-post.jsp\")\n    })\n    public String view() {\n        Post post = postDao.getById(id);\n\n        if (post != null) {\n            title = post.getTitle();\n            content = post.getContent();\n\n            List&lt;Comment&gt; comments = commentDao.getCommentsByPost(post);\n            System.out.println(comments);\n\n        } else {\n            return ERROR;\n        }\n\n        return SUCCESS;\n    }\n\n    @Action(value = \"/list-posts\", results = {\n        @Result(name = \"success\", location = \"/list-posts.jsp\")\n    })\n    public String list() {\n        posts = postDao.getAll();\n        return SUCCESS;\n    }\n}\n</code></pre>"},{"location":"ssh/#jsp","title":"\u76f8\u95dcJSP","text":"<p>list-post.jsp</p> <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\" %&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;List of Posts&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;List of Posts&lt;/h1&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;ID&lt;/th&gt;\n            &lt;th&gt;Title&lt;/th&gt;\n            &lt;th&gt;Content&lt;/th&gt;\n            &lt;th&gt;Action&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;s:iterator value=\"posts\"&gt;\n            &lt;tr&gt;\n                &lt;td&gt;&lt;s:property value=\"id\" /&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;s:property value=\"title\" /&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;s:property value=\"content\" /&gt;&lt;/td&gt;\n                &lt;td&gt;\n                    &lt;a href=\"&lt;s:url action='view-post'&gt;&lt;s:param name='id' value='%{id}' /&gt;&lt;/s:url&gt;\"&gt;View&lt;/a&gt;\n                    &lt;a href=\"&lt;s:url action='delete-post'&gt;&lt;s:param name='id' value='%{id}' /&gt;&lt;/s:url&gt;\"&gt;Delete&lt;/a&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/s:iterator&gt;\n    &lt;/table&gt;\n    &lt;h2&gt;Create New Post&lt;/h2&gt;\n    &lt;form action=\"&lt;s:url action='create-post' /&gt;\" method=\"POST\"&gt;\n        &lt;label for=\"title\"&gt;Title:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"title\" id=\"title\" required /&gt;&lt;br&gt;\n        &lt;label for=\"content\"&gt;Content:&lt;/label&gt;\n        &lt;textarea name=\"content\" id=\"content\" required&gt;&lt;/textarea&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"Create\" /&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>view-posts.jsp</p> <pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\" %&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;View Post&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;View Post&lt;/h1&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;ID&lt;/th&gt;\n            &lt;th&gt;Title&lt;/th&gt;\n            &lt;th&gt;Content&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;s:property value=\"id\" /&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;s:property value=\"title\" /&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;s:property value=\"content\" /&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;h2&gt;Edit Post&lt;/h2&gt;\n    &lt;form action=\"&lt;s:url action='update-post' /&gt;\" method=\"POST\"&gt;\n        &lt;input type=\"hidden\" name=\"id\" value=\"&lt;s:property value='id' /&gt;\" /&gt;\n        &lt;label for=\"title\"&gt;Title:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;s:property value='title' /&gt;\" required /&gt;&lt;br&gt;\n        &lt;label for=\"content\"&gt;Content:&lt;/label&gt;\n        &lt;textarea name=\"content\" id=\"content\" required&gt;&lt;s:property value='content' /&gt;&lt;/textarea&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"Update\" /&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"ssh/#test","title":"Test","text":"<ol> <li> <p>\u6253\u958b\u700f\u89bd\u5668\uff1ahttp://localhost:8080/Struts2Beginner/admin/list-posts</p> </li> <li> <p>\u5f48\u51fa\u767b\u5165\u8996\u7a97\uff0c\u8868\u793aSpring Security \u662f\u6b63\u78ba\u7684\u3002</p> </li> </ol>  <ol> <li>\u8f38\u5165\u6b63\u78ba\u5e33\u5bc6\u5f8c(admin/123456)\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u756b\u9762\u3002</li> </ol>  <ol> <li>\u5c0d\u7167\u4e00\u4e0b\u8cc7\u6599\u5eab\u7684\u8cc7\u6599\uff0c\u6bd4\u5c0d\u662f\u5426\u4e00\u81f4\u3002</li> </ol>"},{"location":"struts-props/","title":"Struts2 Properties Config","text":""},{"location":"struts-props/#struts2-properties-config","title":"Struts2 Properties Config","text":""},{"location":"struts-props/#_1","title":"\u554f\u984c\u63cf\u8ff0","text":"<p>\u6709\u6642\u5019\u8981\u4f9d\u64da\u7cfb\u7d71\u8b8a\u6578(\u4f8b\u5982\uff1aenv)\uff0c\u6c7a\u5b9aApplication\u7684\u74b0\u5883\uff0c\u9019\u6a23\u624d\u53ef\u4ee5\u8b80\u53d6\u5230\u6b63\u78ba\u7684\u8a2d\u5b9a\u503c\uff0c\u4f8b\u5982\uff1aAPI\u3001DB \u9023\u7dda\u3002</p> <p>\u5982\u4f55\u5728 Struts2 \u505a\u5230\u5462\uff1f\u4e0a\u7db2\u53ef\u80fd\u6703\u767c\u73fe\u53ef\u4ee5\u4f7f\u7528 <code>&lt;constant name=\"struts.custom.i18n.resources\" value=\"application_${env}\" /&gt;</code>\u3002\u4f46\u662f\u5982\u679c\u7248\u672c\u662f\u4f4e\u65bc2.5\u7684\uff0c\u6703\u767c\u73fe\u7121\u6cd5work\u3002(\u672c\u6587\u662f\u75282.3.8)</p> <p>\u90a3\u8a72\u5982\u4f55\u89e3\u6c7a\uff1f\u9700\u6eff\u8db3\u4ee5\u4e0b\u76ee\u6a19\uff1a</p> <ol> <li> <p>\u4f9d\u7167\u7cfb\u7d71\u8b8a\u6578\uff0c\u6c7a\u5b9aApplication\u7684\u8a2d\u5b9a\u6a94\u3002\u4f8b\u5982\uff1aenv=dev, \u5247\u8b80\u53d6 application_dev.properties\u3002</p> </li> <li> <p>\u5982\u4f55\u8b80\u53d6\u8a2d\u5b9a\u6a94\u503c\uff1f</p> </li> </ol>"},{"location":"struts-props/#strutsprepareandexecutefilter","title":"\u5229\u7528 StrutsPrepareAndExecuteFilter \u7684\u904e\u6ffe\u53c3\u6578","text":"<pre><code>&lt;filter&gt;\n    &lt;filter-name&gt;struts2&lt;/filter-name&gt;\n    &lt;filter-class&gt;\n        org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;\n    &lt;init-param&gt;\n        &lt;param-name&gt;struts.custom.i18n.resources&lt;/param-name&gt;\n        &lt;param-value&gt;application_${env}&lt;/param-value&gt;\n    &lt;/init-param&gt;\n&lt;/filter&gt;\n</code></pre> <ol> <li> <p>\u6e2c\u8a66\u5f8c\u767c\u73fe\uff0c\u5fc5\u9808\u8981\u5e36\u6709_\u7684\u624d\u80fd\u3002\u5982\u679c\u662f <code>application.${env}</code> \u5247\u7121\u6cd5work\u3002</p> </li> <li> <p>\u4e14\u4e00\u5b9a\u8981\u5beb\u5728\u904e\u6ffe\u53c3\u6578\u4e2d\uff0c\u5beb\u5728 struts.xml \u6703\u7121\u6cd5 work\u3002\u4f46\u662f\u5982\u679c\u662f\u5beb\u6b7b\u7684\uff0cstruts.xml \u53ef\u4ee5 work\u3002</p> </li> </ol>"},{"location":"struts-props/#srcmainresources-properties","title":"\u65bc src/main/resources \u65b0\u589e Properties \u6a94\u6848","text":""},{"location":"struts-props/#eclipse","title":"\u5728\u57f7\u884c\u61c9\u7528\u7684\u6307\u4ee4\u4e2d\u52a0\u5165\u74b0\u5883\u8b8a\u6578\uff0c\u4ee5\u4e0b\u4ee5 Eclipse \u70ba\u4f8b","text":"<p>\u52a0\u5165\u4ee5\u4e0b\u6307\u4ee4(\u4ee5dev\u70ba\u4f8b)\uff1a</p> <pre><code>-Denv=dev\n</code></pre>"},{"location":"struts-props/#_2","title":"\u5982\u4f55\u8b80\u53d6\u8a2d\u5b9a\u6a94\u503c\uff1f","text":"<pre><code> // \u5beb\u5728 JS \u4e2d\n var apiUrl = '&lt;s:property value=\"%{getText('API_URL')}\" /&gt;';\n\n // \u5beb\u5728 JSP \u4e2d\n &lt;s:property value=\"%{getText('API_URL')}\" /&gt;\n</code></pre> <p>JS </p> <p>\u700f\u89bd\u5668\u8f38\u51fa </p>"},{"location":"struts-tags/","title":"Struts2 + struts-tags","text":""},{"location":"struts-tags/#struts-tags","title":"Struts Tags","text":"<p>\u53c3\u8003\u8cc7\u6599\uff1a</p> <p>\u5b98\u7db2 https://struts.apache.org/tag-developers/tag-reference.html</p>"},{"location":"struts-tags/#_1","title":"\u8d77\u624b\u5f0f","text":"<pre><code>&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\" %\\&gt; \n\n// \u4f7f\u7528\u5404\u7a2e Struts \u6a19\u7c64\n</code></pre>"},{"location":"struts-tags/#form","title":"form","text":"<p>\u89e3\u6790\u524d</p> <pre><code>&lt;s:form action=\"hello\"&gt;\n    &lt;s:textfield name=\"userName\" label=\"Your name\" /&gt;\n    &lt;s:submit value=\"Submit\" /&gt;\n&lt;/s:form&gt;\n</code></pre> <p>\u89e3\u6790\u5f8c</p> <pre><code>&lt;form id=\"hello\" name=\"hello\" action=\"/Struts2Beginner/hello.action\" method=\"post\"&gt;\n    &lt;table class=\"wwFormTable\"&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;td class=\"tdLabel\"&gt;\n                    &lt;label for=\"hello_userName\" class=\"label\"&gt;Your name:&lt;/label&gt;\n                &lt;/td&gt;\n                &lt;td&gt;\n                    &lt;input type=\"text\" name=\"userName\" value=\"\" id=\"hello_userName\"&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td colspan=\"2\"&gt;\n                    &lt;div align=\"right\"&gt;\n                        &lt;input type=\"submit\" id=\"hello_0\" value=\"Submit\"&gt;\n                    &lt;/div&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"struts-tags/#-textfield","title":"- textfield","text":"<pre><code>&lt;s:textfield name=\"userName\" label=\"Your name\" /&gt;\n</code></pre>"},{"location":"struts-tags/#-dropdown","title":"- dropdown","text":"<p>\u89e3\u6790\u524d</p> <pre><code>&lt;s:select label=\"Select Fruit\" name=\"fruit\" list=\"#{'apple':'Apple', 'banana':'Banana', 'orange':'Orange'}\" /&gt;\n</code></pre>  <p>The <code>#{'apple':'Apple', 'banana':'Banana', 'orange':'Orange'}</code> is an EL expression. It represents a HashMap where the keys are the option values and the values are the option labels for the select dropdown</p>  <p>\u89e3\u6790\u5f8c</p> <pre><code>&lt;label for=\"fruit\" class=\"label\"&gt;Select Fruit:&lt;/label&gt;\n&lt;select name=\"fruit\" id=\"fruit\"&gt;\n    &lt;option value=\"apple\"&gt;Apple&lt;/option&gt;\n    &lt;option value=\"banana\"&gt;Banana&lt;/option&gt;\n    &lt;option value=\"orange\"&gt;Orange&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>"},{"location":"struts-tags/#-radio","title":"- radio","text":"<p>\u89e3\u6790\u524d</p> <pre><code>&lt;s:radio label=\"Select Gender\" name=\"gender\" list=\"#{'male':'Male', 'female':'Female'}\" value=\"female\" /&gt;\n</code></pre> <p>\u89e3\u6790\u5f8c</p> <pre><code>\n&lt;label for=\"gender\" class=\"label\"&gt;Select Gender:&lt;/label&gt;\n&lt;input type=\"radio\" name=\"gender\" id=\"gendermale\" value=\"male\"&gt;\n&lt;label for=\"gendermale\"&gt;Male&lt;/label&gt;\n&lt;input type=\"radio\" name=\"gender\" id=\"genderfemale\" value=\"female\"&gt;&lt;label for=\"genderfemale\"&gt;Female&lt;/label&gt;\n</code></pre>"},{"location":"struts-tags/#-checkbox","title":"- checkbox","text":"<p>\u89e3\u6790\u524d</p> <pre><code>&lt;s:checkbox label=\"checkbox test\" name=\"checkboxField1\" value=\"aBoolean\" fieldValue=\"true\"/&gt;\n</code></pre> <p>\u89e3\u6790\u5f8c</p> <pre><code>&lt;input type=\"checkbox\" name=\"checkboxField1\" value=\"true\" checked=\"checked\" /&gt;\n</code></pre>"},{"location":"struts-tags/#-","title":"- \u65e5\u671f\u3001\u6578\u5b57","text":"<pre><code>&lt;s:textfield name=\"birthday\" label=\"Birthday\" type=\"date\" /&gt;\n&lt;s:textfield name=\"age\" label=\"Age\" type=\"number\" /&gt;\n</code></pre>"},{"location":"struts-tags/#url","title":"URL","text":""},{"location":"struts-tags/#-_1","title":"- \u57fa\u672c","text":"<p> \u6703\u5c07\u61c9\u7528\u7a0b\u5f0f\u7684\u540d\u7a31\u5beb\u9032\u53bb\uff0c\u4ee5\u6b63\u78ba\u5f9e\u6839\u76ee\u9304\u53bb\u5c0b\u627eAction\u6216\u9801\u9762\u3002 <p>\u89e3\u6790\u524d</p> <pre><code>&lt;a href=\"&lt;s:url action='hello'/&gt;\"&gt;Hello World&lt;/a&gt;\n</code></pre> <p>\u89e3\u6790\u5f8c</p> <pre><code>&lt;a href=\"/Struts2Beginner/hello.action\"&gt;Hello World&lt;/a&gt;\n</code></pre>"},{"location":"struts-tags/#-_2","title":"- \u5e36\u6709\u8acb\u6c42\u53c3\u6578","text":"<p>\u89e3\u6790\u524d</p> <pre><code>&lt;s:url action=\"hello\" var=\"helloLink\"&gt;\n    &lt;s:param name=\"userName\"&gt;aweit&lt;/s:param&gt;\n&lt;/s:url&gt;\n&lt;p&gt;&lt;a href=\"${helloLink}\"&gt;\u5e36\u6709\u8acb\u6c42\u53c3\u6578\u7684\u9023\u7d50&lt;/a&gt;&lt;/p&gt;\n</code></pre> <p>\u89e3\u6790\u5f8c</p> <pre><code>&lt;a href=\"/Struts2Beginner/hello.action?userName=%E9%98%BF%E5%81%89\"&gt;\u5e36\u6709\u8acb\u6c42\u53c3\u6578\u7684\u9023\u7d50&lt;/a&gt;\n</code></pre>"},{"location":"struts-tags/#table","title":"table","text":"<p>JSP</p> <pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th&gt;First Name&lt;/th&gt;\n        &lt;th&gt;Last Name&lt;/th&gt;\n        &lt;th&gt;E-mail&lt;/th&gt;\n        &lt;th&gt;Age&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;s:iterator value=\"items\"&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;s:property value=\"firstName\" /&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;s:property value=\"lastName\" /&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;s:property value=\"email\" /&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;s:property value=\"age\" /&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/s:iterator&gt;\n&lt;/table&gt;\n</code></pre> <p>Action</p> <pre><code>@Namespace(\"/\")\n@Results(value = { \n    @Result(name = \"hello\", location = \"/WEB-INF/jsp/hello.jsp\") ,\n    @Result(name = \"goodbye\", location = \"/WEB-INF/jsp/goodbye.jsp\") \n})\n@Data\npublic class HelloAction extends ActionSupport {\n\n    private List&lt;Person&gt; items;\n\n    @Action(value = \"hello\")\n    public String hello() {\n\n        items = new ArrayList();\n\n        items.add(new Person(\"aweit\",\"zhu\",\"a4192696@yahoo.com.tw\", 33));\n\n        return \"hello\";\n    }\n}\n</code></pre> <p>Person</p> <pre><code>@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class Person {\n    private String firstName;\n    private String lastName;\n    private String email;\n    private int age;\n}\n</code></pre>"},{"location":"struts-tags/#ulli","title":"ul\u3001li","text":"<p>\u7528 List \u53bb\u63a5</p> <pre><code>&lt;ul&gt;\n    &lt;s:iterator value=\"items\"&gt;\n        &lt;li style=\"text-align:left\"&gt;&lt;s:property value=\"firstName\" /&gt;&lt;/li&gt;\n    &lt;/s:iterator&gt;\n&lt;/ul&gt;\n</code></pre>  <p>\u7528 Map \u53bb\u63a5</p> <pre><code>&lt;ul&gt;\n  &lt;s:iterator value=\"itemsMap\" var=\"entry\"&gt;\n    &lt;li style=\"text-align:left\"&gt;\n      &lt;s:property value=\"#entry.key\" /&gt; - &lt;s:property value=\"#entry.value\" /&gt; in stock\n    &lt;/li&gt;\n  &lt;/s:iterator&gt;\n&lt;/ul&gt;\n</code></pre> <p>itemsMap</p> <pre><code>@Namespace(\"/\")\n@Results(value = { \n    @Result(name = \"hello\", location = \"/WEB-INF/jsp/hello.jsp\") ,\n    @Result(name = \"goodbye\", location = \"/WEB-INF/jsp/goodbye.jsp\") \n})\n@Data\npublic class HelloAction extends ActionSupport {\n\n    private Map itemsMap;\n\n    @Action(value = \"hello\")\n    public String hello() {\n\n        itemsMap = new HashMap();\n        itemsMap.put(\"Item 1\", 5.99);\n        itemsMap.put(\"Item 2\", 9.99);\n        itemsMap.put(\"Item 3\", 2.99);\n\n        return \"hello\";\n    }\n}\n</code></pre>"},{"location":"struts-tags/#_2","title":"\u5176\u4ed6","text":""},{"location":"struts-tags/#-poperty","title":"- Poperty","text":"<pre><code>// bean \u4e2d\u7684\u5c6c\u6027 \u65b9\u5f0f\n&lt;s:property value=\"messageStore.message\" /&gt;\n\n// \u5c6c\u6027\u65b9\u5f0f\n&lt;s:property value=\"message\" /&gt;\n</code></pre>"},{"location":"struts-tags/#-if","title":"- if","text":"<p>JSP</p> <pre><code>&lt;s:if test=\"person.admin\"&gt;\n    &lt;div&gt;Admin&lt;/div&gt;\n&lt;/s:if&gt;\n&lt;s:elseif test=\"!person.admin\"&gt;\n    &lt;div&gt;User&lt;/div&gt;\n&lt;/s:elseif&gt;\n&lt;s:else&gt;\n    &lt;div&gt;Non User&lt;/div&gt;\n&lt;/s:else&gt;\n</code></pre> <p><code>%{}</code>: The <code>%{}</code> syntax is used to evaluate an expression in Struts tags. It allows you to access properties, invoke methods, and perform other operations on objects.</p> <p>Action</p> <pre><code>@Namespace(\"/\")\n@Results(value = { @Result(name = \"hello\", location = \"/WEB-INF/jsp/hello.jsp\")})\n@Data\npublic class HelloAction extends ActionSupport {\n\n    Person person;\n\n    @Action(value = \"hello\")\n    public String hello() {\n        person = new Person(\"aweit\", \"zhu\", \"a4192696@yahoo.com.tw\", 33, true);\n        return \"hello\";\n    }\n}\n</code></pre> <p>Person</p> <pre><code>@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class Person {\n    private String firstName;\n    private String lastName;\n    private String email;\n    private int age;\n    private boolean admin;\n}\n</code></pre>"},{"location":"struts-valuestack/","title":"Struts2 + ValueStack + Form Validate","text":""},{"location":"struts-valuestack/#struts2-valuestack-form-validate","title":"Struts2 + ValueStack + Form Validate","text":""},{"location":"struts-valuestack/#valuestack","title":"ValueStack","text":"<ol> <li>\u89c0\u5ff5\uff1a</li> </ol>  <p>\u53c3\u8003\u8cc7\u6599\uff1ahttps://blog.csdn.net/qq_44757034/article/details/106838688</p> <ol> <li>\u7bc4\u4f8b\uff1a</li> </ol> <p>Action</p> <pre><code>@Namespace(\"/\")\n@Results(value = { \n    @Result(name = \"hello\", location = \"/WEB-INF/jsp/hello.jsp\") ,\n    @Result(name = \"goodbye\", location = \"/WEB-INF/jsp/goodbye.jsp\") \n})\n@Data\npublic class HelloAction extends ActionSupport {\n\n    private String paramName;\n\n    @Action(value = \"hello\")\n    public String hello() {\n\n        // Root\n        ActionContext.getContext().getValueStack().set(\"name\", \"root-ABC\");\n\n        // Request\n        ServletActionContext.getRequest().setAttribute(\"name\", \"request-ABC\");\n\n        // Request Session\n        ServletActionContext.getRequest().getSession().setAttribute(\"name\", \"session-ABC\");\n\n        // Servlet Context\n        ServletActionContext.getServletContext().setAttribute(\"name\", \"servlet context-ABC\");\n\n        return \"hello\";\n    }\n}\n</code></pre> <p>JSP</p> <pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%&gt;\n&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\nAction \u5c6c\u6027\uff1a&lt;s:property value=\"paramName\" /&gt;\n&lt;br&gt;\n\u8acb\u6c42\u53c3\u6578\uff1a&lt;s:property value=\"#parameters.paramName\" /&gt;\n&lt;br&gt;\n\u8acb\u6c42\u5c6c\u6027\uff1a&lt;s:property value=\"#request.name\" /&gt;\n&lt;br&gt;\n\u8acb\u6c42\u5c6c\u6027\uff1a&lt;s:property value=\"#attr.name\" /&gt;\n&lt;br&gt;\n\u8acb\u6c42\u6703\u8a71\u5c6c\u6027\uff1a&lt;s:property value=\"#session.name\" /&gt;\n&lt;br&gt;\n\u4e0a\u4e0b\u6587\u5c6c\u6027\uff1a&lt;s:property value=\"#application.name\" /&gt;\n</code></pre>"},{"location":"struts-valuestack/#_1","title":"\u8acb\u6c42\u53c3\u6578","text":"<ol> <li>Action\uff1a\u53ea\u8981\u6709 @Data \u6a19\u8a3b\uff0cS2 \u6703\u81ea\u52d5\u4f9d\u7167\u8acb\u6c42\u53c3\u6578\u7684\u540d\u7a31\uff0c\u5c0d\u61c9\u5230 Action \u5c6c\u6027\u540d\u7a31\u76f8\u7b26\u7684\u5c6c\u6027\u3002</li> </ol> <pre><code>@Namespace(\"/\")\n@Results(value = { \n    @Result(name = \"hello\", location = \"/WEB-INF/jsp/hello.jsp\") ,\n    @Result(name = \"goodbye\", location = \"/WEB-INF/jsp/goodbye.jsp\") \n})\n@Data\npublic class HelloAction extends ActionSupport {\n\n    private String paramName;\n\n    @Action(value = \"hello\")\n    public String hello() {\n        System.out.println(paramName);\n        return \"hello\";\n    }\n}\n</code></pre> <ol> <li>JSP\uff1a</li> </ol> <pre><code>&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\n&lt;s:property value=\"paramName\" /&gt;\n</code></pre> <ol> <li>Test\uff1a http://localhost:8080/Struts2Beginner/hello?paramName=ABC</li> </ol>"},{"location":"struts-valuestack/#validate-form","title":"Validate Form","text":"<p>\u53ea\u8981\u5728 Action \u4e2d \u65b0\u589e\u4e00\u500b validate \u65b9\u6cd5\uff0c\u628a\u8981\u9a57\u8b49\u7684\u908f\u8f2f\u5beb\u9032\u53bb\u3002\u9019\u6a23\u6bcf\u4e00\u6b21 Action \u7684\u8acb\u6c42\uff0c\u90fd\u6703\u5148\u7d93\u904e validate \u65b9\u6cd5\uff0c\u5982\u679c\u6709\u932f\u8aa4\uff0c\u5247\u5c07\u8a0a\u606f\u900f\u904e addFieldError \u9019\u7a2e\u7d00\u9304\u4e0b\u4f86\u3002\u5982\u679c\u6c92\u6709\u932f\u8aa4\uff0c\u5247\u6703\u63a5\u8457\u547c\u53eb execute \u65b9\u6cd5\uff0c\u9032\u800c\u4f86\u5230 View \u7684 JSP\u3002</p> <p>1\u3001Action</p> <pre><code>import org.apache.commons.lang3.StringUtils;\nimport org.apache.commons.validator.routines.EmailValidator;\nimport org.apache.struts2.convention.annotation.Action;\nimport org.apache.struts2.convention.annotation.Namespace;\nimport org.apache.struts2.convention.annotation.Result;\nimport org.apache.struts2.convention.annotation.Results;\n\nimport com.example.struts.model.Person;\nimport com.opensymphony.xwork2.ActionSupport;\n\nimport lombok.Data;\n\n@Data\n@Namespace(\"/\")\n@Action(value = \"register\")\n@Results(value = { \n        @Result(name = \"success\", location = \"/thankyou.jsp\"),\n        @Result(name = \"input\", location = \"/register.jsp\"),}\n)\npublic class RegisterAction extends ActionSupport {\n\n    private Person person;\n\n    public String execute() throws Exception {\n        return SUCCESS;\n    }\n\n    public void validate() {\n\n        if (person == null || person.getFirstName().length() == 0) {\n            addFieldError(\"person.firstName\", \"First name is required.\");\n        }\n\n        if (person == null || person.getEmail().length() == 0) {\n            addFieldError(\"person.email\", \"Email is required.\");\n        }\n\n        if (person != null &amp;&amp; !StringUtils.isEmpty(person.getEmail())) {\n            boolean isValid = EmailValidator.getInstance().isValid(person.getEmail());\n            if(!isValid) {\n                addFieldError(\"person.email\", \"Email is invalided.\");\n            }\n        }\n\n        if (person == null || person.getAge() &lt; 18) {\n            addFieldError(\"person.age\", \"Age is required and must be 18 or older\");\n        }\n    }\n}\n\n</code></pre> <ol> <li>JSP\uff1a\u3001\u3001  <p>(\u4e0d\u52a0\u5165MDB)</p> <pre><code>&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\n&lt;h1&gt;Registration Form&lt;/h1&gt;\n&lt;s:form action=\"register\"&gt;\n    &lt;s:textfield name=\"person.firstName\" label=\"First Name\" /&gt;\n    &lt;s:textfield name=\"person.lastName\" label=\"Last Name\" /&gt;\n    &lt;s:textfield name=\"person.email\" label=\"Email\" /&gt;\n    &lt;s:textfield name=\"person.age\" label=\"Age\" type=\"number\" /&gt;\n    &lt;s:submit value=\"Register\" /&gt;\n&lt;/s:form&gt;\n&lt;s:fielderror fieldName=\"person.firstName\" cssClass=\"error\" /&gt;\n&lt;s:fielderror fieldName=\"person.lastName\" cssClass=\"error\" /&gt;\n&lt;s:fielderror fieldName=\"person.email\" cssClass=\"error\" /&gt;\n&lt;s:fielderror fieldName=\"person.age\" cssClass=\"error\" /&gt;\n</code></pre> <p>(\u52a0\u5165 MDB)</p> <pre><code>&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\n&lt;div class=\"d-flex justify-content-center\"&gt;\n    &lt;div style=\"width: 300px;\"&gt;\n        &lt;h2&gt;Registration Form&lt;/h2&gt;\n        &lt;s:form action=\"register\" theme=\"simple\"&gt;\n            &lt;s:fielderror fieldName=\"person.firstName\" cssClass=\"error small-red-text\"/&gt;\n            &lt;div class=\"form-outline my-2\"&gt;\n                &lt;s:textfield name=\"person.firstName\" cssClass=\"form-control\" id=\"firstName\" required=\"true\"/&gt;\n                &lt;label class=\"form-label\" for=\"firstName\" style=\"\"&gt;First Name&lt;/label&gt;\n            &lt;/div&gt;\n\n            &lt;s:fielderror fieldName=\"person.lastName\" cssClass=\"error small-red-text\"/&gt;\n            &lt;div class=\"form-outline my-2\"&gt;\n                &lt;s:textfield name=\"person.lastName\" cssClass=\"form-control\" id=\"lastName\" required=\"true\"/&gt;\n                &lt;label class=\"form-label\"  for=\"lastName\" style=\"\"&gt;Last Name&lt;/label&gt;\n            &lt;/div&gt;\n\n            &lt;s:fielderror fieldName=\"person.email\" cssClass=\"error small-red-text\"/&gt;\n            &lt;div class=\"form-outline my-2\"&gt;\n                &lt;s:textfield name=\"person.email\" cssClass=\"form-control\" id=\"email\" type=\"email\"/&gt;\n                &lt;label class=\"form-label\" for=\"email\" style=\"\"&gt;Email&lt;/label&gt;\n            &lt;/div&gt;\n\n            &lt;s:fielderror fieldName=\"person.age\" cssClass=\"error small-red-text\"/&gt;\n            &lt;div class=\"form-outline my-2\"&gt;\n                &lt;s:textfield name=\"person.age\" cssClass=\"form-control\" id=\"age\" type=\"number\" /&gt;\n                &lt;label class=\"form-label\" for=\"age\" style=\"\"&gt;Age&lt;/label&gt;\n            &lt;/div&gt;\n            &lt;button type=\"submit\" class=\"btn btn-primary btn-block my-2\"&gt;Register&lt;/button&gt;\n        &lt;/s:form&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>CSS</p> <pre><code>.error {\n    color: red;\n}\n\n.small-red-text {\n    font-size: 11px;\n    text-align: left;\n    margin-left: 10px !important;\n}\n\nul.error {\n    list-style-type: none;\n    padding-left: 0;\n    margin: 0%;\n\n}\n</code></pre> <ol> <li>Test\uff1a</li> </ol> <p>(1) \u7b2c\u4e00\u6b21\u4e0d\u7528\u986f\u793a\u932f\u8aa4\u8a0a\u606f\uff0c\u6240\u4ee5\u76f4\u63a5\u5b58\u53d6\u8a72JSP</p> <p>http://localhost:8080/Struts2Beginner/register.jsp</p>  <p>(2) \u76f4\u63a5\u6309\u4e0b\u63d0\u4ea4\uff0c\u756b\u9762\u6703\u986f\u793a\u932f\u8aa4\u8a0a\u606f\u3002</p>  <p>(3) \u6b04\u4f4d\u63a5\u8f38\u5165\u5f8c\uff0c\u4e14\u901a\u904e\u6aa2\u67e5\u5f8c\uff0c\u624d\u6703\u986f\u793a\u6b63\u78ba\u9801\u9762\u3002</p>"},{"location":"thread/","title":"Java Thread & Thread Pool","text":""},{"location":"thread/#thread","title":"Thread","text":""},{"location":"thread/#_1","title":"\u53c3\u8003\u8cc7\u6599\uff1a","text":"<ol> <li> <p>https://rickbsr.medium.com/%E6%B7%BA%E8%AB%87-java-%E5%9F%B7%E8%A1%8C%E7%B7%92%E7%9A%84%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F%E8%88%87%E7%8B%80%E6%85%8B-cfc4f1e10c77</p> </li> <li> <p>https://litotom.com/java-thread-priority-synchronized/</p> </li> <li> <p>https://openhome.cc/Gossip/JavaGossip-V2/WaitNotify.htm </p> </li> </ol>"},{"location":"thread/#1cpuprocess","title":"1CPU\u8207\u591a\u500bProcess","text":"<p>\u4e00\u500b\u61c9\u7528\u7a0b\u5f0f\u6216\u884c\u7a0b\uff08Process\uff09\u53ef\u4ee5\u5411\u4f5c\u696d\u7cfb\u7d71\u53d6\u5f97\u591a\u500b\u57f7\u884c\u7dd2\uff08threads\uff09\uff0c\u591a\u500b\u57f7\u884c\u7dd2\u53ef\u4ee5\u6a21\u64ec\u51fa\u5e73\u884c\u8655\u7406\u7684\u6548\u679c\u3002\u4e00\u500b\u5177\u5099\u55ae\u4e00\uff08\u6b64\u8655\u7684CPU\u50c5\u8003\u616e\u55ae\u6838\u5fc3\uff09\u7684\u7cfb\u7d71\uff0c\u4e8b\u5be6\u4e0a\u540c\u4e00\u6642\u9593\u53ea\u80fd\u57f7\u884c\u4e00\u4ef6\u4e8b\uff0c\u4f46\u5982\u679c\u5c07\u4e00\u500b CPU \u7684\u57f7\u884c\u6642\u9593\u5207\u5272\u70ba\u5f88\u5c0f\u7684\u55ae\u4f4d\uff0c\u5c07\u9019\u4e9b\u55ae\u4f4d\u5206\u7d66\u591a\u500b\u884c\u7a0b\u53bb\u4f7f\u7528\uff0c\u5c31\u53ef\u4ee5\u6a21\u64ec\u51fa\u591a\u5de5\uff08multi-task\uff09\u7684\u6548\u679c</p>  <p>\u5373\uff1a1 \u500b Process \u4e5f\u53ef\u4ee5\u5c0d\u61c9\u5230\u591a\u500b Thread (\u57f7\u884c\u7dd2) (main \u65b9\u6cd5\u5e95\u4e0b\uff0c\u53ef\u4ee5\u6a21\u64ec\u51fa\u4e0d\u540c\u591a\u57f7\u884c\u7dd2\u7684\u65b9\u5f0f)\u3002</p>"},{"location":"thread/#java","title":"\u5982\u4f55\u5728Java\u5b9a\u7fa9\u57f7\u884c\u7dd2\u4e26\u555f\u52d5","text":"<p>\u7528 implements Runnable \u6bd4\u8f03\u597d\uff0c\u56e0\u70ba\u5982\u679c\u7528 extends Thread \u7684\u8a71\uff0c\u6703\u53d7\u5230 Java \u7269\u4ef6\u53ea\u80fd\u7e7c\u6210\u4e00\u500b\u985e\u5225\u7684\u9650\u5236\u3002</p> <pre><code>public class DemoRunner implements Runnable {\n\n    @Override\n    public void run() {\n        int h = 0;\n        for (int i = 0; i &lt; 5000; i++) {\n            h++;\n            System.out.println(h);\n        }\n    }\n\n}\n</code></pre> <p>\u57f7\u884c\u4e00\u500b Runner</p> <pre><code>public class DemoExecute {\n\n    public static void main(String[] args) {\n\n        DemoRunner runner = new DemoRunner();\n\n        Thread thread = new Thread(runner);\n\n        thread.start();\n\n    }\n}\n</code></pre>"},{"location":"thread/#thread_1","title":"\u57f7\u884c\u7dd2(Thread)\u76f8\u95dc\u6982\u5ff5","text":""},{"location":"thread/#_2","title":"\u57f7\u884c\u7dd2","text":"<ol> <li> <p>start: \u5c07\u57f7\u884c\u7dd2\u7269\u4ef6\uff0c\u653e\u5165 Runnable\uff0c\u7b49\u5f85 Java \u7a0b\u5e8f\u5b89\u6392\u57f7\u884c\u3002</p> </li> <li> <p>join\uff1a\u7576\u57f7\u884c\u7dd2\u7269\u4ef6\u547c\u53eb join()\u65b9\u6cd5\u6642\uff0c\u8868\u793a\u544a\u8a34 Java \u7a0b\u5e8f\uff0c\u9700\u8981\u7b49\u5230\u6240\u6709\u57f7\u884c\u7dd2\u7269\u4ef6(\u5305\u542b\uff1a\u4e3b\u57f7\u884c\u7dd2\u3001\u5b50\u57f7\u884c\u7dd2)\u7686\u5b8c\u6210\u5f8c\uff0c\u624d\u6703\u7e7c\u7e8c\u9032\u884c\u3002</p> </li> <li> <p>sleep\uff1a\u7576\u57f7\u884c\u7dd2\u7269\u4ef6\u547c\u53eb sleep()\u65b9\u6cd5\u6642\uff0c\u8868\u793a\u8981\u8b93\u81ea\u8eab\u7684\u57f7\u884c\u7dd2\u9032\u5165 Blocked \u72c0\u614b\uff0c\u4e26\u4e14\u8b93\u51fa\u8cc7\u6e90\uff0c\u7d66\u5176\u4ed6\u57f7\u884c\u7dd2\u5148\u884c\u57f7\u884c\u3002</p> </li> <li> <p>yield\uff1a\u7576\u57f7\u884c\u7dd2\u7269\u4ef6\u547c\u53eb yield() \u65b9\u6cd5\u6642\uff0c\u8868\u793a\u8981\u8b93\u81ea\u8eab\u7684\u57f7\u884c\u7dd2\u9032\u5165 Runnable \u72c0\u614b\uff0c\u7b49\u5f85\u8457 Java \u7a0b\u5e8f\u9032\u884c\u5206\u914d\u3002</p> </li> </ol>"},{"location":"thread/#_3","title":"\u7269\u4ef6","text":"<ol> <li>synchronized \uff1a \u5206\u6210\u540c\u6b65\u65b9\u6cd5\u6216\u540c\u6b65\u5340\u584a\u3002\u8868\u793a\u540c\u4e00\u6642\u9593\uff0c\u53ea\u80fd\u6709\u4e00\u500b\u57f7\u884c\u7dd2\u4f7f\u7528\u6b64\u65b9\u6cd5\u6216\u7269\u4ef6\u3002\u9700\u8981\u7b49\u5230\u4e00\u500b\u57f7\u884c\u7dd2\u57f7\u884c\u5b8c\u7562\u5f8c\uff0c\u624d\u80fd\u8b93\u53e6\u4e00\u500b\u57f7\u884c\u7dd2\u64cd\u4f5c\u6b64\u7269\u4ef6\u6216\u65b9\u6cd5\u3002</li> </ol> <p>\u5728Java\u4e2d\uff0c\u6709\u5169\u7a2e\u985e\u578b\u7684\u9396\u53ef\u4ee5\u7528\u65bc\u5be6\u73fe\u7dda\u7a0b\u540c\u6b65 - \u5c0d\u8c61\u7d1a\u9396\u548c\u985e\u7d1a\u9396\u3002</p> <p>\u540c\u6b65\u65b9\u6cd5\uff1a</p> <pre><code>public synchronized void methodName() {\n\n\n}\n</code></pre> <p>\u540c\u6b65\u5340\u584a\uff1a</p> <pre><code>synchronized( \u7269\u4ef6 ){\n\n} \n</code></pre> <p>\u4f8b\u59821\uff1a</p> <p>Sender\u7269\u4ef6\uff0c\u5c08\u65bc\u8ca0\u8cac\u5bc4\u9001\u8a0a\u606f\u7684\u3002\u5047\u8a2d\u540c\u4e00\u6642\u9593\u53ea\u80fd\u4e00\u500b\u57f7\u884c\u7dd2\uff0c\u9032\u884c\u5bc4\u9001\u8a0a\u606f\u7684\u4efb\u52d9\u3002</p> <p>Sender</p> <pre><code>public class Sender {\n    public void send(String msg) {\n        System.out.println(\"Sending\\t\" + msg);\n        try {\n            Thread.sleep(1000);\n        } catch (Exception e) {\n            System.out.println(\"Thread  interrupted.\");\n        }\n        System.out.println(\"\\n\" + msg + \"Sent\");\n    }\n}\n</code></pre> <p>ThreadedSend</p> <pre><code>public class ThreadedSend extends Thread {\n\n    private String msg;\n\n    Sender sender;\n\n    ThreadedSend(String m, Sender obj) {\n        msg = m;\n        sender = obj;\n    }\n\n    public void run() {\n        synchronized (sender) {\n            sender.send(msg);\n        }\n    }\n}\n\n</code></pre> <p>SyncDemo</p> <pre><code>public class SyncDemo {\n\n    public static void main(String args[]) {\n        Sender send = new Sender();\n        ThreadedSend S1 = new ThreadedSend(\" Hi \", send);\n        ThreadedSend S2 = new ThreadedSend(\" Bye \", send);\n\n        // Start two threads of ThreadedSend type\n        S1.start();\n        S2.start();\n\n        // wait for threads to end\n        try {\n            S1.join();\n            S2.join();\n        } catch (Exception e) {\n            System.out.println(\"Interrupted\");\n        }\n    }\n}\n</code></pre> <p>Output: \u6bcf\u6b21\u7d50\u679c\u90fd\u6703\u9019\u6a23\u3002</p> <pre><code>Sending  Hi \n\n Hi Sent\nSending  Bye \n\n Bye Sent\n\n</code></pre> <p>\u5982\u679c\u6211\u4e0d\u9396\u5b9a\u7269\u4ef6\uff0c\u6703\u51fa\u73fe\u4ec0\u9ebc\u60c5\u6cc1\uff1a</p> <p>ThreadedSend</p> <pre><code>public class ThreadedSend extends Thread {\n\n    private String msg;\n\n    Sender sender;\n\n    ThreadedSend(String m, Sender obj) {\n        msg = m;\n        sender = obj;\n    }\n\n    public void run() {\n        sender.send(msg);\n    }\n}\n\n</code></pre> <p>Output\uff1a\u6bcf\u500b\u57f7\u884c\u7dd2\u90fd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8a72\u7269\u4ef6\u7684\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u6392\u968a\u7b49\u5019\u3002</p> <pre><code>Sending  Bye \nSending  Hi \n\n Bye Sent\n\n Hi Sent\n</code></pre> <p>\u4f8b\u59822\uff1a</p> <pre><code>\npublic class Account {\n\n    private int balance = 10000;\n    private String password;\n\n    private final Object balanceLock = new Object();\n    private final Object passwordLock = new Object();\n\n    // Withdraw money from account\n    int withdraw(int amt) {\n        synchronized (balanceLock) {\n            if (this.balance &gt; amt) {\n                this.balance -= amt;\n                return this.balance;\n            }\n            return 0;\n        }\n    }\n\n    // Check the balance\n    int getBalance() {\n        synchronized (passwordLock) {\n            return balance;\n        }\n    }\n\n    void transfer(Account source, int amt) {\n        synchronized (balanceLock) {\n            int money = source.withdraw(amt);\n            if (money &gt; 0)\n                this.balance += amt;\n        }\n    }\n\n    // Change the password\n    void updatePassword(String pw) {\n        synchronized (passwordLock) {\n            this.password = pw;\n        }\n    }\n\n    // Check the password\n    String getPassword() {\n        synchronized (passwordLock) {\n            return password;\n        }\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        final Account a1 = new Account();\n        final Account a2 = new Account();\n\n        Thread t1 = new Thread(() -&gt; {\n            a1.transfer(a2, 1000);\n        });\n\n        Thread t2 = new Thread(() -&gt; {\n            a1.updatePassword(\"new1234\");\n        });\n\n        t1.start();\n        t2.start();\n\n        Thread.sleep(1000);\n\n        System.out.println(a1.getBalance());\n        System.out.println(a2.getBalance());\n        System.out.println(a1.getPassword());\n    }\n}\n</code></pre> <ol> <li>wait\u3001notify\u3001notifyAll\uff1a\u5982\u679c\u6709\u57f7\u884c\u7dd2\u57f7\u884c\u5230\u5177\u6709 synchronized \u5730\u65b9\u6642\uff0c\u82e5\u56e0\u70ba\u67d0\u7a2e\u689d\u4ef6\u88ab\u8a72\u7269\u4ef6\u547c\u53eb\u4e86 wait() \u65b9\u6cd5\uff0c\u5247\u8a72\u57f7\u884c\u7dd2\u5c31\u6703\u88ab\u653e\u7f6e Blocked \u5340\u584a\u4e2d\u3002\u76f4\u5230\u8a72\u7269\u4ef6\u547c\u53eb\u4e86 notify()\u3001notifyAll() \u65b9\u6cd5\u5f8c\uff0c\u624d\u6703\u91cd\u65b0\u9032\u884c\u8a72\u57f7\u884c\u7dd2\u3002</li> </ol>"},{"location":"thread/#_4","title":"\u4f8b\u5b50\u8aaa\u660e\uff0c\u53ef\u53c3\u8003\uff1a","text":"<ol> <li>Java Gossip: wait()\u3001notify() https://openhome.cc/Gossip/JavaGossip-V2/WaitNotify.htm</li> </ol>"},{"location":"thread/#juc-javautilconcurrent","title":"JUC (java.util.concurrent \u7684\u7c21\u7a31)","text":"<p>Java Concurrency #12: JUC \u2014 \u5225\u8b93Thread\u5011\u5931\u63a7 Executor &amp; \u7dda\u7a0b\u6c60 https://medium.com/bucketing/java-concurrency-12-juc-%E5%88%A5%E8%AE%93thread%E5%80%91%E5%A4%B1%E6%8E%A7-executor-%E7%B7%9A%E7%A8%8B%E6%B1%A0-3f5688121d4b</p> <ol> <li>\u4e0a\u7a0b\u5f0f\uff0c\u770b\u5dee\u7570\uff1a</li> </ol> <p>Count</p> <pre><code>public class Count {\n    int cnt = 0;\n\n    void addctn() {\n        synchronized (this) {\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            cnt++;\n        }\n    }\n\n    int getctn() {\n        synchronized (this) {\n            return cnt;\n        }\n    }\n}\n\n</code></pre> <p>SimpleThread</p> <pre><code>public class SimpleThread {\n\n    public static void main(String[] args) throws InterruptedException {\n\n        Count t1 = new Count();\n\n        for (int i = 0; i &lt; 20; i++) {\n            Thread t = new Thread(() -&gt; {\n                String threadName = Thread.currentThread().getName();\n                System.out.println(\"run \" + threadName + \" thread\");\n                t1.addctn();\n            });\n            t.start();\n        }\n\n        Thread.sleep(1000);\n\n        System.out.println(t1.getctn());\n    }\n\n}\n\n---\nrun Thread-1 thread\nrun Thread-3 thread\nrun Thread-0 thread\nrun Thread-2 thread\nrun Thread-5 thread\nrun Thread-4 thread\nrun Thread-6 thread\nrun Thread-7 thread\nrun Thread-8 thread\nrun Thread-9 thread\nrun Thread-10 thread\nrun Thread-11 thread\nrun Thread-12 thread\nrun Thread-13 thread\nrun Thread-14 thread\nrun Thread-15 thread\nrun Thread-16 thread\nrun Thread-17 thread\nrun Thread-18 thread\nrun Thread-19 thread\n20\n\n</code></pre> <p>SimpleThreadPool</p> <pre><code>import java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n\npublic class SimpleThreadPool {\n\n    public static void main(String[] args) throws InterruptedException {\n\n        Count t1 = new Count();\n\n        ExecutorService executor = Executors.newFixedThreadPool(10);\n\n        for (int i = 0; i &lt; 20; i++) {\n            executor.execute(() -&gt; {\n                String threadName = Thread.currentThread().getName();\n                System.out.println(\"run \" + threadName + \" thread\");\n                t1.addctn();\n            });\n        }\n\n        executor.shutdown();\n        executor.awaitTermination(Long.MAX_VALUE, java.util.concurrent.TimeUnit.NANOSECONDS);\n\n        System.out.println(t1.getctn());\n    }\n}\n\n---\n\nrun pool-1-thread-1 thread\nrun pool-1-thread-3 thread\nrun pool-1-thread-2 thread\nrun pool-1-thread-5 thread\nrun pool-1-thread-4 thread\nrun pool-1-thread-6 thread\nrun pool-1-thread-7 thread\nrun pool-1-thread-8 thread\nrun pool-1-thread-9 thread\nrun pool-1-thread-10 thread\nrun pool-1-thread-1 thread\nrun pool-1-thread-10 thread\nrun pool-1-thread-9 thread\nrun pool-1-thread-8 thread\nrun pool-1-thread-7 thread\nrun pool-1-thread-6 thread\nrun pool-1-thread-4 thread\nrun pool-1-thread-5 thread\nrun pool-1-thread-2 thread\nrun pool-1-thread-3 thread\n20\n\n</code></pre> <ol> <li>\u539f\u56e0\uff1f</li> </ol> <p>(1) \u904e\u591a\u7684\u57f7\u884c\u7dd2\u6703\u8b93CPU\u6548\u7387\u5dee\u3002\u56e0\u6b64\u9700\u8981\u63a7\u5236\u57f7\u884c\u7dd2\u6578\u91cf\uff0c\u5373\u8acb\u4f7f\u7528\u57f7\u884c\u7dd2\u6c60\u3002</p> <ol> <li>ThreadPoolExecutor \u8207 Executors\uff1f</li> </ol> <p>(1) \u76f4\u63a5\u4f7f\u7528 Executors \u5373\u53ef\u3002</p>  <p>newFixedThreadPool core\u6578\u91cf\u8207max\u4e00\u6a23\uff0c\u4ee3\u8868\u5275\u5efa\u5f8c\u80fd\u57f7\u884c\u7684\u4efb\u52d9\u5c31\u662f\u9019\u6a23 \u4f7f\u7528 LinkedBlockingQueue\u7576\u4f5ctask\u5b58\u653e\u7684\u8cc7\u6599\u7d50\u69cb\uff0c\u6c92\u6709\u9650\u5236\u6578\u91cf\u4e00\u6a23\u6703\u6709OOM\u98a8\u96aa  <p>(2) \u4ecb\u7d39 ThreadPoolExecutor</p> <pre><code>public ThreadPoolExecutor(int corePoolSize,\n                          int maximumPoolSize,\n                          long keepAliveTime,\n                          TimeUnit unit,\n                          BlockingQueue&lt;Runnable&gt; workQueue,\n                          ThreadFactory threadFactory,\n                          RejectedExecutionHandler handler);\n</code></pre>"},{"location":"tiles/","title":"Struts2 + Apache Tiles","text":""},{"location":"tiles/#struts2-apache-tiles-mdb","title":"Struts2 + Apache Tiles + MDB","text":""},{"location":"tiles/#ui","title":"UI \u6846\u67b6","text":""},{"location":"tiles/#1-mdb-httpsmdbootstrapcom","title":"1. MDB: https://mdbootstrap.com/","text":""},{"location":"tiles/#2-tiles-httpswwwviralpatelnetstruts-2-tiles-plugin-tutorial-with-example-in-eclipse","title":"2. Tiles: https://www.viralpatel.net/struts-2-tiles-plugin-tutorial-with-example-in-eclipse/","text":""},{"location":"tiles/#_1","title":"\u7bc4\u4f8b","text":""},{"location":"tiles/#github","title":"Github \u7a0b\u5f0f\u78bc\uff1a","text":"<p>https://github.com/aweit-zhu/Struts2Beginner</p>"},{"location":"tiles/#pomxml","title":"pom.xml","text":"<pre><code>&lt;!-- Tiles2 --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;\n    &lt;artifactId&gt;struts2-tiles-plugin&lt;/artifactId&gt;\n    &lt;version&gt;2.3.8&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"tiles/#webxml","title":"web.xml","text":"<pre><code>&lt;!-- Tiles2 --&gt;\n&lt;listener&gt;\n    &lt;listener-class&gt;org.apache.struts2.tiles.StrutsTilesListener&lt;/listener-class&gt;\n&lt;/listener&gt;\n&lt;context-param&gt;\n    &lt;param-name&gt;tilesDefinitions&lt;/param-name&gt;\n    &lt;param-value&gt;/WEB-INF/tiles.xml&lt;/param-value&gt;\n&lt;/context-param&gt;\n</code></pre>"},{"location":"tiles/#tilesxml","title":"tiles.xml","text":"<pre><code>&lt;!DOCTYPE tiles-definitions PUBLIC\n    \"-//Apache Software Foundation//DTD Tiles Configuration 2.0//EN\"\n    \"http://tiles.apache.org/dtds/tiles-config_2_0.dtd\"&gt;\n\n&lt;tiles-definitions&gt;\n    &lt;definition name=\"baseLayout\" template=\"/WEB-INF/layouts/baseLayout.jsp\"&gt;\n        &lt;put-attribute name=\"title\" value=\"My Application\" /&gt;\n        &lt;put-attribute name=\"header\" value=\"/WEB-INF/layouts/header.jsp\" /&gt;\n        &lt;put-attribute name=\"body\" value=\"\" /&gt;\n        &lt;put-attribute name=\"footer\" value=\"/WEB-INF/layouts/footer.jsp\" /&gt;\n    &lt;/definition&gt;\n&lt;/tiles-definitions&gt;\n</code></pre>"},{"location":"tiles/#baselayoutjsp","title":"baseLayout.jsp","text":"<pre><code>&lt;%@ taglib prefix=\"tiles\" uri=\"http://tiles.apache.org/tags-tiles\"%&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;&lt;tiles:getAsString name=\"title\" /&gt;&lt;/title&gt;\n    &lt;!-- Font Awesome --&gt;\n    &lt;link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\" /&gt;\n    &lt;!-- Google Fonts --&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;display=swap\" rel=\"stylesheet\" /&gt;\n    &lt;!-- MDB --&gt;\n    &lt;link href=\"${pageContext.request.contextPath}/css/mdb.min.css\" rel=\"stylesheet\" /&gt;\n    &lt;!-- MDB --&gt;\n    &lt;script type=\"text/javascript\" src=\"${pageContext.request.contextPath}/js/mdb.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;tiles:insertAttribute name=\"header\" /&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;tiles:insertAttribute name=\"body\" /&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;tiles:insertAttribute name=\"footer\" /&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"tiles/#headerjsp","title":"header.jsp","text":"<pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%&gt;\n\n&lt;header&gt;\n    &lt;!-- Navbar --&gt;\n    &lt;nav class=\"navbar navbar-expand-lg navbar-light bg-white fixed-top\"&gt;\n        &lt;div class=\"container-fluid\"&gt;\n            &lt;button class=\"navbar-toggler\" type=\"button\"\n                data-mdb-toggle=\"collapse\" data-mdb-target=\"#navbarExample01\"\n                aria-controls=\"navbarExample01\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"&gt;\n                &lt;i class=\"fas fa-bars\"&gt;&lt;/i&gt;\n            &lt;/button&gt;\n            &lt;div class=\"collapse navbar-collapse\" id=\"navbarExample01\"&gt;\n                &lt;ul class=\"navbar-nav me-auto mb-2 mb-lg-0\"&gt;\n                    &lt;li class=\"nav-item active\"&gt;&lt;a class=\"nav-link\" aria-current=\"page\" href=\"${pageContext.request.contextPath}/hello\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n                    &lt;li class=\"nav-item\"&gt;&lt;a class=\"nav-link\" href=\"${pageContext.request.contextPath}/admin/index\"&gt;Caculate&lt;/a&gt;&lt;/li&gt;\n                    &lt;li class=\"nav-item\"&gt;&lt;a class=\"nav-link\" href=\"#\"&gt;Pricing&lt;/a&gt;&lt;/li&gt;\n                    &lt;li class=\"nav-item\"&gt;&lt;a class=\"nav-link\" href=\"#\"&gt;About&lt;/a&gt;&lt;/li&gt;\n                &lt;/ul&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/nav&gt;\n&lt;/header&gt;\n</code></pre>"},{"location":"tiles/#footerjsp","title":"footer.jsp","text":"<pre><code>&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%&gt;\n\n&lt;!-- Footer --&gt;\n&lt;footer class=\"text-center text-lg-start bg-light text-muted\"&gt;\n    &lt;!-- Section: Social media --&gt;\n    &lt;section\n        class=\"d-flex justify-content-center justify-content-lg-between p-4 border-bottom\"&gt;\n        &lt;!-- Left --&gt;\n        &lt;div class=\"me-5 d-none d-lg-block\"&gt;\n            &lt;span&gt;Get connected with us on social networks:&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;!-- Left --&gt;\n\n        &lt;!-- Right --&gt;\n        &lt;div&gt;\n            &lt;a href=\"\" class=\"me-4 text-reset\"&gt; &lt;i class=\"fab fa-facebook-f\"&gt;&lt;/i&gt;\n            &lt;/a&gt; &lt;a href=\"\" class=\"me-4 text-reset\"&gt; &lt;i class=\"fab fa-twitter\"&gt;&lt;/i&gt;\n            &lt;/a&gt; &lt;a href=\"\" class=\"me-4 text-reset\"&gt; &lt;i class=\"fab fa-google\"&gt;&lt;/i&gt;\n            &lt;/a&gt; &lt;a href=\"\" class=\"me-4 text-reset\"&gt; &lt;i class=\"fab fa-instagram\"&gt;&lt;/i&gt;\n            &lt;/a&gt; &lt;a href=\"\" class=\"me-4 text-reset\"&gt; &lt;i class=\"fab fa-linkedin\"&gt;&lt;/i&gt;\n            &lt;/a&gt; &lt;a href=\"\" class=\"me-4 text-reset\"&gt; &lt;i class=\"fab fa-github\"&gt;&lt;/i&gt;\n            &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;!-- Right --&gt;\n    &lt;/section&gt;\n    &lt;!-- Section: Social media --&gt;\n\n    &lt;!-- Section: Links  --&gt;\n    &lt;section class=\"\"&gt;\n        &lt;div class=\"container text-center text-md-start mt-5\"&gt;\n            &lt;!-- Grid row --&gt;\n            &lt;div class=\"row mt-3\"&gt;\n                &lt;!-- Grid column --&gt;\n                &lt;div class=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\"&gt;\n                    &lt;!-- Content --&gt;\n                    &lt;h6 class=\"text-uppercase fw-bold mb-4\"&gt;\n                        &lt;i class=\"fas fa-gem me-3\"&gt;&lt;/i&gt;Company name\n                    &lt;/h6&gt;\n                    &lt;p&gt;Here you can use rows and columns to organize your footer\n                        content. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                    &lt;/p&gt;\n                &lt;/div&gt;\n                &lt;!-- Grid column --&gt;\n\n                &lt;!-- Grid column --&gt;\n                &lt;div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\"&gt;\n                    &lt;!-- Links --&gt;\n                    &lt;h6 class=\"text-uppercase fw-bold mb-4\"&gt;Products&lt;/h6&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;Angular&lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;React&lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;Vue&lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;Laravel&lt;/a&gt;\n                    &lt;/p&gt;\n                &lt;/div&gt;\n                &lt;!-- Grid column --&gt;\n\n                &lt;!-- Grid column --&gt;\n                &lt;div class=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\"&gt;\n                    &lt;!-- Links --&gt;\n                    &lt;h6 class=\"text-uppercase fw-bold mb-4\"&gt;Useful links&lt;/h6&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;Pricing&lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;Settings&lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;Orders&lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;a href=\"#!\" class=\"text-reset\"&gt;Help&lt;/a&gt;\n                    &lt;/p&gt;\n                &lt;/div&gt;\n                &lt;!-- Grid column --&gt;\n\n                &lt;!-- Grid column --&gt;\n                &lt;div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\"&gt;\n                    &lt;!-- Links --&gt;\n                    &lt;h6 class=\"text-uppercase fw-bold mb-4\"&gt;Contact&lt;/h6&gt;\n                    &lt;p&gt;\n                        &lt;i class=\"fas fa-home me-3\"&gt;&lt;/i&gt; New York, NY 10012, US\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;i class=\"fas fa-envelope me-3\"&gt;&lt;/i&gt; info@example.com\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;i class=\"fas fa-phone me-3\"&gt;&lt;/i&gt; + 01 234 567 88\n                    &lt;/p&gt;\n                    &lt;p&gt;\n                        &lt;i class=\"fas fa-print me-3\"&gt;&lt;/i&gt; + 01 234 567 89\n                    &lt;/p&gt;\n                &lt;/div&gt;\n                &lt;!-- Grid column --&gt;\n            &lt;/div&gt;\n            &lt;!-- Grid row --&gt;\n        &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;!-- Section: Links  --&gt;\n\n    &lt;!-- Copyright --&gt;\n    &lt;div class=\"text-center p-4\"\n        style=\"background-color: rgba(0, 0, 0, 0.05);\"&gt;\n        \u00a9 2021 Copyright: &lt;a class=\"text-reset fw-bold\"\n            href=\"https://mdbootstrap.com/\"&gt;MDBootstrap.com&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;!-- Copyright --&gt;\n&lt;/footer&gt;\n&lt;!-- Footer --&gt;\n</code></pre>"},{"location":"tiles/#dynamic-body","title":"Dynamic Body","text":"<pre><code>&lt;%@taglib prefix=\"tiles\" uri=\"http://tiles.apache.org/tags-tiles\"%&gt;\n&lt;%@ taglib prefix=\"s\" uri=\"/struts-tags\"%&gt;\n&lt;tiles:insertDefinition name=\"baseLayout\"&gt;\n    &lt;tiles:putAttribute name=\"body\"&gt;\n        &lt;div class=\"p-5 text-center bg-light\" style=\"margin-top: 58px;\"&gt;\n            &lt;center&gt;\n                &lt;h2&gt;Calculate sum of two numbers&lt;/h2&gt;\n                &lt;s:form action=\"/admin/calculateSumAction\" method=\"post\"&gt;\n                    &lt;s:textfield name=\"x\" size=\"10\" label=\"Enter X\" /&gt;\n                    &lt;s:textfield name=\"y\" size=\"10\" label=\"Enter Y\" /&gt;\n                    &lt;s:submit value=\"Calculate\" /&gt;\n                &lt;/s:form&gt;\n            &lt;/center&gt;\n        &lt;/div&gt;\n    &lt;/tiles:putAttribute&gt;\n&lt;/tiles:insertDefinition&gt;\n</code></pre>"},{"location":"tiles/#test","title":"Test","text":"<p>http://localhost:8080/Struts2Beginner/admin/index</p>"},{"location":"traefik/","title":"Treafik","text":""},{"location":"traefik/#traefik","title":"Traefik","text":""},{"location":"traefik/#with-k8s-crd-custom-resource-definitions","title":"With K8S + CRD (Custom Resource Definitions)","text":"<ul> <li> <p>IngressRoute Definition</p> <pre><code># Install Traefik Resource Definitions:\nkubectl apply -f https://raw.githubusercontent.com/traefik/traefik/v2.10/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1.yml\n\n# Install RBAC for Traefik:\nkubectl apply -f https://raw.githubusercontent.com/traefik/traefik/v2.10/docs/content/reference/dynamic-configuration/kubernetes-crd-rbac.yml\n</code></pre> </li> <li> <p>Services</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/traefik/traefik/v2.10/docs/content/user-guides/crd-acme/02-services.yml\n</code></pre> </li> <li> <p>\u4fee\u6539 traefik</p> <p><code>apiVersion: v1 kind: Service metadata: name: traefik spec: type: LoadBalancer # \u591a\u52a0\u9019\u4e00\u884c\uff0c\u66b4\u9732\u8857\u53e3 ports:     - protocol: TCP     name: web # web \u5165\u53e3     port: 8000     - protocol: TCP     name: admin # dashboard \u5165\u53e3     port: 8080     - protocol: TCP     name: websecure # web https \u5165\u53e3     port: 4443 selector:     app: traefik</code> - Deployments</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/traefik/traefik/v2.10/docs/content/user-guides/crd-acme/03-deployments.yml\n</code></pre> </li> <li> <p>Traefik Routers     ```     apiVersion: traefik.io/v1alpha1     kind: IngressRoute     metadata:     name: simpleingressroute     namespace: default     spec:     entryPoints:         - web     routes:</p> <ul> <li>match: Host(<code>192.168.0.17</code>) &amp;&amp; PathPrefix(<code>/notls</code>)   kind: Rule   services:<ul> <li>name: whoami   port: 80 ```</li> </ul> </li> </ul> <p><code>apiVersion: traefik.io/v1alpha1 kind: IngressRoute metadata: name: docker-demo namespace: default spec: entryPoints:     - web routes: - match: PathPrefix(`/docker-demo`)   kind: Rule   services:     - name: myapp   port: 80</code></p> </li> <li> <p>Dashboard</p> </li> </ul> <p>http://192.168.0.23:8080/dashboard/#/</p>  <ul> <li>\u6e2c\u8a66 URL\uff1a http://192.168.0.23:8000/notls</li> </ul>  <ul> <li> <p>Middlewares</p> </li> <li> <p>\u6982\u5ff5</p> </li> </ul>  <ul> <li>\u4fee\u6539 IngressRoute     <code>apiVersion: traefik.io/v1alpha1     kind: IngressRoute     metadata:     name: simpleingressroute     namespace: default     spec:     entryPoints:         - web     routes:         - match: Host(`192.168.0.23`) &amp;&amp; PathPrefix(`/notls`)         kind: Rule         middlewares:             - name: test-auth         services:             - name: whoami             port: 80</code></li> <li> <p>\u5efa\u7acb Middleware     ```     apiVersion: traefik.io/v1alpha1     kind: Middleware     metadata:     name: test-auth     spec:     basicAuth:         secret: authsecret</p>"},{"location":"traefik/#note-in-a-kubernetes-secret-the-string-eg-generated-by-htpasswd-must-be-base64-encoded-first","title":"Note: in a kubernetes secret the string (e.g. generated by htpasswd) must be base64-encoded first.","text":""},{"location":"traefik/#to-create-an-encoded-userpassword-pair-the-following-command-can-be-used","title":"To create an encoded user:password pair, the following command can be used:","text":""},{"location":"traefik/#htpasswd-nb-user-password-openssl-base64","title":"htpasswd -nb user password | openssl base64","text":"<p>apiVersion: v1 kind: Secret metadata: name: authsecret namespace: default data: users: dXNlcjokYXByMSRicC5FV295eCRXTWttUktBLzdjQWcycXNIL09XbXIxCgo=</p> <p>```</p> <pre><code>htpasswd -nb user password | openssl base64\n</code></pre>  <p>\u53bb\u770b Traefik Dashboard\uff0c\u6703\u770b\u5230\u591a\u4e00\u500b Middlewares</p>  <p>\u6253\u958b\u700f\u89bd\u5668\uff0c\u8f38\u5165 http://192.168.0.23:8000/notls</p>  <p>\u8f38\u5165\uff1auser/password \u5f8c\uff0c\u5c31\u53ef\u4ee5\u767b\u5165\u6210\u529f\uff0c\u4e26\u53d6\u5f97\u8cc7\u8a0a</p>  </li> </ul>"},{"location":"traefik/#middleware-error","title":"Middleware - Error","text":"<p>\u5efa\u7acb\u4e00\u500b Service</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: traefikerror\nspec:\n  type: LoadBalancer\n  ports:\n  - name: http\n    targetPort: 80\n    port: 80\n  selector:\n    app: traefikerror\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: traefikerror\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: traefikerror\n  template:\n    metadata:\n      labels:\n        app: traefikerror\n    spec:\n      containers:\n      - name: traefikerror\n        image: guillaumebriday/traefik-custom-error-pages\n        ports:\n        - containerPort: 80\n</code></pre> <p>\u5efa\u7acb Middleware</p> <pre><code>apiVersion: traefik.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-errors\nspec:\n  errors:\n    status:\n      - \"400-599\"\n    query: /{status}.html\n    service:\n      name: traefikerror\n      port: 80\n</code></pre> <p>\u52a0\u5165 Middleware</p> <pre><code>apiVersion: traefik.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: simpleingressroute\n  namespace: default\nspec:\n  entryPoints:\n    - web\n  routes:\n    - match: Host(`192.168.0.23`) &amp;&amp; PathPrefix(`/notls`)\n      kind: Rule\n      middlewares:\n        - name: test-auth\n        - name: test-errors\n      services:\n        - name: whoami\n          port: 80\n\n</code></pre>"},{"location":"traefik/#https","title":"\u66b4\u9732 HTTPS \u670d\u52d9","text":"<p>\u5148\u628a STAR_mic.com.tw.crt \u548c STAR_mic.com.tw.key \u5169\u500b\u6a94\u6848\u653e\u5230\u57f7\u884c\u76ee\u9304\u4e0b</p> <pre><code>![Alt text](image-15.png)\n</code></pre> <p>\u57f7\u884c\u6307\u4ee4</p> <pre><code>kubectl create secret tls mic-tls --cert=STAR_mic.com.tw.crt --key=STAR_mic.com.tw.key\n</code></pre>   <p>\u5728 IngressRoute \u4e2d\u52a0\u5165</p> <pre><code>apiVersion: traefik.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: ingressroutetls\n  namespace: default\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - kind: Rule\n      match: Host(`localhost.mic.com.tw`) &amp;&amp; PathPrefix(`/tls`)\n      services:\n        - name: whoami\n          port: 80\n  tls:\n    secretName: mic-tls\n</code></pre> <p>ps: \u5728\u672c\u6a5f\u7684hosts\u6a94\u4ffa\u4e2d\u52a0\u5165 192.168.0.23 localhost.mic.com.tw  (192.168.0.2 \u662f\u5b58\u53d6 Traefik \u7684\u66b4\u9732IP)</p> <p>https://localhost.mic.com.tw/tls</p>  <p>\u53c3\u8003\u7db2\u9801\uff1ahttps://www.readfog.com/a/1665375657830486016</p>"},{"location":"velero/","title":"Velero","text":"<p>\u53c3\u8003\u8cc7\u6599\uff1a - Velero \u521d\u63a2\u8207\u5be6\u8e10 https://kaichu.io/posts/velero-research-practice/ - \u5b98\u7db2 https://velero.io/docs/v1.11/how-velero-works/ - \u4f7f\u7528 Velero \u5099\u4efd\u9084\u539f Kubernetes \u96c6\u7fa3 https://www.readfog.com/a/1647215683490123776 - Quick start evaluation install with Minio https://velero.io/docs/main/contributions/minio - k8s1.24 \u4f7f\u7528Velero \u5099\u4efd\u9084\u539fRancher Longhorn\u4e0avolume\u8cc7\u6599 https://www.itnotetk.com/2022/11/28/k8s1-24-velero-%e5%82%99%e4%bb%bd%e9%82%84%e5%8e%9f-rancher-longhorn%e4%b8%8avolume%e8%b3%87%e6%96%99/</p>"},{"location":"velero/#_1","title":"\u904b\u4f5c\u65b9\u5f0f","text":"<ol> <li>Velero \u7684\u57fa\u672c\u64cd\u4f5c\u5c31\u662f CLI \u6703\u53bb\u64cd\u4f5c Kubernetes API \u5efa\u7acb Backup \u7269\u4ef6</li> <li>BackupController \u5075\u6e2c\u5230\u65b0\u7684 Backup \u7269\u4ef6\u4e26\u6aa2\u67e5</li> <li>\u6aa2\u67e5\u901a\u904e\u5f8c\u5c31\u6703\u64cd\u4f5c Kubernetes API Server \u9032\u884c\u8cc7\u6599\u7684\u5099\u4efd</li> <li>BackupController \u5c31\u6703\u900f\u904e Plugin \u6703\u64cd\u4f5c\u5c0d\u61c9\u7528 Object Storage Service \u4e0a\u50b3\u6a94\u6848</li> <li>\u5982\u679c Provider \u652f\u63f4\u539f\u751f\u7684\u5feb\u7167\u64cd\u4f5c, Plugin \u5c31\u53ef\u4ee5\u900f\u904e API \u5099\u5206\u6c38\u4e45\u78c1\u789f\u5340</li> </ol>"},{"location":"velero/#_2","title":"\u5b89\u88dd","text":"<p>\u4e0b\u8f09\u53ca\u89e3\u58d3\u7e2e</p> <pre><code>\nwget https://github.com/vmware-tanzu/velero/releases/download/v1.11.0/velero-v1.11.0-linux-amd64.tar.gz\n\ntar -zxvf velero-v1.11.0-linux-amd64.tar.gz &amp;&amp; cd velero-v1.11.0-linux-amd64\n\n</code></pre>"},{"location":"velero/#minio","title":"\u5b89\u88ddMINIO","text":"<p>\u8981\u5c07 examples/minio/00-minio-deployment.yaml \u4fee\u6539\u6210\u4ee5\u4e0b</p> <pre><code># Copyright 2017 the Velero contributors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: velero\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: velero\n  name: minio\n  labels:\n    component: minio\nspec:\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      component: minio\n  template:\n    metadata:\n      labels:\n        component: minio\n    spec:\n      volumes:\n      - name: storage\n        emptyDir: {}\n      - name: config\n        emptyDir: {}\n      containers:\n      - name: minio\n        image: minio/minio:latest\n        imagePullPolicy: IfNotPresent\n        args:\n        - server\n        - /storage\n        - --config-dir=/config\n        - --console-address=:9001\n        env:\n        - name: MINIO_ACCESS_KEY\n          value: \"minio\"\n        - name: MINIO_SECRET_KEY\n          value: \"minio123\"\n        ports:\n        - containerPort: 9000\n        - containerPort: 9001\n        volumeMounts:\n        - name: storage\n          mountPath: \"/storage\"\n        - name: config\n          mountPath: \"/config\"\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: velero\n  name: minio\n  labels:\n    component: minio\nspec:\n  type: NodePort\n  ports:\n    - name: api\n      port: 9000\n      targetPort: 9000\n    - name: console\n      port: 9001\n      targetPort: 9001\n  selector:\n    component: minio\n\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  namespace: velero\n  name: minio-setup\n  labels:\n    component: minio\nspec:\n  template:\n    metadata:\n      name: minio-setup\n    spec:\n      restartPolicy: OnFailure\n      volumes:\n      - name: config\n        emptyDir: {}\n      containers:\n      - name: mc\n        image: minio/mc:latest\n        imagePullPolicy: IfNotPresent\n        command:\n        - /bin/sh\n        - -c\n        - \"mc --config-dir=/config config host add velero http://minio:9000 minio minio123 &amp;&amp; mc --config-dir=/config mb -p velero/velero\"\n        volumeMounts:\n        - name: config\n          mountPath: \"/config\"\n\n</code></pre> <p>kubectl apply -f examples/minio/00-minio-deployment.yaml</p> <p>\u958b\u555f kubrnetes dashboard \u770b velero minio \u662f\u54ea\u500b Port\uff0c\u4e26\u958b\u555f\u700f\u89bd\u5668</p>  <p>http://192.168.0.17:32729/browser</p> <p>\u5e33\u865f/\u5bc6\u78bc\uff1aminio/minio123</p>  <p>P.S.\uff1a</p> <p>\u7576\u7136\u5982\u679c\u9700\u8981\u5728\u4e0d\u540c Kubernetes \u548c\u5b58\u5132\u6c60\u96c6\u7fa3\u5099\u4efd\u8207\u6062\u5fa9\u6578\u64da\uff0c\u9700\u8981\u5c07 minio \u670d\u52d9\u7aef\u5b89\u88dd\u5728 Kubernetes \u96c6\u7fa3\u5916\uff0c\u4fdd\u8b49\u5728\u96c6\u7fa3\u767c\u751f\u707d\u96e3\u6027\u6545\u969c\u6642\uff0c\u4e0d\u6703\u5c0d\u5099\u4efd\u6578\u64da\u7522\u751f\u5f71\u97ff\uff0c\u53ef\u4ee5\u901a\u904e\u4e8c\u9032\u5236\u7684\u65b9\u5f0f\u9032\u884c\u5b89\u88dd\u3002</p> <p>(\u7565) \u8acb\u53c3\u8003 https://www.readfog.com/a/1647215683490123776 \u5b89\u88dd MINIO</p>"},{"location":"velero/#velero","title":"\u5b89\u88dd velero \u670d\u52d9\u7aef","text":"<p>nano credentials-velero</p> <pre><code># \u79d8\u94a5\u6587\u4ef6credentials-velero\n[default]\naws_access_key_id = minio\naws_secret_access_key = minio123\n</code></pre> <p>velero install</p> <pre><code>velero install \\\n--provider aws \\\n--bucket velero \\\n--plugins velero/velero-plugin-for-aws:latest \\\n--plugins openebs/velero-plugin:ci \\\n--secret-file ./credentials-velero \\\n--use-volume-snapshots=false \\\n--backup-location-config region=minio,s3ForcePathStyle=\"true\",s3Url=http://minio.velero.svc.cluster.local:9000\n</code></pre> <p>PS\uff1as3Url=http://192.168.0.17:31883 PROT \u5f9e\u54ea\u88e1\u53d6\u5f97\uff1f</p> <p>minio.velero:30050 TCP  --&gt; MiniO \u7684 URL</p>  <p>minio.velero:31883 TCP  --&gt; MiniO \u7684 Dashboard URL</p> <p>http://192.168.0.17:30050/</p>"},{"location":"velero/#back-up","title":"Back up","text":"<p>\u5148\u5efa\u7acb\u4e00\u500b Namespace / Development / Service</p> <pre><code>cd ~/velero-v1.11.0-linux-amd64\nkubectl apply -f examples/nginx-app/base.yaml\n</code></pre> <p>Create a backup for any object that matches the app=nginx label selector:</p> <pre><code>velero backup create nginx-backup --selector app=nginx\n</code></pre>  <p>Run <code>velero backup describe nginx-backup</code> or <code>velero backup logs nginx-backup</code> for more details.</p>  <p>\u9019\u6642\u5019\u53bb\u770b MiniO \u7684 Dashboard\uff0c\u6703\u770b\u5230\u5099\u4efd\u7684\u6a94\u6848\u5728\u9019\u3002</p>  <p>Simulate a disaster <code>kubectl delete namespace nginx-example</code> To check that the nginx deployment and service are gone, run:</p> <pre><code>kubectl get deployments --namespace=nginx-example\nkubectl get services --namespace=nginx-example\nkubectl get namespace/nginx-example\n</code></pre>"},{"location":"velero/#restore","title":"Restore","text":"<pre><code>velero restore create --from-backup nginx-backup\n</code></pre> <p>Restore request \"nginx-backup-20230710100823\" submitted successfully. Run <code>velero restore describe nginx-backup-20230710100823</code> or <code>velero restore logs nginx-backup-20230710100823</code> for more details.</p> <pre><code># \u770b\u9032\u5ea6\nvelero restore get\n</code></pre>  <p>nginx-example \u5c31\u56de\u4f86\u4e86~</p>"},{"location":"velero/#clean-up","title":"Clean up","text":"<p>velero backup delete BACKUP_NAME</p> <p>velero uninstall --&gt; \u5168\u90e8\u79fb\u9664</p>"},{"location":"velero/#with-pv","title":"With PV","text":"<p>\u7bc4\u4f8b1     cd ~/velero-v1.11.0-linux-amd64     kubectl apply -f examples/nginx-app/with-pv.yaml</p> <pre><code>kubectl -n nginx-example annotate pod/nginx-deployment-78964c9995-cx4qs backup.velero.io/backup-volumes=nginx-logs\n\nvelero backup create nginx-backup --include-namespaces nginx-example --default-volumes-to-fs-backup --snapshot-volumes --ttl 180h\n\nvelero backup create nginx-backup --include-namespaces nginx-example --default-volumes-to-fs-backup\n</code></pre> <p>\u7bc4\u4f8b2</p> <p>\u8acb\u53c3\u8003 nfs \u7684 MySQL + NFS \u5efa\u7acb\u76f8\u95dc\u74b0\u5883\u8207pod</p> <pre><code>kubectl exec -it mysql-5b46fb64b4-t2m4c -n kube-demo -- /bin/bash\n</code></pre> <p>\u4e26\u4e14\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u8cc7\u6599\u5eab\uff0c\u4f5c\u70ba\u6e2c\u8a66\u7528   </p> <p>\u5099\u4efd</p> <pre><code>velero backup create mysql-backup --include-namespaces kube-demo --default-volumes-to-restic\n\nvelero backup describe mysql-backup\n\nminio \u6703\u6709\u5099\u4efd\u8cc7\u6599\n![Alt text](image-49.png)\n</code></pre>  <p>\u6a21\u64ec\u707d\u96e3</p> <pre><code>kubectl delete namespace kube-demo\n</code></pre> <p>\u5fa9\u539f</p> <pre><code>velero restore create --from-backup mysql-backup\n\nvelero restore get\n</code></pre> <p>\u6aa2\u67e5\u8cc7\u6599\u6709\u5426\u9084\u539f     kubectl exec -it mysql-5b46fb64b4-zj7n2 -n kube-demo -- /bin/bash   </p>"}]}